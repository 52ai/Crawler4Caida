{"version":3,"sources":["../../../../src/lib/algorithms/bounding-box-from-points.ts"],"names":["Vector3","Matrix3","computeEigenDecomposition","OrientedBoundingBox","AxisAlignedBoundingBox","scratchVector2","scratchVector3","scratchVector4","scratchVector5","scratchVector6","scratchCovarianceResult","scratchEigenResult","diagonal","unitary","makeOrientedBoundingBoxFromPoints","positions","result","length","halfAxes","center","meanPoint","position","add","invLength","multiplyByScalar","exx","exy","exz","eyy","eyz","ezz","p","copy","subtract","x","y","z","covarianceMatrix","rotation","v1","getColumn","v2","v3","u1","Number","MAX_VALUE","u2","u3","l1","l2","l3","Math","max","dot","min","scale","set","scaleMatrix","multiplyRight","makeAxisAlignedBoundingBoxFromPoints","minimum","maximum","halfDiagonal","minimumX","minimumY","minimumZ","maximumX","maximumY","maximumZ"],"mappings":"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","sourcesContent":["// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\n\nconst scratchVector2 = new Vector3();\n\nconst scratchVector3 = new Vector3();\n\nconst scratchVector4 = new Vector3();\n\nconst scratchVector5 = new Vector3();\n\nconst scratchVector6 = new Vector3();\n\nconst scratchCovarianceResult = new Matrix3();\n\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\n\n/**\n * Computes an instance of an OrientedBoundingBox of the given positions.\n *\n * This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n * Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n */\n/* eslint-disable max-statements */\nexport function makeOrientedBoundingBoxFromPoints(\n  positions: number[][],\n  result: OrientedBoundingBox = new OrientedBoundingBox()\n): OrientedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  const {unitary} = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    scratchVector2.copy(position);\n\n    u1 = Math.max(scratchVector2.dot(v1), u1);\n    u2 = Math.max(scratchVector2.dot(v2), u2);\n    u3 = Math.max(scratchVector2.dot(v3), u3);\n\n    l1 = Math.min(scratchVector2.dot(v1), l1);\n    l2 = Math.min(scratchVector2.dot(v2), l2);\n    l3 = Math.min(scratchVector2.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n\n  result.center.copy(v1).add(v2).add(v3);\n\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n\n  return result;\n}\n\n/**\n * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\n * finding the points spaced the farthest apart on the x, y, and z axes.\n */\nexport function makeAxisAlignedBoundingBoxFromPoints(\n  positions: readonly number[][],\n  result: AxisAlignedBoundingBox = new AxisAlignedBoundingBox()\n): AxisAlignedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  let minimumX = positions[0][0];\n  let minimumY = positions[0][1];\n  let minimumZ = positions[0][2];\n\n  let maximumX = positions[0][0];\n  let maximumY = positions[0][1];\n  let maximumZ = positions[0][2];\n\n  for (const p of positions) {\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n    minimumZ = Math.min(z, minimumZ);\n    maximumZ = Math.max(z, maximumZ);\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n\n  return result;\n}\n"],"file":"bounding-box-from-points.js"}