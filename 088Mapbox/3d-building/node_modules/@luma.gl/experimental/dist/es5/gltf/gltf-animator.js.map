{"version":3,"file":"gltf-animator.js","names":["ATTRIBUTE_TYPE_TO_COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY","Int8Array","Uint8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","accessorToJsArray","accessor","_animation","ArrayType","componentType","components","type","length","count","bufferView","data","buffer","byteOffset","array","Array","from","slicedArray","i","push","slice","helperMatrix","Matrix4","applyTranslationRotationScale","gltfNode","node","matrix","identity","translation","translate","rotation","rotationMatrix","fromQuaternion","multiplyRight","scale","quaternion","Quaternion","linearInterpolate","target","path","start","stop","ratio","slerp","cubicsplineInterpolate","p0","outTangent0","inTangent1","p1","tDiff","t","m0","m1","Math","pow","stepInterpolate","value","interpolate","time","input","interpolation","output","maxTime","animationTime","nextIndex","findIndex","previousIndex","max","isArray","log","warn","assert","previousTime","nextTime","GLTFAnimation","props","startTime","playing","speed","channels","Object","assign","timeMs","absTime","forEach","sampler","_node","GLTFAnimator","gltf","animations","map","animation","index","name","samplers","accessors","nodes","setTime","animate"],"sources":["../../../src/gltf/gltf-animator.js"],"sourcesContent":["import {assert, log} from '@luma.gl/webgl';\nimport {Matrix4, Quaternion} from '@math.gl/core';\n\n// TODO: import from loaders.gl?\nexport const ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nexport const ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n//\n\nfunction accessorToJsArray(accessor) {\n  if (!accessor._animation) {\n    const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n    const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n    const length = components * accessor.count;\n    const {buffer, byteOffset} = accessor.bufferView.data;\n\n    const array = new ArrayType(buffer, byteOffset + (accessor.byteOffset || 0), length);\n\n    if (components === 1) {\n      accessor._animation = Array.from(array);\n    } else {\n      // Slice array\n      const slicedArray = [];\n      for (let i = 0; i < array.length; i += components) {\n        slicedArray.push(Array.from(array.slice(i, i + components)));\n      }\n      accessor._animation = slicedArray;\n    }\n  }\n\n  return accessor._animation;\n}\n\n// TODO: share with GLTFInstantiator\nconst helperMatrix = new Matrix4();\nfunction applyTranslationRotationScale(gltfNode, node) {\n  node.matrix.identity();\n\n  if (gltfNode.translation) {\n    node.matrix.translate(gltfNode.translation);\n  }\n\n  if (gltfNode.rotation) {\n    const rotationMatrix = helperMatrix.fromQuaternion(gltfNode.rotation);\n    node.matrix.multiplyRight(rotationMatrix);\n  }\n\n  if (gltfNode.scale) {\n    node.matrix.scale(gltfNode.scale);\n  }\n}\n\nconst quaternion = new Quaternion();\nfunction linearInterpolate(target, path, start, stop, ratio) {\n  if (path === 'rotation') {\n    // SLERP when path is rotation\n    quaternion.slerp({start, target: stop, ratio});\n    for (let i = 0; i < quaternion.length; i++) {\n      target[path][i] = quaternion[i];\n    }\n  } else {\n    // regular interpolation\n    for (let i = 0; i < start.length; i++) {\n      target[path][i] = ratio * stop[i] + (1 - ratio) * start[i];\n    }\n  }\n}\n\nfunction cubicsplineInterpolate(target, path, {p0, outTangent0, inTangent1, p1, tDiff, ratio: t}) {\n  // TODO: Quaternion might need normalization\n  for (let i = 0; i < target[path].length; i++) {\n    const m0 = outTangent0[i] * tDiff;\n    const m1 = inTangent1[i] * tDiff;\n    target[path][i] =\n      (2 * Math.pow(t, 3) - 3 * Math.pow(t, 2) + 1) * p0[i] +\n      (Math.pow(t, 3) - 2 * Math.pow(t, 2) + t) * m0 +\n      (-2 * Math.pow(t, 3) + 3 * Math.pow(t, 2)) * p1[i] +\n      (Math.pow(t, 3) - Math.pow(t, 2)) * m1;\n  }\n}\n\nfunction stepInterpolate(target, path, value) {\n  for (let i = 0; i < value.length; i++) {\n    target[path][i] = value[i];\n  }\n}\n\nfunction interpolate(time, {input, interpolation, output}, target, path) {\n  const maxTime = input[input.length - 1];\n  const animationTime = time % maxTime;\n\n  const nextIndex = input.findIndex(t => t >= animationTime);\n  const previousIndex = Math.max(0, nextIndex - 1);\n\n  if (!Array.isArray(target[path])) {\n    switch (path) {\n      case 'translation':\n        target[path] = [0, 0, 0];\n        break;\n\n      case 'rotation':\n        target[path] = [0, 0, 0, 1];\n        break;\n\n      case 'scale':\n        target[path] = [1, 1, 1];\n        break;\n\n      default:\n        log.warn(`Bad animation path ${path}`)();\n    }\n  }\n\n  assert(target[path].length === output[previousIndex].length);\n  const previousTime = input[previousIndex];\n  const nextTime = input[nextIndex];\n\n  switch (interpolation) {\n    case 'STEP':\n      stepInterpolate(target, path, output[previousIndex]);\n      break;\n\n    case 'LINEAR':\n      if (nextTime > previousTime) {\n        const ratio = (animationTime - previousTime) / (nextTime - previousTime);\n        linearInterpolate(target, path, output[previousIndex], output[nextIndex], ratio);\n      }\n      break;\n\n    case 'CUBICSPLINE':\n      if (nextTime > previousTime) {\n        const ratio = (animationTime - previousTime) / (nextTime - previousTime);\n        const tDiff = nextTime - previousTime;\n\n        const p0 = output[3 * previousIndex + 1];\n        const outTangent0 = output[3 * previousIndex + 2];\n        const inTangent1 = output[3 * nextIndex + 0];\n        const p1 = output[3 * nextIndex + 1];\n\n        cubicsplineInterpolate(target, path, {p0, outTangent0, inTangent1, p1, tDiff, ratio});\n      }\n      break;\n\n    default:\n      log.warn(`Interpolation ${interpolation} not supported`)();\n      break;\n  }\n}\n\nclass GLTFAnimation {\n  constructor(props) {\n    this.startTime = 0;\n    this.playing = true;\n    this.speed = 1;\n    this.channels = [];\n\n    Object.assign(this, props);\n  }\n\n  animate(timeMs) {\n    if (!this.playing) {\n      return;\n    }\n\n    const absTime = timeMs / 1000;\n    const time = (absTime - this.startTime) * this.speed;\n\n    this.channels.forEach(({sampler, target, path}) => {\n      interpolate(time, sampler, target, path);\n      applyTranslationRotationScale(target, target._node);\n    });\n  }\n}\n\nexport default class GLTFAnimator {\n  constructor(gltf) {\n    this.animations = gltf.animations.map((animation, index) => {\n      const name = animation.name || `Animation-${index}`;\n      const samplers = animation.samplers.map(({input, interpolation = 'LINEAR', output}) => ({\n        input: accessorToJsArray(gltf.accessors[input]),\n        interpolation,\n        output: accessorToJsArray(gltf.accessors[output])\n      }));\n      const channels = animation.channels.map(({sampler, target}) => ({\n        sampler: samplers[sampler],\n        target: gltf.nodes[target.node],\n        path: target.path\n      }));\n      return new GLTFAnimation({name, channels});\n    });\n  }\n\n  // TODO(Tarek): This should be removed? (deck.gl is using this)\n  animate(time) {\n    this.setTime(time);\n  }\n\n  setTime(time) {\n    this.animations.forEach(animation => animation.animate(time));\n  }\n\n  getAnimations() {\n    return this.animations;\n  }\n}\n"],"mappings":"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"}