{"version":3,"file":"gltf-material-parser.js","names":["GLTFMaterialParser","gl","attributes","material","pbrDebug","imageBasedLightingEnvironment","lights","useTangents","defines","MANUAL_SRGB","SRGB_FAST_APPROXIMATION","hasFeature","FEATURES","GLSL_TEXTURE_LOD","USE_TEX_LOD","uniforms","u_Camera","u_MetallicRoughnessValues","parameters","generatedTextures","u_DiffuseEnvSampler","getDiffuseEnvSampler","u_SpecularEnvSampler","getSpecularEnvSampler","u_brdfLUT","getBrdfTexture","u_ScaleIBLAmbient","u_ScaleDiffBaseMR","u_ScaleFGDSpec","defineIfPresent","NORMAL","TANGENT","TEXCOORD_0","parseMaterial","value","name","gltfTexture","define","texture","sampler","image","source","textureOptions","specialTextureParameters","compressed","TEXTURE_MIN_FILTER","data","length","LINEAR_MIPMAP_NEAREST","LINEAR","Texture2D","id","pixelStore","UNPACK_FLIP_Y_WEBGL","push","pbrMetallicRoughness","baseColorTexture","parseTexture","u_BaseColorFactor","baseColorFactor","metallicRoughnessTexture","metallicFactor","roughnessFactor","pbr_uUnlit","Boolean","unlit","parsePbrMetallicRoughness","normalTexture","scale","u_NormalScale","occlusionTexture","strength","u_OcclusionStrength","emissiveTexture","u_EmissiveFactor","emissiveFactor","alphaMode","alphaCutoff","ALPHA_CUTOFF","u_AlphaCutoff","log","warn","Object","assign","blend","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","forEach","delete"],"sources":["../../../src/gltf/gltf-material-parser.js"],"sourcesContent":["import {Texture2D, hasFeature, FEATURES, log} from '@luma.gl/webgl';\n\nexport default class GLTFMaterialParser {\n  constructor(\n    gl,\n    {attributes, material, pbrDebug, imageBasedLightingEnvironment, lights, useTangents}\n  ) {\n    this.gl = gl;\n\n    this.defines = {\n      // TODO: Use EXT_sRGB if available (Standard in WebGL 2.0)\n      MANUAL_SRGB: 1,\n      SRGB_FAST_APPROXIMATION: 1\n    };\n\n    if (hasFeature(gl, FEATURES.GLSL_TEXTURE_LOD)) {\n      this.defines.USE_TEX_LOD = 1;\n    }\n\n    this.uniforms = {\n      // TODO: find better values?\n      u_Camera: [0, 0, 0], // Model should override\n\n      u_MetallicRoughnessValues: [1, 1] // Default is 1 and 1\n    };\n\n    this.parameters = {};\n    this.generatedTextures = [];\n\n    if (imageBasedLightingEnvironment) {\n      this.uniforms.u_DiffuseEnvSampler = imageBasedLightingEnvironment.getDiffuseEnvSampler();\n      this.uniforms.u_SpecularEnvSampler = imageBasedLightingEnvironment.getSpecularEnvSampler();\n      this.uniforms.u_brdfLUT = imageBasedLightingEnvironment.getBrdfTexture();\n      this.uniforms.u_ScaleIBLAmbient = [1, 1];\n    }\n\n    if (pbrDebug) {\n      // Override final color for reference app visualization\n      // of various parameters in the lighting equation.\n      this.uniforms.u_ScaleDiffBaseMR = [0, 0, 0, 0];\n      this.uniforms.u_ScaleFGDSpec = [0, 0, 0, 0];\n    }\n\n    this.defineIfPresent(attributes.NORMAL, 'HAS_NORMALS');\n    this.defineIfPresent(attributes.TANGENT && useTangents, 'HAS_TANGENTS');\n    this.defineIfPresent(attributes.TEXCOORD_0, 'HAS_UV');\n\n    this.defineIfPresent(imageBasedLightingEnvironment, 'USE_IBL');\n    this.defineIfPresent(lights, 'USE_LIGHTS');\n    this.defineIfPresent(pbrDebug, 'PBR_DEBUG');\n\n    if (material) {\n      this.parseMaterial(material);\n    }\n  }\n\n  defineIfPresent(value, name) {\n    if (value) {\n      this.defines[name] = 1;\n    }\n  }\n\n  parseTexture(gltfTexture, name, define = null) {\n    const parameters =\n      (gltfTexture.texture &&\n        gltfTexture.texture.sampler &&\n        gltfTexture.texture.sampler.parameters) ||\n      {};\n\n    const image = gltfTexture.texture.source.image;\n    let textureOptions;\n    let specialTextureParameters = {};\n    if (image.compressed) {\n      textureOptions = image;\n      specialTextureParameters = {\n        [this.gl.TEXTURE_MIN_FILTER]:\n          image.data.length > 1 ? this.gl.LINEAR_MIPMAP_NEAREST : this.gl.LINEAR\n      };\n    } else {\n      // Texture2D accepts a promise that returns an image as data (Async Textures)\n      textureOptions = {data: image};\n    }\n\n    const texture = new Texture2D(this.gl, {\n      id: gltfTexture.name || gltfTexture.id,\n      parameters: {\n        ...parameters,\n        ...specialTextureParameters\n      },\n      pixelStore: {\n        [this.gl.UNPACK_FLIP_Y_WEBGL]: false\n      },\n      ...textureOptions\n    });\n    this.uniforms[name] = texture;\n    this.defineIfPresent(define, define);\n    this.generatedTextures.push(texture);\n  }\n\n  parsePbrMetallicRoughness(pbrMetallicRoughness) {\n    if (pbrMetallicRoughness.baseColorTexture) {\n      this.parseTexture(\n        pbrMetallicRoughness.baseColorTexture,\n        'u_BaseColorSampler',\n        'HAS_BASECOLORMAP'\n      );\n    }\n    this.uniforms.u_BaseColorFactor = pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1];\n\n    if (pbrMetallicRoughness.metallicRoughnessTexture) {\n      this.parseTexture(\n        pbrMetallicRoughness.metallicRoughnessTexture,\n        'u_MetallicRoughnessSampler',\n        'HAS_METALROUGHNESSMAP'\n      );\n    }\n    const {metallicFactor = 1, roughnessFactor = 1} = pbrMetallicRoughness;\n    this.uniforms.u_MetallicRoughnessValues = [metallicFactor, roughnessFactor];\n  }\n\n  parseMaterial(material) {\n    this.uniforms.pbr_uUnlit = Boolean(material.unlit);\n\n    if (material.pbrMetallicRoughness) {\n      this.parsePbrMetallicRoughness(material.pbrMetallicRoughness);\n    }\n    if (material.normalTexture) {\n      this.parseTexture(material.normalTexture, 'u_NormalSampler', 'HAS_NORMALMAP');\n\n      const {scale = 1} = material.normalTexture;\n      this.uniforms.u_NormalScale = scale;\n    }\n    if (material.occlusionTexture) {\n      this.parseTexture(material.occlusionTexture, 'u_OcclusionSampler', 'HAS_OCCLUSIONMAP');\n\n      const {strength = 1} = material.occlusionTexture;\n      this.uniforms.u_OcclusionStrength = strength;\n    }\n    if (material.emissiveTexture) {\n      this.parseTexture(material.emissiveTexture, 'u_EmissiveSampler', 'HAS_EMISSIVEMAP');\n      this.uniforms.u_EmissiveFactor = material.emissiveFactor || [0, 0, 0];\n    }\n    if (material.alphaMode === 'MASK') {\n      const {alphaCutoff = 0.5} = material;\n      this.defines.ALPHA_CUTOFF = 1;\n      this.uniforms.u_AlphaCutoff = alphaCutoff;\n    } else if (material.alphaMode === 'BLEND') {\n      log.warn('BLEND alphaMode might not work well because it requires mesh sorting')();\n      Object.assign(this.parameters, {\n        blend: true,\n        blendEquation: this.gl.FUNC_ADD,\n        blendFunc: [\n          this.gl.SRC_ALPHA,\n          this.gl.ONE_MINUS_SRC_ALPHA,\n          this.gl.ONE,\n          this.gl.ONE_MINUS_SRC_ALPHA\n        ]\n      });\n    }\n  }\n\n  /**\n   * Destroy all generated resources to release memory.\n   */\n  delete() {\n    this.generatedTextures.forEach(texture => texture.delete());\n  }\n}\n"],"mappings":"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"}