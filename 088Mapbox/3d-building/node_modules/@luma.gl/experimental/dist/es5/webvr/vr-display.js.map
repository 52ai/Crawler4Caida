{"version":3,"file":"vr-display.js","names":["VRDisplay","props","_vrSupported","isSupported","vrFrameData","window","VRFrameData","vrPresenting","vrFrame","addEventListener","_vrDisplayPresentChange","bind","_removeVRButton","options","_addVRButton","vrDisplay","getFrameData","leftProjectionMatrix","leftViewMatrix","rightProjectionMatrix","rightViewMatrix","width","height","displayEye","projectionMatrix","viewMatrix","params","viewport","scissor","scissorTest","submitFrame","renderFrame","requestAnimationFrame","vrButton","canvas","_getCanvas","navigator","getVRDisplays","displays","length","log","info","createEnterVRButton","title","displayName","onclick","_startDisplay","animationLoop","gl","requestPresent","source","isPresenting","style","display","Display"],"sources":["../../../src/webvr/vr-display.js"],"sourcesContent":["import {log} from '@luma.gl/webgl';\nimport Display from './display';\nimport {createEnterVRButton} from './vr-button';\n\nexport default class VRDisplay extends Display {\n  static isSupported() {\n    return (\n      typeof navigator !== 'undefined' && 'getVRDisplays' in navigator && 'VRFrameData' in window\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._vrSupported = VRDisplay.isSupported();\n    if (this._vrSupported) {\n      // @ts-expect-error\n      this.vrFrameData = new window.VRFrameData();\n      this.vrPresenting = false;\n      this.vrFrame = false;\n      window.addEventListener('vrdisplaypresentchange', this._vrDisplayPresentChange.bind(this));\n    }\n  }\n\n  delete() {\n    super.delete();\n    this._removeVRButton();\n  }\n\n  getViews(options) {\n    if (this._vrSupported) {\n      this._addVRButton();\n    }\n\n    // Need both vrPresenting and vrFrame\n    // to avoid race conditions when we exit VR\n    // after we schedule an animation frame\n    if (this.vrPresenting && this.vrFrame) {\n      this.vrDisplay.getFrameData(this.vrFrameData);\n\n      const {\n        leftProjectionMatrix,\n        leftViewMatrix,\n        rightProjectionMatrix,\n        rightViewMatrix\n      } = this.vrFrameData;\n\n      const {width, height} = options;\n\n      return [\n        {\n          displayEye: 'left',\n          projectionMatrix: leftProjectionMatrix,\n          viewMatrix: leftViewMatrix,\n          params: {\n            viewport: [0, 0, width * 0.5, height],\n            scissor: [0, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        },\n        {\n          displayEye: 'right',\n          projectionMatrix: rightProjectionMatrix,\n          viewMatrix: rightViewMatrix,\n          params: {\n            viewport: [width * 0.5, 0, width * 0.5, height],\n            scissor: [width * 0.5, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        }\n      ];\n    }\n\n    return super.getViews(options);\n  }\n\n  submitFrame() {\n    if (this.vrPresenting && this.vrFrame) {\n      this.vrDisplay.submitFrame();\n      return true;\n    }\n\n    return false;\n  }\n\n  requestAnimationFrame(renderFrame) {\n    if (this.vrPresenting) {\n      this.vrDisplay.requestAnimationFrame(() => {\n        this.vrFrame = true;\n        renderFrame();\n        this.vrFrame = false;\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  // PRIVATE\n\n  // TODO: Consider resizing canvas to match vrDisplay.getEyeParameters()\n  // TODO: Maybe allow to select display?\n  async _addVRButton() {\n    if (this.vrButton) {\n      return;\n    }\n\n    const canvas = this._getCanvas();\n    if (!canvas) {\n      return;\n    }\n\n    // @ts-expect-error\n    const displays = await navigator.getVRDisplays();\n    if (displays && displays.length) {\n      log.info(2, 'Found VR Displays', displays)();\n\n      this.vrDisplay = displays[0];\n      this.vrButton = createEnterVRButton({\n        canvas,\n        title: `Enter VR (${this.vrDisplay.displayName})`\n      });\n      this.vrButton.onclick = () => this._startDisplay();\n    }\n  }\n\n  _getCanvas() {\n    return this.animationLoop.canvas || (this.animationLoop.gl && this.animationLoop.gl.canvas);\n  }\n\n  _removeVRButton() {\n    if (this.vrButton) {\n      // TODO\n    }\n  }\n\n  _startDisplay() {\n    // @ts-ignore\n    this.vrDisplay.requestPresent([\n      {\n        source: this._getCanvas()\n      }\n    ]);\n  }\n\n  _vrDisplayPresentChange() {\n    if (this.vrDisplay.isPresenting) {\n      log.info(2, 'Entering VR')();\n\n      this.vrPresenting = true;\n      this.vrButton.style.display = 'none';\n    } else {\n      log.info(2, 'Exiting VR')();\n\n      this.vrPresenting = false;\n      this.vrButton.style.display = 'block';\n    }\n  }\n}\n"],"mappings":"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"}