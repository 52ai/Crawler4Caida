{"version":3,"file":"dotscreen.js","names":["fs","uniforms","center","angle","value","softMin","softMax","Math","PI","size","min","dotScreen","name","passes","filter"],"sources":["../../../../src/modules/image-fun-filters/dotscreen.js"],"sourcesContent":["/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nconst fs = `\\\nuniform vec2 center;\nuniform float angle;\nuniform float size;\n\nfloat pattern(vec2 texSize, vec2 texCoord) {\n  float scale = 3.1415 / size;\n\n  float s = sin(angle), c = cos(angle);\n  vec2 tex = texCoord * texSize - center * texSize;\n  vec2 point = vec2(\n    c * tex.x - s * tex.y,\n    s * tex.x + c * tex.y\n  ) * scale;\n  return (sin(point.x) * sin(point.y)) * 4.0;\n}\n\nvec4 dotScreen_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  float average = (color.r + color.g + color.b) / 3.0;\n  return vec4(vec3(average * 10.0 - 5.0 + pattern(texSize, texCoord)), color.a);\n}\n`;\n\nconst uniforms = {\n  center: [0.5, 0.5],\n  angle: {value: 1.1, softMin: 0, softMax: Math.PI / 2},\n  size: {value: 3, min: 1, softMin: 3, softMax: 20}\n};\n\n/** @type {ShaderPass} */\nexport const dotScreen = {\n  name: 'dotScreen',\n  uniforms,\n  fs,\n  passes: [{filter: true}]\n};\n"],"mappings":"AAEA,MAAMA,EAAE,ylBAAR;AAuBA,MAAMC,QAAQ,GAAG;EACfC,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADO;EAEfC,KAAK,EAAE;IAACC,KAAK,EAAE,GAAR;IAAaC,OAAO,EAAE,CAAtB;IAAyBC,OAAO,EAAEC,IAAI,CAACC,EAAL,GAAU;EAA5C,CAFQ;EAGfC,IAAI,EAAE;IAACL,KAAK,EAAE,CAAR;IAAWM,GAAG,EAAE,CAAhB;IAAmBL,OAAO,EAAE,CAA5B;IAA+BC,OAAO,EAAE;EAAxC;AAHS,CAAjB;AAOA,OAAO,MAAMK,SAAS,GAAG;EACvBC,IAAI,EAAE,WADiB;EAEvBX,QAFuB;EAGvBD,EAHuB;EAIvBa,MAAM,EAAE,CAAC;IAACC,MAAM,EAAE;EAAT,CAAD;AAJe,CAAlB"}