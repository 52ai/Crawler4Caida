{"version":3,"file":"bulgepinch.js","names":["warp","fs","uniforms","center","radius","value","min","softMax","strength","max","bulgePinch","name","dependencies","passes","sampler"],"sources":["../../../../src/modules/image-warp-filters/bulgepinch.js"],"sourcesContent":["/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nimport {warp} from './warp';\n\nconst fs = `\\\nuniform float radius;\nuniform float strength;\nuniform vec2 center;\n\nvec2 bulgePinch_warp(vec2 coord, vec2 texCenter) {\n  coord -= texCenter;\n  float distance = length(coord);\n  if (distance < radius) {\n    float percent = distance / radius;\n    if (strength > 0.0) {\n      coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\n    } else {\n      coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\n    }\n  }\n  coord += texCenter;\n  return coord;\n}\n\nvec4 bulgePinch_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 coord = texCoord * texSize;\n  coord = bulgePinch_warp(coord, center * texSize);\n\n  return warp_sampleColor(texture, texSize, coord);\n}\n`;\n\nconst uniforms = {\n  center: [0.5, 0.5],\n  radius: {value: 200, min: 1, softMax: 600},\n  strength: {value: 0.5, min: -1, max: 1}\n};\n\n/** @type {ShaderPass} */\nexport const bulgePinch = {\n  name: 'bulgePinch',\n  fs,\n  uniforms,\n  dependencies: [warp],\n  passes: [{sampler: true}]\n};\n"],"mappings":"AAEA,SAAQA,IAAR,QAAmB,QAAnB;AAEA,MAAMC,EAAE,6vBAAR;AA4BA,MAAMC,QAAQ,GAAG;EACfC,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADO;EAEfC,MAAM,EAAE;IAACC,KAAK,EAAE,GAAR;IAAaC,GAAG,EAAE,CAAlB;IAAqBC,OAAO,EAAE;EAA9B,CAFO;EAGfC,QAAQ,EAAE;IAACH,KAAK,EAAE,GAAR;IAAaC,GAAG,EAAE,CAAC,CAAnB;IAAsBG,GAAG,EAAE;EAA3B;AAHK,CAAjB;AAOA,OAAO,MAAMC,UAAU,GAAG;EACxBC,IAAI,EAAE,YADkB;EAExBV,EAFwB;EAGxBC,QAHwB;EAIxBU,YAAY,EAAE,CAACZ,IAAD,CAJU;EAKxBa,MAAM,EAAE,CAAC;IAACC,OAAO,EAAE;EAAV,CAAD;AALgB,CAAnB"}