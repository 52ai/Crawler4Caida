{"version":3,"file":"resource.js","names":["isWebGL2","assertWebGLContext","lumaStats","StatsManager","getKey","getKeyValue","assert","uid","stubRemovedMethods","ERR_RESOURCE_METHOD_UNDEFINED","Resource","Symbol","toStringTag","constructor","gl","opts","id","userData","gl2","_bound","_handle","handle","undefined","_createHandle","byteLength","_initStats","_addStats","toString","name","delete","deleteChildren","children","_deleteHandle","_removeStats","filter","Boolean","forEach","child","bind","funcOrHandle","_bindHandle","value","unbind","getParameter","pname","parameters","PARAMETERS","parameter","isWebgl2","parameterAvailable","getExtension","extension","webgl1Default","webgl1","webgl2Default","webgl2","defaultValue","_getParameter","getParameters","options","keys","values","parameterKeys","Object","key","type","setParameter","Error","_setParameter","setParameters","className","version","methodNames","initialize","_getOptsFromHandle","_context","luma","stats","get","incrementCount","decrementCount","_trackAllocatedMemory","bytes","_doTrackAllocatedMemory","addCount","_trackDeallocatedMemory","_doTrackDeallocatedMemory","subtractCount"],"sources":["../../../src/classes/resource.js"],"sourcesContent":["import {isWebGL2, assertWebGLContext} from '@luma.gl/gltools';\nimport {lumaStats, StatsManager} from '../init';\nimport {getKey, getKeyValue} from '../webgl-utils/constants-to-keys';\nimport {assert} from '../utils/assert';\nimport {uid} from '../utils/utils';\nimport {stubRemovedMethods} from '../utils/stub-methods';\n\nconst ERR_RESOURCE_METHOD_UNDEFINED = 'Resource subclass must define virtual methods';\n\n// TODO - Handle context loss\n// function glGetContextLossCount(gl) {\n//   return (gl.luma && gl.luma.glCount) || 0;\n// }\n\nexport default class Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Resource';\n  }\n  constructor(gl, opts = {}) {\n    assertWebGLContext(gl);\n\n    const {id, userData = {}} = opts;\n    this.gl = gl;\n    // @ts-ignore\n    this.gl2 = gl;\n    // this.ext = polyfillContext(gl);\n    this.id = id || uid(this[Symbol.toStringTag]);\n    this.userData = userData;\n    this._bound = false;\n\n    // Set the handle\n    // If handle was provided, use it, otherwise create a new handle\n\n    // TODO - Stores the handle with context loss information\n    // this.glCount = glGetContextLossCount(this.gl);\n\n    // Default VertexArray needs to be created with null handle, so compare against undefined\n    this._handle = opts.handle;\n    if (this._handle === undefined) {\n      this._handle = this._createHandle();\n    }\n\n    // Only meaningful for resources that allocate GPU memory\n    this.byteLength = 0;\n\n    this._initStats();\n    this._addStats();\n  }\n\n  toString() {\n    return `${this[Symbol.toStringTag] || this.constructor.name}(${this.id})`;\n  }\n\n  get handle() {\n    // TODO - Add context loss handling\n    // Will regenerate and reinitialize the handle if necessary\n    // const glCount = glGetContextLossCount(this.gl);\n    // if (this.glCount !== glCount) {\n    //   this._handle = this._createHandle(this.opts);\n    //   this._glCount = glCount;\n    //   // Reinitialize object\n    //   this.initialize(this.opts);\n    // }\n    return this._handle;\n  }\n\n  delete({deleteChildren = false} = {}) {\n    // Delete this object, and get refs to any children\n    // @ts-ignore\n    const children = this._handle && this._deleteHandle(this._handle);\n    if (this._handle) {\n      this._removeStats();\n    }\n    this._handle = null;\n\n    // Optionally, recursively delete the children\n    // @ts-ignore\n    if (children && deleteChildren) {\n      // @ts-ignore\n      children.filter(Boolean).forEach(child => child.delete());\n    }\n\n    return this;\n  }\n\n  bind(funcOrHandle = this.handle) {\n    if (typeof funcOrHandle !== 'function') {\n      this._bindHandle(funcOrHandle);\n      return this;\n    }\n\n    let value;\n\n    if (!this._bound) {\n      this._bindHandle(this.handle);\n      this._bound = true;\n\n      value = funcOrHandle();\n\n      this._bound = false;\n      this._bindHandle(null);\n    } else {\n      value = funcOrHandle();\n    }\n\n    return value;\n  }\n\n  unbind() {\n    this.bind(null);\n  }\n\n  /**\n   * Query a Resource parameter\n   *\n   * @param {GLenum} pname\n   * @return {GLint|GLfloat|GLenum} param\n   */\n  getParameter(pname, opts = {}) {\n    pname = getKeyValue(this.gl, pname);\n    assert(pname);\n\n    // @ts-ignore\n    const parameters = this.constructor.PARAMETERS || {};\n\n    // Use parameter definitions to handle unsupported parameters\n    const parameter = parameters[pname];\n    if (parameter) {\n      const isWebgl2 = isWebGL2(this.gl);\n\n      // Check if we can query for this parameter\n      const parameterAvailable =\n        (!('webgl2' in parameter) || isWebgl2) &&\n        (!('extension' in parameter) || this.gl.getExtension(parameter.extension));\n\n      if (!parameterAvailable) {\n        const webgl1Default = parameter.webgl1;\n        const webgl2Default = 'webgl2' in parameter ? parameter.webgl2 : parameter.webgl1;\n        const defaultValue = isWebgl2 ? webgl2Default : webgl1Default;\n        return defaultValue;\n      }\n    }\n\n    // If unknown parameter - Could be a valid parameter not covered by PARAMS\n    // Attempt to query for it and let WebGL report errors\n    return this._getParameter(pname, opts);\n  }\n\n  // Many resources support a getParameter call -\n  // getParameters will get all parameters - slow but useful for debugging\n  // eslint-disable-next-line complexity\n  getParameters(options = {}) {\n    const {parameters, keys} = options;\n\n    // Get parameter definitions for this Resource\n    // @ts-ignore\n    const PARAMETERS = this.constructor.PARAMETERS || {};\n\n    const isWebgl2 = isWebGL2(this.gl);\n\n    const values = {};\n\n    // Query all parameters if no list provided\n    const parameterKeys = parameters || Object.keys(PARAMETERS);\n\n    // WEBGL limits\n    for (const pname of parameterKeys) {\n      const parameter = PARAMETERS[pname];\n\n      // Check if this parameter is available on this platform\n      const parameterAvailable =\n        parameter &&\n        (!('webgl2' in parameter) || isWebgl2) &&\n        (!('extension' in parameter) || this.gl.getExtension(parameter.extension));\n\n      if (parameterAvailable) {\n        const key = keys ? getKey(this.gl, pname) : pname;\n        values[key] = this.getParameter(pname, options);\n        if (keys && parameter.type === 'GLenum') {\n          values[key] = getKey(this.gl, values[key]);\n        }\n      }\n    }\n\n    return values;\n  }\n\n  /**\n   * Update a Resource setting\n   *\n   * @todo - cache parameter to avoid issuing WebGL calls?\n   *\n   * @param {string} pname - parameter (GL constant, value or key)\n   * @param {GLint|GLfloat|GLenum} value\n   * @return {Resource} returns self to enable chaining\n   */\n  setParameter(pname, value) {\n    pname = getKeyValue(this.gl, pname);\n    assert(pname);\n\n    // @ts-ignore\n    const parameters = this.constructor.PARAMETERS || {};\n\n    const parameter = parameters[pname];\n    if (parameter) {\n      const isWebgl2 = isWebGL2(this.gl);\n\n      // Check if this parameter is available on this platform\n      const parameterAvailable =\n        (!('webgl2' in parameter) || isWebgl2) &&\n        (!('extension' in parameter) || this.gl.getExtension(parameter.extension));\n\n      if (!parameterAvailable) {\n        throw new Error('Parameter not available on this platform');\n      }\n\n      // Handle string keys\n      if (parameter.type === 'GLenum') {\n        value = getKeyValue(value);\n      }\n    }\n\n    // If unknown parameter - Could be a valid parameter not covered by PARAMS\n    // attempt to set it and let WebGL report errors\n    this._setParameter(pname, value);\n    return this;\n  }\n\n  /*\n   * Batch update resource parameters\n   * Assumes the subclass supports a setParameter call\n   */\n  setParameters(parameters) {\n    for (const pname in parameters) {\n      this.setParameter(pname, parameters[pname]);\n    }\n    return this;\n  }\n\n  // Install stubs for removed methods\n  stubRemovedMethods(className, version, methodNames) {\n    return stubRemovedMethods(this, className, version, methodNames);\n  }\n\n  // PUBLIC VIRTUAL METHODS\n  initialize(opts) {}\n\n  // PROTECTED METHODS - These must be overridden by subclass\n  _createHandle() {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _deleteHandle() {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _bindHandle(handle) {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _getOptsFromHandle() {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  /** @returns {number} */\n  _getParameter(pname, opts) {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _setParameter(pname, value) {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  // PRIVATE METHODS\n\n  _context() {\n    this.gl.luma = this.gl.luma || {};\n    return this.gl.luma;\n  }\n\n  _initStats() {\n    this.gl.stats = this.gl.stats || new StatsManager();\n  }\n\n  _addStats() {\n    const name = this[Symbol.toStringTag];\n    const stats = lumaStats.get('Resource Counts');\n\n    stats.get('Resources Created').incrementCount();\n    stats.get(`${name}s Created`).incrementCount();\n    stats.get(`${name}s Active`).incrementCount();\n  }\n\n  _removeStats() {\n    const name = this[Symbol.toStringTag];\n    const stats = lumaStats.get('Resource Counts');\n\n    stats.get(`${name}s Active`).decrementCount();\n  }\n\n  _trackAllocatedMemory(bytes, name = this[Symbol.toStringTag]) {\n    this._doTrackAllocatedMemory(bytes, name);\n    this._doTrackAllocatedMemory(bytes, name, this.gl.stats.get(`Memory Usage`));\n  }\n\n  _doTrackAllocatedMemory(\n    bytes,\n    name = this[Symbol.toStringTag],\n    stats = lumaStats.get(`Memory Usage`)\n  ) {\n    stats.get('GPU Memory').addCount(bytes);\n    stats.get(`${name} Memory`).addCount(bytes);\n    this.byteLength = bytes;\n  }\n\n  _trackDeallocatedMemory(name = this[Symbol.toStringTag]) {\n    this._doTrackDeallocatedMemory(name);\n    this._doTrackDeallocatedMemory(name, this.gl.stats.get(`Memory Usage`));\n  }\n\n  _doTrackDeallocatedMemory(\n    name = this[Symbol.toStringTag],\n    stats = lumaStats.get(`Memory Usage`)\n  ) {\n    stats.get('GPU Memory').subtractCount(this.byteLength);\n    stats.get(`${name} Memory`).subtractCount(this.byteLength);\n    this.byteLength = 0;\n  }\n}\n"],"mappings":"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"}