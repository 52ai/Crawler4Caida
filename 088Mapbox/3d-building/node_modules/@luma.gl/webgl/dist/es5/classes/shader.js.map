{"version":3,"file":"shader.js","names":["ERR_SOURCE","Shader","gl","props","assertWebGLContext","assert","source","id","getShaderName","uid","getTypeName","shaderType","initialize","shaderName","_compile","pname","getShaderParameter","handle","getShaderSource","extension","getExtension","getTranslatedShaderSource","startsWith","shaderSource","compileShader","compileStatus","getParameter","infoLog","getShaderInfoLog","parseGLSLCompilerError","errors","warnings","log","error","warn","Error","deleteShader","type","getSource","Resource","Symbol","toStringTag","VertexShader","Object","assign","createShader","FragmentShader"],"sources":["../../../src/classes/shader.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {assertWebGLContext, log} from '@luma.gl/gltools';\nimport {parseGLSLCompilerError, getShaderName} from '../glsl-utils';\nimport {assert} from '../utils/assert';\nimport {uid} from '../utils/utils';\nimport Resource from './resource';\n\nconst ERR_SOURCE = 'Shader: GLSL source code must be a JavaScript string';\n\n// For now this is an internal class\nexport class Shader extends Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Shader';\n  }\n\n  static getTypeName(shaderType) {\n    switch (shaderType) {\n      case GL.VERTEX_SHADER:\n        return 'vertex-shader';\n      case GL.FRAGMENT_SHADER:\n        return 'fragment-shader';\n      default:\n        assert(false);\n        return 'unknown';\n    }\n  }\n\n  /* eslint-disable max-statements */\n  constructor(gl, props) {\n    assertWebGLContext(gl);\n\n    // Validate arguments\n    assert(typeof props.source === 'string', ERR_SOURCE);\n\n    // Deduce an id, from shader source, or supplied id, or shader type\n    const id =\n      getShaderName(props.source, null) ||\n      props.id ||\n      uid(`unnamed ${Shader.getTypeName(props.shaderType)}`);\n\n    super(gl, {id});\n\n    this.shaderType = props.shaderType;\n    this.source = props.source;\n\n    this.initialize(props);\n  }\n\n  initialize({source}) {\n    const shaderName = getShaderName(source, null);\n    if (shaderName) {\n      this.id = uid(shaderName);\n    }\n    this._compile(source);\n  }\n\n  // Accessors\n\n  getParameter(pname) {\n    return this.gl.getShaderParameter(this.handle, pname);\n  }\n\n  toString() {\n    return `${Shader.getTypeName(this.shaderType)}:${this.id}`;\n  }\n\n  getName() {\n    return getShaderName(this.source) || 'unnamed-shader';\n  }\n\n  getSource() {\n    return this.gl.getShaderSource(this.handle);\n  }\n\n  // Debug method - Returns translated source if available\n  getTranslatedSource() {\n    const extension = this.gl.getExtension('WEBGL_debug_shaders');\n    return extension\n      ? extension.getTranslatedShaderSource(this.handle)\n      : 'No translated source available. WEBGL_debug_shaders not implemented';\n  }\n\n  // PRIVATE METHODS\n  _compile(source = this.source) {\n    if (!source.startsWith('#version ')) {\n      source = `#version 100\\n${source}`;\n    }\n    this.source = source;\n    this.gl.shaderSource(this.handle, this.source);\n    this.gl.compileShader(this.handle);\n\n    // TODO - For performance reasons, avoid checking shader compilation errors on production?\n    // TODO - Load log even when no error reported, to catch warnings?\n    // https://gamedev.stackexchange.com/questions/30429/how-to-detect-glsl-warnings\n    const compileStatus = this.getParameter(GL.COMPILE_STATUS);\n    if (!compileStatus) {\n      const infoLog = this.gl.getShaderInfoLog(this.handle);\n      const {shaderName, errors, warnings} = parseGLSLCompilerError(\n        infoLog,\n        this.source,\n        this.shaderType,\n        this.id\n      );\n      log.error(`GLSL compilation errors in ${shaderName}\\n${errors}`)();\n      log.warn(`GLSL compilation warnings in ${shaderName}\\n${warnings}`)();\n      throw new Error(`GLSL compilation errors in ${shaderName}`);\n    }\n  }\n\n  _deleteHandle() {\n    this.gl.deleteShader(this.handle);\n  }\n\n  _getOptsFromHandle() {\n    return {\n      type: this.getParameter(GL.SHADER_TYPE),\n      source: this.getSource()\n    };\n  }\n}\n\nexport class VertexShader extends Shader {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'VertexShader';\n  }\n\n  constructor(gl, props) {\n    // Signature: new VertexShader(gl, source)\n    if (typeof props === 'string') {\n      props = {source: props};\n    }\n    super(gl, Object.assign({}, props, {shaderType: GL.VERTEX_SHADER}));\n  }\n\n  // PRIVATE METHODS\n  _createHandle() {\n    return this.gl.createShader(GL.VERTEX_SHADER);\n  }\n}\n\nexport class FragmentShader extends Shader {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'FragmentShader';\n  }\n  constructor(gl, props) {\n    // Signature: new FragmentShader(gl, source)\n    if (typeof props === 'string') {\n      props = {source: props};\n    }\n\n    super(gl, Object.assign({}, props, {shaderType: GL.FRAGMENT_SHADER}));\n  }\n\n  // PRIVATE METHODS\n  _createHandle() {\n    return this.gl.createShader(GL.FRAGMENT_SHADER);\n  }\n}\n"],"mappings":"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"}