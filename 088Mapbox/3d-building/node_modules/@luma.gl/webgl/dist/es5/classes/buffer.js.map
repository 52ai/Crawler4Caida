{"version":3,"file":"buffer.js","names":["DEBUG_DATA_LENGTH","DEPRECATED_PROPS","offset","stride","type","size","divisor","normalized","integer","instanced","isInstanced","PROP_CHECKS_INITIALIZE","removedProps","replacedProps","bytes","deprecatedProps","PROP_CHECKS_SET_PROPS","Buffer","gl","props","stubRemovedMethods","target","webgl2","initialize","Object","seal","accessor","Math","round","byteLength","Accessor","getBytesPerElement","getBytesPerVertex","ArrayBuffer","isView","data","Number","isFinite","checkProps","usage","debugData","setAccessor","assign","_setData","_setByteLength","buffer","bytesUsed","srcOffset","length","assert","bindBuffer","handle","undefined","assertWebGL2Context","bufferSubData","_inferType","sourceBuffer","readOffset","writeOffset","copyBufferSubData","dstData","srcByteOffset","dstOffset","ArrayType","getTypedArrayFromGLType","clamped","sourceAvailableElementCount","_getAvailableElementCount","dstElementOffset","dstAvailableElementCount","dstElementCount","min","copyElementCount","getBufferSubData","index","bindBufferRange","bindBufferBase","isIndexedBuffer","getData","changed","_trackDeallocatedMemory","_getTarget","bufferData","slice","_trackAllocatedMemory","getGLTypeFromTypedArray","Float32Array","sourceElementOffset","BYTES_PER_ELEMENT","getElementCount","createBuffer","deleteBuffer","pname","value","getBufferParameter","log","deprecated","reallocate","opts","Resource","Symbol","toStringTag"],"sources":["../../../src/classes/buffer.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport Resource from './resource';\nimport Accessor from './accessor';\nimport {getGLTypeFromTypedArray, getTypedArrayFromGLType} from '../webgl-utils/typed-array-utils';\nimport {assertWebGL2Context, log} from '@luma.gl/gltools';\nimport {assert} from '../utils/assert';\nimport {checkProps} from '../utils/check-props';\n\nconst DEBUG_DATA_LENGTH = 10;\n\n// Shared prop checks for constructor and setProps\nconst DEPRECATED_PROPS = {\n  offset: 'accessor.offset',\n  stride: 'accessor.stride',\n  type: 'accessor.type',\n  size: 'accessor.size',\n  divisor: 'accessor.divisor',\n  normalized: 'accessor.normalized',\n  integer: 'accessor.integer',\n  instanced: 'accessor.divisor',\n  isInstanced: 'accessor.divisor'\n};\n\n// Prop checks for constructor\nconst PROP_CHECKS_INITIALIZE = {\n  removedProps: {},\n  replacedProps: {\n    bytes: 'byteLength'\n  },\n  // new Buffer() with individual accessor props is still used in apps, emit warnings\n  deprecatedProps: DEPRECATED_PROPS\n};\n\n// Prop checks for setProps\nconst PROP_CHECKS_SET_PROPS = {\n  // Buffer.setProps() with individual accessor props is rare => emit errors\n  removedProps: DEPRECATED_PROPS\n};\n\nexport default class Buffer extends Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Buffer';\n  }\n  constructor(gl, props = {}) {\n    super(gl, props);\n\n    this.stubRemovedMethods('Buffer', 'v6.0', ['layout', 'setLayout', 'getIndexedParameter']);\n    // this.stubRemovedMethods('Buffer', 'v7.0', ['updateAccessor']);\n\n    // In WebGL1, need to make sure we use GL.ELEMENT_ARRAY_BUFFER when initializing element buffers\n    // otherwise buffer type will lock to generic (non-element) buffer\n    // In WebGL2, we can use GL.COPY_READ_BUFFER which avoids locking the type here\n    this.target = props.target || (this.gl.webgl2 ? GL.COPY_READ_BUFFER : GL.ARRAY_BUFFER);\n\n    this.initialize(props);\n\n    Object.seal(this);\n  }\n\n  // returns number of elements in the buffer (assuming that the full buffer is used)\n  getElementCount(accessor = this.accessor) {\n    return Math.round(this.byteLength / Accessor.getBytesPerElement(accessor));\n  }\n\n  // returns number of vertices in the buffer (assuming that the full buffer is used)\n  getVertexCount(accessor = this.accessor) {\n    return Math.round(this.byteLength / Accessor.getBytesPerVertex(accessor));\n  }\n\n  // Creates and initializes the buffer object's data store.\n  // Signature: `new Buffer(gl, {data: new Float32Array(...)})`\n  // Signature: `new Buffer(gl, new Float32Array(...))`\n  // Signature: `new Buffer(gl, 100)`\n  initialize(props = {}) {\n    // Signature `new Buffer(gl, new Float32Array(...)`\n    if (ArrayBuffer.isView(props)) {\n      props = {data: props};\n    }\n\n    // Signature: `new Buffer(gl, 100)`\n    if (Number.isFinite(props)) {\n      props = {byteLength: props};\n    }\n\n    props = checkProps('Buffer', props, PROP_CHECKS_INITIALIZE);\n\n    // Initialize member fields\n    this.usage = props.usage || GL.STATIC_DRAW;\n    this.debugData = null;\n\n    // Deprecated: Merge main props and accessor\n    this.setAccessor(Object.assign({}, props, props.accessor));\n\n    // Set data: (re)initializes the buffer\n    if (props.data) {\n      this._setData(props.data, props.offset, props.byteLength);\n    } else {\n      this._setByteLength(props.byteLength || 0);\n    }\n\n    return this;\n  }\n\n  setProps(props) {\n    props = checkProps('Buffer', props, PROP_CHECKS_SET_PROPS);\n\n    if ('accessor' in props) {\n      this.setAccessor(props.accessor);\n    }\n\n    return this;\n  }\n\n  // Optionally stores an accessor with the buffer, makes it easier to use it as an attribute later\n  // {type, size = 1, offset = 0, stride = 0, normalized = false, integer = false, divisor = 0}\n  setAccessor(accessor) {\n    // NOTE: From luma.gl v7.0, Accessors have an optional `buffer `field\n    // (mainly to support \"interleaving\")\n    // To avoid confusion, ensure `buffer.accessor` does not have a `buffer.accessor.buffer` field:\n    accessor = Object.assign({}, accessor);\n    delete accessor.buffer;\n\n    // This new statement ensures that an \"accessor object\" is re-packaged as an Accessor instance\n    this.accessor = new Accessor(accessor);\n    return this;\n  }\n\n  // Allocate a bigger GPU buffer (if the current buffer is not big enough).\n  // If a reallocation is triggered it clears the buffer\n  // Returns:\n  //  `true`: buffer was reallocated, data was cleared\n  //  `false`: buffer was big enough, data is intact\n  reallocate(byteLength) {\n    if (byteLength > this.byteLength) {\n      this._setByteLength(byteLength);\n      return true;\n    }\n    this.bytesUsed = byteLength;\n    return false;\n  }\n\n  // Update with new data. Reinitializes the buffer\n  setData(props) {\n    return this.initialize(props);\n  }\n\n  // Updates a subset of a buffer object's data store.\n  // Data (Typed Array or ArrayBuffer), length is inferred unless provided\n  // Offset into buffer\n  // WebGL2 only: Offset into srcData\n  // WebGL2 only: Number of bytes to be copied\n  subData(props) {\n    // Signature: buffer.subData(new Float32Array([...]))\n    if (ArrayBuffer.isView(props)) {\n      props = {data: props};\n    }\n\n    const {data, offset = 0, srcOffset = 0} = props;\n    const byteLength = props.byteLength || props.length;\n\n    assert(data);\n\n    // Create the buffer - binding it here for the first time locks the type\n    // In WebGL2, use GL.COPY_WRITE_BUFFER to avoid locking the type\n    const target = this.gl.webgl2 ? GL.COPY_WRITE_BUFFER : this.target;\n    this.gl.bindBuffer(target, this.handle);\n    // WebGL2: subData supports additional srcOffset and length parameters\n    if (srcOffset !== 0 || byteLength !== undefined) {\n      assertWebGL2Context(this.gl);\n      this.gl.bufferSubData(this.target, offset, data, srcOffset, byteLength);\n    } else {\n      this.gl.bufferSubData(target, offset, data);\n    }\n    this.gl.bindBuffer(target, null);\n\n    // TODO - update local `data` if offsets are right\n    this.debugData = null;\n\n    this._inferType(data);\n\n    return this;\n  }\n\n  // WEBGL2 ONLY: Copies part of the data of another buffer into this buffer\n  copyData({sourceBuffer, readOffset = 0, writeOffset = 0, size}) {\n    const {gl} = this;\n    assertWebGL2Context(gl);\n\n    // Use GL.COPY_READ_BUFFER+GL.COPY_WRITE_BUFFER avoid disturbing other targets and locking type\n    gl.bindBuffer(GL.COPY_READ_BUFFER, sourceBuffer.handle);\n    gl.bindBuffer(GL.COPY_WRITE_BUFFER, this.handle);\n    gl.copyBufferSubData(GL.COPY_READ_BUFFER, GL.COPY_WRITE_BUFFER, readOffset, writeOffset, size);\n    gl.bindBuffer(GL.COPY_READ_BUFFER, null);\n    gl.bindBuffer(GL.COPY_WRITE_BUFFER, null);\n\n    // TODO - update local `data` if offsets are 0\n    this.debugData = null;\n\n    return this;\n  }\n\n  // WEBGL2 ONLY: Reads data from buffer into an ArrayBufferView or SharedArrayBuffer.\n  getData({dstData = null, srcByteOffset = 0, dstOffset = 0, length = 0} = {}) {\n    assertWebGL2Context(this.gl);\n\n    const ArrayType = getTypedArrayFromGLType(this.accessor.type || GL.FLOAT, {clamped: false});\n    const sourceAvailableElementCount = this._getAvailableElementCount(srcByteOffset);\n\n    const dstElementOffset = dstOffset;\n\n    let dstAvailableElementCount;\n    let dstElementCount;\n    if (dstData) {\n      dstElementCount = dstData.length;\n      dstAvailableElementCount = dstElementCount - dstElementOffset;\n    } else {\n      // Allocate ArrayBufferView with enough size to copy all eligible data.\n      dstAvailableElementCount = Math.min(\n        sourceAvailableElementCount,\n        length || sourceAvailableElementCount\n      );\n      dstElementCount = dstElementOffset + dstAvailableElementCount;\n    }\n\n    const copyElementCount = Math.min(sourceAvailableElementCount, dstAvailableElementCount);\n    length = length || copyElementCount;\n    assert(length <= copyElementCount);\n    dstData = dstData || new ArrayType(dstElementCount);\n\n    // Use GL.COPY_READ_BUFFER to avoid disturbing other targets and locking type\n    this.gl.bindBuffer(GL.COPY_READ_BUFFER, this.handle);\n    this.gl.getBufferSubData(GL.COPY_READ_BUFFER, srcByteOffset, dstData, dstOffset, length);\n    this.gl.bindBuffer(GL.COPY_READ_BUFFER, null);\n\n    // TODO - update local `data` if offsets are 0\n    return dstData;\n  }\n\n  /**\n   * Binds a buffer to a given binding point (target).\n   *   GL.TRANSFORM_FEEDBACK_BUFFER and GL.UNIFORM_BUFFER take an index, and optionally a range.\n   *   - GL.TRANSFORM_FEEDBACK_BUFFER and GL.UNIFORM_BUFFER need an index to affect state\n   *   - GL.UNIFORM_BUFFER: `offset` must be aligned to GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT.\n   *   - GL.UNIFORM_BUFFER: `size` must be a minimum of GL.UNIFORM_BLOCK_SIZE_DATA.\n   */\n  bind({\n    target = this.target, // target for the bind operation\n    index = this.accessor && this.accessor.index, // index = index of target (indexed bind point)\n    offset = 0,\n    size\n  } = {}) {\n    // NOTE: While GL.TRANSFORM_FEEDBACK_BUFFER and GL.UNIFORM_BUFFER could\n    // be used as direct binding points, they will not affect transform feedback or\n    // uniform buffer state. Instead indexed bindings need to be made.\n    if (target === GL.UNIFORM_BUFFER || target === GL.TRANSFORM_FEEDBACK_BUFFER) {\n      if (size !== undefined) {\n        this.gl.bindBufferRange(target, index, this.handle, offset, size);\n      } else {\n        assert(offset === 0); // Make sure offset wasn't supplied\n        this.gl.bindBufferBase(target, index, this.handle);\n      }\n    } else {\n      this.gl.bindBuffer(target, this.handle);\n    }\n\n    return this;\n  }\n\n  unbind({target = this.target, index = this.accessor && this.accessor.index} = {}) {\n    const isIndexedBuffer = target === GL.UNIFORM_BUFFER || target === GL.TRANSFORM_FEEDBACK_BUFFER;\n    if (isIndexedBuffer) {\n      this.gl.bindBufferBase(target, index, null);\n    } else {\n      this.gl.bindBuffer(target, null);\n    }\n    return this;\n  }\n\n  // PROTECTED METHODS (INTENDED FOR USE BY OTHER FRAMEWORK CODE ONLY)\n\n  // Returns a short initial data array\n  getDebugData() {\n    if (!this.debugData) {\n      this.debugData = this.getData({length: Math.min(DEBUG_DATA_LENGTH, this.byteLength)});\n      return {data: this.debugData, changed: true};\n    }\n    return {data: this.debugData, changed: false};\n  }\n\n  invalidateDebugData() {\n    this.debugData = null;\n  }\n\n  // PRIVATE METHODS\n\n  // Allocate a new buffer and initialize to contents of typed array\n  _setData(data, offset = 0, byteLength = data.byteLength + offset) {\n    assert(ArrayBuffer.isView(data));\n\n    this._trackDeallocatedMemory();\n\n    const target = this._getTarget();\n    this.gl.bindBuffer(target, this.handle);\n    this.gl.bufferData(target, byteLength, this.usage);\n    this.gl.bufferSubData(target, offset, data);\n    this.gl.bindBuffer(target, null);\n\n    this.debugData = data.slice(0, DEBUG_DATA_LENGTH);\n    this.bytesUsed = byteLength;\n\n    this._trackAllocatedMemory(byteLength);\n\n    // infer GL type from supplied typed array\n    const type = getGLTypeFromTypedArray(data);\n    assert(type);\n    this.setAccessor(new Accessor(this.accessor, {type}));\n    return this;\n  }\n\n  // Allocate a GPU buffer of specified size.\n  _setByteLength(byteLength, usage = this.usage) {\n    assert(byteLength >= 0);\n\n    this._trackDeallocatedMemory();\n\n    // Workaround needed for Safari (#291):\n    // gl.bufferData with size equal to 0 crashes. Instead create zero sized array.\n    let data = byteLength;\n    if (byteLength === 0) {\n      data = new Float32Array(0);\n    }\n\n    const target = this._getTarget();\n    this.gl.bindBuffer(target, this.handle);\n    this.gl.bufferData(target, data, usage);\n    this.gl.bindBuffer(target, null);\n\n    this.usage = usage;\n    this.debugData = null;\n    this.bytesUsed = byteLength;\n\n    this._trackAllocatedMemory(byteLength);\n\n    return this;\n  }\n\n  // Binding a buffer for the first time locks the type\n  // In WebGL2, use GL.COPY_WRITE_BUFFER to avoid locking the type\n  _getTarget() {\n    return this.gl.webgl2 ? GL.COPY_WRITE_BUFFER : this.target;\n  }\n\n  _getAvailableElementCount(srcByteOffset) {\n    const ArrayType = getTypedArrayFromGLType(this.accessor.type || GL.FLOAT, {clamped: false});\n    const sourceElementOffset = srcByteOffset / ArrayType.BYTES_PER_ELEMENT;\n    return this.getElementCount() - sourceElementOffset;\n  }\n\n  // Automatically infers type from typed array passed to setData\n  // Note: No longer that useful, since type is now autodeduced from the compiled shaders\n  _inferType(data) {\n    if (!this.accessor.type) {\n      this.setAccessor(new Accessor(this.accessor, {type: getGLTypeFromTypedArray(data)}));\n    }\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createBuffer();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteBuffer(this.handle);\n    this._trackDeallocatedMemory();\n  }\n\n  _getParameter(pname) {\n    this.gl.bindBuffer(this.target, this.handle);\n    const value = this.gl.getBufferParameter(this.target, pname);\n    this.gl.bindBuffer(this.target, null);\n    return value;\n  }\n\n  // DEPRECATIONS - v7.0\n  get type() {\n    log.deprecated('Buffer.type', 'Buffer.accessor.type')();\n    return this.accessor.type;\n  }\n\n  get bytes() {\n    log.deprecated('Buffer.bytes', 'Buffer.byteLength')();\n    return this.byteLength;\n  }\n\n  // DEPRECATIONS - v6.0\n  // Deprecated in v6.x, but not warnings not properly implemented\n  setByteLength(byteLength) {\n    log.deprecated('setByteLength', 'reallocate')();\n    return this.reallocate(byteLength);\n  }\n\n  // Deprecated in v6.x, but not warnings not properly implemented\n  updateAccessor(opts) {\n    log.deprecated('updateAccessor(...)', 'setAccessor(new Accessor(buffer.accessor, ...)')();\n    this.accessor = new Accessor(this.accessor, opts);\n    return this;\n  }\n}\n"],"mappings":"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"}