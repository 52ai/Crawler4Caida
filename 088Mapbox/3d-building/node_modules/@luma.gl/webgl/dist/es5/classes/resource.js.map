{"version":3,"file":"resource.js","names":["ERR_RESOURCE_METHOD_UNDEFINED","Resource","gl","opts","assertWebGLContext","id","userData","gl2","uid","Symbol","toStringTag","_bound","_handle","handle","undefined","_createHandle","byteLength","_initStats","_addStats","constructor","name","deleteChildren","children","_deleteHandle","_removeStats","filter","Boolean","forEach","child","delete","funcOrHandle","_bindHandle","value","bind","pname","getKeyValue","assert","parameters","PARAMETERS","parameter","isWebgl2","isWebGL2","parameterAvailable","getExtension","extension","webgl1Default","webgl1","webgl2Default","webgl2","defaultValue","_getParameter","options","keys","values","parameterKeys","Object","key","getKey","getParameter","type","Error","_setParameter","setParameter","className","version","methodNames","stubRemovedMethods","luma","stats","StatsManager","lumaStats","get","incrementCount","decrementCount","bytes","_doTrackAllocatedMemory","addCount","_doTrackDeallocatedMemory","subtractCount"],"sources":["../../../src/classes/resource.js"],"sourcesContent":["import {isWebGL2, assertWebGLContext} from '@luma.gl/gltools';\nimport {lumaStats, StatsManager} from '../init';\nimport {getKey, getKeyValue} from '../webgl-utils/constants-to-keys';\nimport {assert} from '../utils/assert';\nimport {uid} from '../utils/utils';\nimport {stubRemovedMethods} from '../utils/stub-methods';\n\nconst ERR_RESOURCE_METHOD_UNDEFINED = 'Resource subclass must define virtual methods';\n\n// TODO - Handle context loss\n// function glGetContextLossCount(gl) {\n//   return (gl.luma && gl.luma.glCount) || 0;\n// }\n\nexport default class Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Resource';\n  }\n  constructor(gl, opts = {}) {\n    assertWebGLContext(gl);\n\n    const {id, userData = {}} = opts;\n    this.gl = gl;\n    // @ts-ignore\n    this.gl2 = gl;\n    // this.ext = polyfillContext(gl);\n    this.id = id || uid(this[Symbol.toStringTag]);\n    this.userData = userData;\n    this._bound = false;\n\n    // Set the handle\n    // If handle was provided, use it, otherwise create a new handle\n\n    // TODO - Stores the handle with context loss information\n    // this.glCount = glGetContextLossCount(this.gl);\n\n    // Default VertexArray needs to be created with null handle, so compare against undefined\n    this._handle = opts.handle;\n    if (this._handle === undefined) {\n      this._handle = this._createHandle();\n    }\n\n    // Only meaningful for resources that allocate GPU memory\n    this.byteLength = 0;\n\n    this._initStats();\n    this._addStats();\n  }\n\n  toString() {\n    return `${this[Symbol.toStringTag] || this.constructor.name}(${this.id})`;\n  }\n\n  get handle() {\n    // TODO - Add context loss handling\n    // Will regenerate and reinitialize the handle if necessary\n    // const glCount = glGetContextLossCount(this.gl);\n    // if (this.glCount !== glCount) {\n    //   this._handle = this._createHandle(this.opts);\n    //   this._glCount = glCount;\n    //   // Reinitialize object\n    //   this.initialize(this.opts);\n    // }\n    return this._handle;\n  }\n\n  delete({deleteChildren = false} = {}) {\n    // Delete this object, and get refs to any children\n    // @ts-ignore\n    const children = this._handle && this._deleteHandle(this._handle);\n    if (this._handle) {\n      this._removeStats();\n    }\n    this._handle = null;\n\n    // Optionally, recursively delete the children\n    // @ts-ignore\n    if (children && deleteChildren) {\n      // @ts-ignore\n      children.filter(Boolean).forEach(child => child.delete());\n    }\n\n    return this;\n  }\n\n  bind(funcOrHandle = this.handle) {\n    if (typeof funcOrHandle !== 'function') {\n      this._bindHandle(funcOrHandle);\n      return this;\n    }\n\n    let value;\n\n    if (!this._bound) {\n      this._bindHandle(this.handle);\n      this._bound = true;\n\n      value = funcOrHandle();\n\n      this._bound = false;\n      this._bindHandle(null);\n    } else {\n      value = funcOrHandle();\n    }\n\n    return value;\n  }\n\n  unbind() {\n    this.bind(null);\n  }\n\n  /**\n   * Query a Resource parameter\n   *\n   * @param {GLenum} pname\n   * @return {GLint|GLfloat|GLenum} param\n   */\n  getParameter(pname, opts = {}) {\n    pname = getKeyValue(this.gl, pname);\n    assert(pname);\n\n    // @ts-ignore\n    const parameters = this.constructor.PARAMETERS || {};\n\n    // Use parameter definitions to handle unsupported parameters\n    const parameter = parameters[pname];\n    if (parameter) {\n      const isWebgl2 = isWebGL2(this.gl);\n\n      // Check if we can query for this parameter\n      const parameterAvailable =\n        (!('webgl2' in parameter) || isWebgl2) &&\n        (!('extension' in parameter) || this.gl.getExtension(parameter.extension));\n\n      if (!parameterAvailable) {\n        const webgl1Default = parameter.webgl1;\n        const webgl2Default = 'webgl2' in parameter ? parameter.webgl2 : parameter.webgl1;\n        const defaultValue = isWebgl2 ? webgl2Default : webgl1Default;\n        return defaultValue;\n      }\n    }\n\n    // If unknown parameter - Could be a valid parameter not covered by PARAMS\n    // Attempt to query for it and let WebGL report errors\n    return this._getParameter(pname, opts);\n  }\n\n  // Many resources support a getParameter call -\n  // getParameters will get all parameters - slow but useful for debugging\n  // eslint-disable-next-line complexity\n  getParameters(options = {}) {\n    const {parameters, keys} = options;\n\n    // Get parameter definitions for this Resource\n    // @ts-ignore\n    const PARAMETERS = this.constructor.PARAMETERS || {};\n\n    const isWebgl2 = isWebGL2(this.gl);\n\n    const values = {};\n\n    // Query all parameters if no list provided\n    const parameterKeys = parameters || Object.keys(PARAMETERS);\n\n    // WEBGL limits\n    for (const pname of parameterKeys) {\n      const parameter = PARAMETERS[pname];\n\n      // Check if this parameter is available on this platform\n      const parameterAvailable =\n        parameter &&\n        (!('webgl2' in parameter) || isWebgl2) &&\n        (!('extension' in parameter) || this.gl.getExtension(parameter.extension));\n\n      if (parameterAvailable) {\n        const key = keys ? getKey(this.gl, pname) : pname;\n        values[key] = this.getParameter(pname, options);\n        if (keys && parameter.type === 'GLenum') {\n          values[key] = getKey(this.gl, values[key]);\n        }\n      }\n    }\n\n    return values;\n  }\n\n  /**\n   * Update a Resource setting\n   *\n   * @todo - cache parameter to avoid issuing WebGL calls?\n   *\n   * @param {string} pname - parameter (GL constant, value or key)\n   * @param {GLint|GLfloat|GLenum} value\n   * @return {Resource} returns self to enable chaining\n   */\n  setParameter(pname, value) {\n    pname = getKeyValue(this.gl, pname);\n    assert(pname);\n\n    // @ts-ignore\n    const parameters = this.constructor.PARAMETERS || {};\n\n    const parameter = parameters[pname];\n    if (parameter) {\n      const isWebgl2 = isWebGL2(this.gl);\n\n      // Check if this parameter is available on this platform\n      const parameterAvailable =\n        (!('webgl2' in parameter) || isWebgl2) &&\n        (!('extension' in parameter) || this.gl.getExtension(parameter.extension));\n\n      if (!parameterAvailable) {\n        throw new Error('Parameter not available on this platform');\n      }\n\n      // Handle string keys\n      if (parameter.type === 'GLenum') {\n        value = getKeyValue(value);\n      }\n    }\n\n    // If unknown parameter - Could be a valid parameter not covered by PARAMS\n    // attempt to set it and let WebGL report errors\n    this._setParameter(pname, value);\n    return this;\n  }\n\n  /*\n   * Batch update resource parameters\n   * Assumes the subclass supports a setParameter call\n   */\n  setParameters(parameters) {\n    for (const pname in parameters) {\n      this.setParameter(pname, parameters[pname]);\n    }\n    return this;\n  }\n\n  // Install stubs for removed methods\n  stubRemovedMethods(className, version, methodNames) {\n    return stubRemovedMethods(this, className, version, methodNames);\n  }\n\n  // PUBLIC VIRTUAL METHODS\n  initialize(opts) {}\n\n  // PROTECTED METHODS - These must be overridden by subclass\n  _createHandle() {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _deleteHandle() {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _bindHandle(handle) {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _getOptsFromHandle() {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  /** @returns {number} */\n  _getParameter(pname, opts) {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  _setParameter(pname, value) {\n    throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n  }\n\n  // PRIVATE METHODS\n\n  _context() {\n    this.gl.luma = this.gl.luma || {};\n    return this.gl.luma;\n  }\n\n  _initStats() {\n    this.gl.stats = this.gl.stats || new StatsManager();\n  }\n\n  _addStats() {\n    const name = this[Symbol.toStringTag];\n    const stats = lumaStats.get('Resource Counts');\n\n    stats.get('Resources Created').incrementCount();\n    stats.get(`${name}s Created`).incrementCount();\n    stats.get(`${name}s Active`).incrementCount();\n  }\n\n  _removeStats() {\n    const name = this[Symbol.toStringTag];\n    const stats = lumaStats.get('Resource Counts');\n\n    stats.get(`${name}s Active`).decrementCount();\n  }\n\n  _trackAllocatedMemory(bytes, name = this[Symbol.toStringTag]) {\n    this._doTrackAllocatedMemory(bytes, name);\n    this._doTrackAllocatedMemory(bytes, name, this.gl.stats.get(`Memory Usage`));\n  }\n\n  _doTrackAllocatedMemory(\n    bytes,\n    name = this[Symbol.toStringTag],\n    stats = lumaStats.get(`Memory Usage`)\n  ) {\n    stats.get('GPU Memory').addCount(bytes);\n    stats.get(`${name} Memory`).addCount(bytes);\n    this.byteLength = bytes;\n  }\n\n  _trackDeallocatedMemory(name = this[Symbol.toStringTag]) {\n    this._doTrackDeallocatedMemory(name);\n    this._doTrackDeallocatedMemory(name, this.gl.stats.get(`Memory Usage`));\n  }\n\n  _doTrackDeallocatedMemory(\n    name = this[Symbol.toStringTag],\n    stats = lumaStats.get(`Memory Usage`)\n  ) {\n    stats.get('GPU Memory').subtractCount(this.byteLength);\n    stats.get(`${name} Memory`).subtractCount(this.byteLength);\n    this.byteLength = 0;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,6BAA6B,GAAG,+CAAtC;;IAOqBC,Q;EAKnB,kBAAYC,EAAZ,EAA2B;IAAA,IAAXC,IAAW,uEAAJ,EAAI;IAAA;IACzB,IAAAC,2BAAA,EAAmBF,EAAnB;IAEA,IAAOG,EAAP,GAA4BF,IAA5B,CAAOE,EAAP;IAAA,qBAA4BF,IAA5B,CAAWG,QAAX;IAAA,IAAWA,QAAX,+BAAsB,EAAtB;IACA,KAAKJ,EAAL,GAAUA,EAAV;IAEA,KAAKK,GAAL,GAAWL,EAAX;IAEA,KAAKG,EAAL,GAAUA,EAAE,IAAI,IAAAG,UAAA,EAAI,KAAKC,MAAM,CAACC,WAAZ,CAAJ,CAAhB;IACA,KAAKJ,QAAL,GAAgBA,QAAhB;IACA,KAAKK,MAAL,GAAc,KAAd;IASA,KAAKC,OAAL,GAAeT,IAAI,CAACU,MAApB;;IACA,IAAI,KAAKD,OAAL,KAAiBE,SAArB,EAAgC;MAC9B,KAAKF,OAAL,GAAe,KAAKG,aAAL,EAAf;IACD;;IAGD,KAAKC,UAAL,GAAkB,CAAlB;;IAEA,KAAKC,UAAL;;IACA,KAAKC,SAAL;EACD;;;;SAhCD,eAA2B;MACzB,OAAO,UAAP;IACD;;;WAgCD,oBAAW;MACT,iBAAU,KAAKT,MAAM,CAACC,WAAZ,KAA4B,KAAKS,WAAL,CAAiBC,IAAvD,cAA+D,KAAKf,EAApE;IACD;;;SAED,eAAa;MAUX,OAAO,KAAKO,OAAZ;IACD;;;WAED,mBAAsC;MAAA,+EAAJ,EAAI;MAAA,+BAA9BS,cAA8B;MAAA,IAA9BA,cAA8B,oCAAb,KAAa;;MAGpC,IAAMC,QAAQ,GAAG,KAAKV,OAAL,IAAgB,KAAKW,aAAL,CAAmB,KAAKX,OAAxB,CAAjC;;MACA,IAAI,KAAKA,OAAT,EAAkB;QAChB,KAAKY,YAAL;MACD;;MACD,KAAKZ,OAAL,GAAe,IAAf;;MAIA,IAAIU,QAAQ,IAAID,cAAhB,EAAgC;QAE9BC,QAAQ,CAACG,MAAT,CAAgBC,OAAhB,EAAyBC,OAAzB,CAAiC,UAAAC,KAAK;UAAA,OAAIA,KAAK,CAACC,MAAN,EAAJ;QAAA,CAAtC;MACD;;MAED,OAAO,IAAP;IACD;;;WAED,gBAAiC;MAAA,IAA5BC,YAA4B,uEAAb,KAAKjB,MAAQ;;MAC/B,IAAI,OAAOiB,YAAP,KAAwB,UAA5B,EAAwC;QACtC,KAAKC,WAAL,CAAiBD,YAAjB;;QACA,OAAO,IAAP;MACD;;MAED,IAAIE,KAAJ;;MAEA,IAAI,CAAC,KAAKrB,MAAV,EAAkB;QAChB,KAAKoB,WAAL,CAAiB,KAAKlB,MAAtB;;QACA,KAAKF,MAAL,GAAc,IAAd;QAEAqB,KAAK,GAAGF,YAAY,EAApB;QAEA,KAAKnB,MAAL,GAAc,KAAd;;QACA,KAAKoB,WAAL,CAAiB,IAAjB;MACD,CARD,MAQO;QACLC,KAAK,GAAGF,YAAY,EAApB;MACD;;MAED,OAAOE,KAAP;IACD;;;WAED,kBAAS;MACP,KAAKC,IAAL,CAAU,IAAV;IACD;;;WAQD,sBAAaC,KAAb,EAA+B;MAAA,IAAX/B,IAAW,uEAAJ,EAAI;MAC7B+B,KAAK,GAAG,IAAAC,4BAAA,EAAY,KAAKjC,EAAjB,EAAqBgC,KAArB,CAAR;MACA,IAAAE,cAAA,EAAOF,KAAP;MAGA,IAAMG,UAAU,GAAG,KAAKlB,WAAL,CAAiBmB,UAAjB,IAA+B,EAAlD;MAGA,IAAMC,SAAS,GAAGF,UAAU,CAACH,KAAD,CAA5B;;MACA,IAAIK,SAAJ,EAAe;QACb,IAAMC,QAAQ,GAAG,IAAAC,iBAAA,EAAS,KAAKvC,EAAd,CAAjB;QAGA,IAAMwC,kBAAkB,GACtB,CAAC,EAAE,YAAYH,SAAd,KAA4BC,QAA7B,MACC,EAAE,eAAeD,SAAjB,KAA+B,KAAKrC,EAAL,CAAQyC,YAAR,CAAqBJ,SAAS,CAACK,SAA/B,CADhC,CADF;;QAIA,IAAI,CAACF,kBAAL,EAAyB;UACvB,IAAMG,aAAa,GAAGN,SAAS,CAACO,MAAhC;UACA,IAAMC,aAAa,GAAG,YAAYR,SAAZ,GAAwBA,SAAS,CAACS,MAAlC,GAA2CT,SAAS,CAACO,MAA3E;UACA,IAAMG,YAAY,GAAGT,QAAQ,GAAGO,aAAH,GAAmBF,aAAhD;UACA,OAAOI,YAAP;QACD;MACF;;MAID,OAAO,KAAKC,aAAL,CAAmBhB,KAAnB,EAA0B/B,IAA1B,CAAP;IACD;;;WAKD,yBAA4B;MAAA,IAAdgD,OAAc,uEAAJ,EAAI;MAC1B,IAAOd,UAAP,GAA2Bc,OAA3B,CAAOd,UAAP;MAAA,IAAmBe,IAAnB,GAA2BD,OAA3B,CAAmBC,IAAnB;MAIA,IAAMd,UAAU,GAAG,KAAKnB,WAAL,CAAiBmB,UAAjB,IAA+B,EAAlD;MAEA,IAAME,QAAQ,GAAG,IAAAC,iBAAA,EAAS,KAAKvC,EAAd,CAAjB;MAEA,IAAMmD,MAAM,GAAG,EAAf;MAGA,IAAMC,aAAa,GAAGjB,UAAU,IAAIkB,MAAM,CAACH,IAAP,CAAYd,UAAZ,CAApC;;MAZ0B,2CAeNgB,aAfM;MAAA;;MAAA;QAe1B,oDAAmC;UAAA,IAAxBpB,KAAwB;UACjC,IAAMK,SAAS,GAAGD,UAAU,CAACJ,KAAD,CAA5B;UAGA,IAAMQ,kBAAkB,GACtBH,SAAS,KACR,EAAE,YAAYA,SAAd,KAA4BC,QADpB,CAAT,KAEC,EAAE,eAAeD,SAAjB,KAA+B,KAAKrC,EAAL,CAAQyC,YAAR,CAAqBJ,SAAS,CAACK,SAA/B,CAFhC,CADF;;UAKA,IAAIF,kBAAJ,EAAwB;YACtB,IAAMc,GAAG,GAAGJ,IAAI,GAAG,IAAAK,uBAAA,EAAO,KAAKvD,EAAZ,EAAgBgC,KAAhB,CAAH,GAA4BA,KAA5C;YACAmB,MAAM,CAACG,GAAD,CAAN,GAAc,KAAKE,YAAL,CAAkBxB,KAAlB,EAAyBiB,OAAzB,CAAd;;YACA,IAAIC,IAAI,IAAIb,SAAS,CAACoB,IAAV,KAAmB,QAA/B,EAAyC;cACvCN,MAAM,CAACG,GAAD,CAAN,GAAc,IAAAC,uBAAA,EAAO,KAAKvD,EAAZ,EAAgBmD,MAAM,CAACG,GAAD,CAAtB,CAAd;YACD;UACF;QACF;MA/ByB;QAAA;MAAA;QAAA;MAAA;;MAiC1B,OAAOH,MAAP;IACD;;;WAWD,sBAAanB,KAAb,EAAoBF,KAApB,EAA2B;MACzBE,KAAK,GAAG,IAAAC,4BAAA,EAAY,KAAKjC,EAAjB,EAAqBgC,KAArB,CAAR;MACA,IAAAE,cAAA,EAAOF,KAAP;MAGA,IAAMG,UAAU,GAAG,KAAKlB,WAAL,CAAiBmB,UAAjB,IAA+B,EAAlD;MAEA,IAAMC,SAAS,GAAGF,UAAU,CAACH,KAAD,CAA5B;;MACA,IAAIK,SAAJ,EAAe;QACb,IAAMC,QAAQ,GAAG,IAAAC,iBAAA,EAAS,KAAKvC,EAAd,CAAjB;QAGA,IAAMwC,kBAAkB,GACtB,CAAC,EAAE,YAAYH,SAAd,KAA4BC,QAA7B,MACC,EAAE,eAAeD,SAAjB,KAA+B,KAAKrC,EAAL,CAAQyC,YAAR,CAAqBJ,SAAS,CAACK,SAA/B,CADhC,CADF;;QAIA,IAAI,CAACF,kBAAL,EAAyB;UACvB,MAAM,IAAIkB,KAAJ,CAAU,0CAAV,CAAN;QACD;;QAGD,IAAIrB,SAAS,CAACoB,IAAV,KAAmB,QAAvB,EAAiC;UAC/B3B,KAAK,GAAG,IAAAG,4BAAA,EAAYH,KAAZ,CAAR;QACD;MACF;;MAID,KAAK6B,aAAL,CAAmB3B,KAAnB,EAA0BF,KAA1B;;MACA,OAAO,IAAP;IACD;;;WAMD,uBAAcK,UAAd,EAA0B;MACxB,KAAK,IAAMH,KAAX,IAAoBG,UAApB,EAAgC;QAC9B,KAAKyB,YAAL,CAAkB5B,KAAlB,EAAyBG,UAAU,CAACH,KAAD,CAAnC;MACD;;MACD,OAAO,IAAP;IACD;;;WAGD,4BAAmB6B,SAAnB,EAA8BC,OAA9B,EAAuCC,WAAvC,EAAoD;MAClD,OAAO,IAAAC,+BAAA,EAAmB,IAAnB,EAAyBH,SAAzB,EAAoCC,OAApC,EAA6CC,WAA7C,CAAP;IACD;;;WAGD,oBAAW9D,IAAX,EAAiB,CAAE;;;WAGnB,yBAAgB;MACd,MAAM,IAAIyD,KAAJ,CAAU5D,6BAAV,CAAN;IACD;;;WAED,yBAAgB;MACd,MAAM,IAAI4D,KAAJ,CAAU5D,6BAAV,CAAN;IACD;;;WAED,qBAAYa,MAAZ,EAAoB;MAClB,MAAM,IAAI+C,KAAJ,CAAU5D,6BAAV,CAAN;IACD;;;WAED,8BAAqB;MACnB,MAAM,IAAI4D,KAAJ,CAAU5D,6BAAV,CAAN;IACD;;;WAGD,uBAAckC,KAAd,EAAqB/B,IAArB,EAA2B;MACzB,MAAM,IAAIyD,KAAJ,CAAU5D,6BAAV,CAAN;IACD;;;WAED,uBAAckC,KAAd,EAAqBF,KAArB,EAA4B;MAC1B,MAAM,IAAI4B,KAAJ,CAAU5D,6BAAV,CAAN;IACD;;;WAID,oBAAW;MACT,KAAKE,EAAL,CAAQiE,IAAR,GAAe,KAAKjE,EAAL,CAAQiE,IAAR,IAAgB,EAA/B;MACA,OAAO,KAAKjE,EAAL,CAAQiE,IAAf;IACD;;;WAED,sBAAa;MACX,KAAKjE,EAAL,CAAQkE,KAAR,GAAgB,KAAKlE,EAAL,CAAQkE,KAAR,IAAiB,IAAIC,kBAAJ,EAAjC;IACD;;;WAED,qBAAY;MACV,IAAMjD,IAAI,GAAG,KAAKX,MAAM,CAACC,WAAZ,CAAb;;MACA,IAAM0D,KAAK,GAAGE,eAAA,CAAUC,GAAV,CAAc,iBAAd,CAAd;;MAEAH,KAAK,CAACG,GAAN,CAAU,mBAAV,EAA+BC,cAA/B;MACAJ,KAAK,CAACG,GAAN,WAAanD,IAAb,gBAA8BoD,cAA9B;MACAJ,KAAK,CAACG,GAAN,WAAanD,IAAb,eAA6BoD,cAA7B;IACD;;;WAED,wBAAe;MACb,IAAMpD,IAAI,GAAG,KAAKX,MAAM,CAACC,WAAZ,CAAb;;MACA,IAAM0D,KAAK,GAAGE,eAAA,CAAUC,GAAV,CAAc,iBAAd,CAAd;;MAEAH,KAAK,CAACG,GAAN,WAAanD,IAAb,eAA6BqD,cAA7B;IACD;;;WAED,+BAAsBC,KAAtB,EAA8D;MAAA,IAAjCtD,IAAiC,uEAA1B,KAAKX,MAAM,CAACC,WAAZ,CAA0B;;MAC5D,KAAKiE,uBAAL,CAA6BD,KAA7B,EAAoCtD,IAApC;;MACA,KAAKuD,uBAAL,CAA6BD,KAA7B,EAAoCtD,IAApC,EAA0C,KAAKlB,EAAL,CAAQkE,KAAR,CAAcG,GAAd,gBAA1C;IACD;;;WAED,iCACEG,KADF,EAIE;MAAA,IAFAtD,IAEA,uEAFO,KAAKX,MAAM,CAACC,WAAZ,CAEP;MAAA,IADA0D,KACA,uEADQE,eAAA,CAAUC,GAAV,gBACR;MACAH,KAAK,CAACG,GAAN,CAAU,YAAV,EAAwBK,QAAxB,CAAiCF,KAAjC;MACAN,KAAK,CAACG,GAAN,WAAanD,IAAb,cAA4BwD,QAA5B,CAAqCF,KAArC;MACA,KAAK1D,UAAL,GAAkB0D,KAAlB;IACD;;;WAED,mCAAyD;MAAA,IAAjCtD,IAAiC,uEAA1B,KAAKX,MAAM,CAACC,WAAZ,CAA0B;;MACvD,KAAKmE,yBAAL,CAA+BzD,IAA/B;;MACA,KAAKyD,yBAAL,CAA+BzD,IAA/B,EAAqC,KAAKlB,EAAL,CAAQkE,KAAR,CAAcG,GAAd,gBAArC;IACD;;;WAED,qCAGE;MAAA,IAFAnD,IAEA,uEAFO,KAAKX,MAAM,CAACC,WAAZ,CAEP;MAAA,IADA0D,KACA,uEADQE,eAAA,CAAUC,GAAV,gBACR;MACAH,KAAK,CAACG,GAAN,CAAU,YAAV,EAAwBO,aAAxB,CAAsC,KAAK9D,UAA3C;MACAoD,KAAK,CAACG,GAAN,WAAanD,IAAb,cAA4B0D,aAA5B,CAA0C,KAAK9D,UAA/C;MACA,KAAKA,UAAL,GAAkB,CAAlB;IACD;;;EAxTIP,MAAM,CAACC,W"}