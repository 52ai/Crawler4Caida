{"version":3,"file":"polyfill-table.js","names":["OES_vertex_array_object","ANGLE_instanced_arrays","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_texture_filter_anisotropic","ERR_VAO_NOT_SUPPORTED","getExtensionData","gl","extension","webgl2","isWebGL2","ext","getExtension","WEBGL2_CONTEXT_POLYFILLS","meta","suffix","createVertexArray","assert","deleteVertexArray","bindVertexArray","isVertexArray","vertexAttribDivisor","location","divisor","drawElementsInstanced","drawArraysInstanced","drawBuffers","createQuery","deleteQuery","beginQuery","endQuery","getQuery","handle","pname","getQueryObject","getQueryParameter","WEBGL2_CONTEXT_OVERRIDES","readBuffer","originalFunc","attachment","getVertexAttrib","result","undefined","getProgramParameter","program","getInternalformatParameter","target","format","Int32Array","getTexParameter","extensions","luma","TEXTURE_MAX_ANISOTROPY_EXT","getParameter","getParameterPolyfill","hint","value"],"sources":["../../../src/polyfill/polyfill-table.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {assert} from '../utils/assert';\nimport {isWebGL2} from '../utils/webgl-checks';\n\nimport {getParameterPolyfill} from './get-parameter-polyfill';\n\nconst OES_vertex_array_object = 'OES_vertex_array_object';\nconst ANGLE_instanced_arrays = 'ANGLE_instanced_arrays';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\n\nconst ERR_VAO_NOT_SUPPORTED = 'VertexArray requires WebGL2 or OES_vertex_array_object extension';\n\n// Return object with webgl2 flag and an extension\nfunction getExtensionData(gl, extension) {\n  return {\n    webgl2: isWebGL2(gl),\n    ext: gl.getExtension(extension)\n  };\n}\n\n// function mapExtensionConstant(gl, constant) {\n//   switch (constant) {\n//   case ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES: return GL.FRAGMENT_SHADER_DERIVATIVE_HINT;\n//   }\n// }\n\nexport const WEBGL2_CONTEXT_POLYFILLS = {\n  // POLYFILL TABLE\n  [OES_vertex_array_object]: {\n    meta: {suffix: 'OES'},\n    // NEW METHODS\n    createVertexArray: () => {\n      assert(false, ERR_VAO_NOT_SUPPORTED);\n    },\n    deleteVertexArray: () => {},\n    bindVertexArray: () => {},\n    isVertexArray: () => false\n  },\n  [ANGLE_instanced_arrays]: {\n    meta: {\n      suffix: 'ANGLE'\n      // constants: {\n      //   VERTEX_ATTRIB_ARRAY_DIVISOR: 'VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE'\n      // }\n    },\n    vertexAttribDivisor(location, divisor) {\n      // Accept divisor 0 even if instancing is not supported (0 = no instancing)\n      assert(divisor === 0, 'WebGL instanced rendering not supported');\n    },\n    drawElementsInstanced: () => {},\n    drawArraysInstanced: () => {}\n  },\n  [WEBGL_draw_buffers]: {\n    meta: {\n      suffix: 'WEBGL'\n    },\n    drawBuffers: () => {\n      assert(false);\n    }\n  },\n  [EXT_disjoint_timer_query]: {\n    meta: {suffix: 'EXT'},\n    // WebGL1: Polyfills the WebGL2 Query API\n    createQuery: () => {\n      assert(false);\n    },\n    deleteQuery: () => {\n      assert(false);\n    },\n    beginQuery: () => {\n      assert(false);\n    },\n    endQuery: () => {},\n    getQuery(handle, pname) {\n      // @ts-ignore\n      return this.getQueryObject(handle, pname);\n    },\n    // The WebGL1 extension uses getQueryObject rather then getQueryParameter\n    getQueryParameter(handle, pname) {\n      // @ts-ignore\n      return this.getQueryObject(handle, pname);\n    },\n    getQueryObject: () => {}\n  }\n};\n\nexport const WEBGL2_CONTEXT_OVERRIDES = {\n  // Ensure readBuffer is a no-op\n  readBuffer: (gl, originalFunc, attachment) => {\n    if (isWebGL2(gl)) {\n      originalFunc(attachment);\n    } else {\n      // assert(attachment !== GL_COLOR_ATTACHMENT0 && attachment !== GL_FRONT);\n    }\n  },\n  // Override for getVertexAttrib that returns sane values for non-WebGL1 constants\n  getVertexAttrib: (gl, originalFunc, location, pname) => {\n    // const gl = this; // eslint-disable-line\n    const {webgl2, ext} = getExtensionData(gl, ANGLE_instanced_arrays);\n\n    let result;\n    switch (pname) {\n      // WebGL1 attributes will never be integer\n      case GL.VERTEX_ATTRIB_ARRAY_INTEGER:\n        result = !webgl2 ? false : undefined;\n        break;\n      // if instancing is not available, return 0 meaning divisor has not been set\n      case GL.VERTEX_ATTRIB_ARRAY_DIVISOR:\n        result = !webgl2 && !ext ? 0 : undefined;\n        break;\n      default:\n    }\n\n    return result !== undefined ? result : originalFunc(location, pname);\n  },\n  // Handle transform feedback and uniform block queries in WebGL1\n  getProgramParameter: (gl, originalFunc, program, pname) => {\n    if (!isWebGL2(gl)) {\n      switch (pname) {\n        case GL.TRANSFORM_FEEDBACK_BUFFER_MODE:\n          return GL.SEPARATE_ATTRIBS;\n        case GL.TRANSFORM_FEEDBACK_VARYINGS:\n          return 0;\n        case GL.ACTIVE_UNIFORM_BLOCKS:\n          return 0;\n        default:\n      }\n    }\n    return originalFunc(program, pname);\n  },\n  getInternalformatParameter: (gl, originalFunc, target, format, pname) => {\n    if (!isWebGL2(gl)) {\n      switch (pname) {\n        case GL.SAMPLES:\n          return new Int32Array([0]);\n        default:\n      }\n    }\n    return gl.getInternalformatParameter(target, format, pname);\n  },\n  getTexParameter(gl, originalFunc, target, pname) {\n    switch (pname) {\n      case GL.TEXTURE_MAX_ANISOTROPY_EXT:\n        const {extensions} = gl.luma;\n        const ext = extensions[EXT_texture_filter_anisotropic];\n        pname = (ext && ext.TEXTURE_MAX_ANISOTROPY_EXT) || GL.TEXTURE_MAX_ANISOTROPY_EXT;\n        break;\n      default:\n    }\n    return originalFunc(target, pname);\n  },\n  getParameter: getParameterPolyfill,\n  hint(gl, originalFunc, pname, value) {\n    // TODO - handle GL.FRAGMENT_SHADER_DERIVATIVE_HINT:\n    // switch (pname) {\n    // case GL.FRAGMENT_SHADER_DERIVATIVE_HINT:\n    // }\n    return originalFunc(pname, value);\n  }\n};\n"],"mappings":"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"}