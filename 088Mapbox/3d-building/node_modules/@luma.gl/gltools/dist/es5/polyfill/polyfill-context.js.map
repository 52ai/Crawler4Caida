{"version":3,"file":"polyfill-context.js","names":["polyfillContext","gl","luma","polyfilled","polyfillVertexArrayObject","initializeExtensions","installPolyfills","WEBGL2_CONTEXT_POLYFILLS","installOverrides","target","target2","globalThis","extensions","EXTENSIONS","getSupportedExtensions","extension","getExtension","Object","keys","WEBGL2_CONTEXT_OVERRIDES","forEach","key","originalFunc","bind","polyfill","polyfills","getOwnPropertyNames","polyfillExtension","defaults","assert","meta","suffix","ext","extKey"],"sources":["../../../src/polyfill/polyfill-context.js"],"sourcesContent":["// WebGL1/WebGL2 extension polyfill support\n//\n// Provides a function that creates polyfills for WebGL2 functions based\n// on available extensions and installs them on a supplied target (could be\n// the WebGLContext or its prototype, or a separate object).\n//\n// This is intended to be a stand-alone file with minimal dependencies,\n// easy to reuse or repurpose in other projects.\n\n/** @typedef {import('./polyfill-context')} types */\n\nimport {polyfillVertexArrayObject} from './polyfill-vertex-array-object';\nimport {assert} from '../utils/assert';\n\nimport {WEBGL2_CONTEXT_POLYFILLS, WEBGL2_CONTEXT_OVERRIDES} from './polyfill-table';\n\n/** @type {types['polyfillContext']} */\nexport function polyfillContext(gl) {\n  // @ts-ignore\n  gl.luma = gl.luma || {};\n  // @ts-ignore\n  const {luma} = gl;\n\n  if (!luma.polyfilled) {\n    polyfillVertexArrayObject(gl);\n    initializeExtensions(gl);\n    installPolyfills(gl, WEBGL2_CONTEXT_POLYFILLS);\n    installOverrides(gl, {target: luma, target2: gl});\n    luma.polyfilled = true;\n  }\n\n  // TODO - only supporting a few members\n  /** @type {WebGL2RenderingContext} */\n  // @ts-ignore\n  return gl;\n}\n\n// TODO - is this still required?\n// @ts-ignore\nglobalThis.polyfillContext = polyfillContext;\n\nfunction initializeExtensions(gl) {\n  gl.luma.extensions = {};\n  // `getSupportedExtensions` can return null when context is lost.\n  const EXTENSIONS = gl.getSupportedExtensions() || [];\n  for (const extension of EXTENSIONS) {\n    gl.luma[extension] = gl.getExtension(extension);\n  }\n}\n\n// Install simple overrides (mostly get* functions)\nfunction installOverrides(gl, {target, target2}) {\n  Object.keys(WEBGL2_CONTEXT_OVERRIDES).forEach(key => {\n    if (typeof WEBGL2_CONTEXT_OVERRIDES[key] === 'function') {\n      // install an override, if no implementation was detected\n      const originalFunc = gl[key] ? gl[key].bind(gl) : () => {};\n      const polyfill = WEBGL2_CONTEXT_OVERRIDES[key].bind(null, gl, originalFunc);\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  });\n}\n\nfunction installPolyfills(gl, polyfills) {\n  for (const extension of Object.getOwnPropertyNames(polyfills)) {\n    if (extension !== 'overrides') {\n      polyfillExtension(gl, {extension, target: gl.luma, target2: gl});\n    }\n  }\n}\n\n// Polyfills a single WebGL extension into the `target` object\nfunction polyfillExtension(gl, {extension, target, target2}) {\n  const defaults = WEBGL2_CONTEXT_POLYFILLS[extension];\n  assert(defaults);\n\n  const {meta = {}} = defaults;\n  const {suffix = ''} = meta;\n\n  const ext = gl.getExtension(extension);\n\n  for (const key of Object.keys(defaults)) {\n    const extKey = `${key}${suffix}`;\n\n    let polyfill = null;\n    if (key === 'meta') {\n      // ignore\n    } else if (typeof gl[key] === 'function') {\n      // WebGL2 implementation is already\n    } else if (ext && typeof ext[extKey] === 'function') {\n      // pick extension implemenentation,if available\n      polyfill = (...args) => ext[extKey](...args);\n    } else if (typeof defaults[key] === 'function') {\n      // pick the mock implementation, if no implementation was detected\n      polyfill = defaults[key].bind(target);\n    }\n\n    if (polyfill) {\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  }\n}\n"],"mappings":";;;;;;;AAWA;;AACA;;AAEA;;;;;;;;AAGO,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;EAElCA,EAAE,CAACC,IAAH,GAAUD,EAAE,CAACC,IAAH,IAAW,EAArB;EAEA,IAAOA,IAAP,GAAeD,EAAf,CAAOC,IAAP;;EAEA,IAAI,CAACA,IAAI,CAACC,UAAV,EAAsB;IACpB,IAAAC,oDAAA,EAA0BH,EAA1B;IACAI,oBAAoB,CAACJ,EAAD,CAApB;IACAK,gBAAgB,CAACL,EAAD,EAAKM,uCAAL,CAAhB;IACAC,gBAAgB,CAACP,EAAD,EAAK;MAACQ,MAAM,EAAEP,IAAT;MAAeQ,OAAO,EAAET;IAAxB,CAAL,CAAhB;IACAC,IAAI,CAACC,UAAL,GAAkB,IAAlB;EACD;;EAKD,OAAOF,EAAP;AACD;;AAIDU,UAAU,CAACX,eAAX,GAA6BA,eAA7B;;AAEA,SAASK,oBAAT,CAA8BJ,EAA9B,EAAkC;EAChCA,EAAE,CAACC,IAAH,CAAQU,UAAR,GAAqB,EAArB;EAEA,IAAMC,UAAU,GAAGZ,EAAE,CAACa,sBAAH,MAA+B,EAAlD;;EAHgC,2CAIRD,UAJQ;EAAA;;EAAA;IAIhC,oDAAoC;MAAA,IAAzBE,SAAyB;MAClCd,EAAE,CAACC,IAAH,CAAQa,SAAR,IAAqBd,EAAE,CAACe,YAAH,CAAgBD,SAAhB,CAArB;IACD;EAN+B;IAAA;EAAA;IAAA;EAAA;AAOjC;;AAGD,SAASP,gBAAT,CAA0BP,EAA1B,QAAiD;EAAA,IAAlBQ,MAAkB,QAAlBA,MAAkB;EAAA,IAAVC,OAAU,QAAVA,OAAU;EAC/CO,MAAM,CAACC,IAAP,CAAYC,uCAAZ,EAAsCC,OAAtC,CAA8C,UAAAC,GAAG,EAAI;IACnD,IAAI,OAAOF,uCAAA,CAAyBE,GAAzB,CAAP,KAAyC,UAA7C,EAAyD;MAEvD,IAAMC,YAAY,GAAGrB,EAAE,CAACoB,GAAD,CAAF,GAAUpB,EAAE,CAACoB,GAAD,CAAF,CAAQE,IAAR,CAAatB,EAAb,CAAV,GAA6B,YAAM,CAAE,CAA1D;;MACA,IAAMuB,QAAQ,GAAGL,uCAAA,CAAyBE,GAAzB,EAA8BE,IAA9B,CAAmC,IAAnC,EAAyCtB,EAAzC,EAA6CqB,YAA7C,CAAjB;;MACAb,MAAM,CAACY,GAAD,CAAN,GAAcG,QAAd;MACAd,OAAO,CAACW,GAAD,CAAP,GAAeG,QAAf;IACD;EACF,CARD;AASD;;AAED,SAASlB,gBAAT,CAA0BL,EAA1B,EAA8BwB,SAA9B,EAAyC;EAAA,4CACfR,MAAM,CAACS,mBAAP,CAA2BD,SAA3B,CADe;EAAA;;EAAA;IACvC,uDAA+D;MAAA,IAApDV,SAAoD;;MAC7D,IAAIA,SAAS,KAAK,WAAlB,EAA+B;QAC7BY,iBAAiB,CAAC1B,EAAD,EAAK;UAACc,SAAS,EAATA,SAAD;UAAYN,MAAM,EAAER,EAAE,CAACC,IAAvB;UAA6BQ,OAAO,EAAET;QAAtC,CAAL,CAAjB;MACD;IACF;EALsC;IAAA;EAAA;IAAA;EAAA;AAMxC;;AAGD,SAAS0B,iBAAT,CAA2B1B,EAA3B,SAA6D;EAAA,IAA7Bc,SAA6B,SAA7BA,SAA6B;EAAA,IAAlBN,MAAkB,SAAlBA,MAAkB;EAAA,IAAVC,OAAU,SAAVA,OAAU;EAC3D,IAAMkB,QAAQ,GAAGrB,uCAAA,CAAyBQ,SAAzB,CAAjB;EACA,IAAAc,cAAA,EAAOD,QAAP;EAEA,qBAAoBA,QAApB,CAAOE,IAAP;EAAA,IAAOA,IAAP,+BAAc,EAAd;EACA,mBAAsBA,IAAtB,CAAOC,MAAP;EAAA,IAAOA,MAAP,6BAAgB,EAAhB;EAEA,IAAMC,GAAG,GAAG/B,EAAE,CAACe,YAAH,CAAgBD,SAAhB,CAAZ;;EAP2D;IAStD,IAAMM,GAAG,mBAAT;IACH,IAAMY,MAAM,aAAMZ,GAAN,SAAYU,MAAZ,CAAZ;IAEA,IAAIP,QAAQ,GAAG,IAAf;;IACA,IAAIH,GAAG,KAAK,MAAZ,EAAoB,CAEnB,CAFD,MAEO,IAAI,OAAOpB,EAAE,CAACoB,GAAD,CAAT,KAAmB,UAAvB,EAAmC,CAEzC,CAFM,MAEA,IAAIW,GAAG,IAAI,OAAOA,GAAG,CAACC,MAAD,CAAV,KAAuB,UAAlC,EAA8C;MAEnDT,QAAQ,GAAG;QAAA,OAAaQ,GAAG,CAACC,MAAD,CAAH,OAAAD,GAAG,YAAhB;MAAA,CAAX;IACD,CAHM,MAGA,IAAI,OAAOJ,QAAQ,CAACP,GAAD,CAAf,KAAyB,UAA7B,EAAyC;MAE9CG,QAAQ,GAAGI,QAAQ,CAACP,GAAD,CAAR,CAAcE,IAAd,CAAmBd,MAAnB,CAAX;IACD;;IAED,IAAIe,QAAJ,EAAc;MACZf,MAAM,CAACY,GAAD,CAAN,GAAcG,QAAd;MACAd,OAAO,CAACW,GAAD,CAAP,GAAeG,QAAf;IACD;EA5BwD;;EAS3D,gCAAkBP,MAAM,CAACC,IAAP,CAAYU,QAAZ,CAAlB,kCAAyC;IAAA;EAoBxC;AACF"}