{"version":3,"file":"track-context-state.js","names":["installGetterOverride","gl","functionName","originalGetterFunc","bind","get","pname","state","cache","enable","Object","defineProperty","value","configurable","installSetterSpy","setter","originalSetterFunc","set","params","_updateCache","valueChanged","oldValue","installProgramSpy","originalUseProgram","useProgram","useProgramLuma","handle","program","GLState","copyState","log","stateStack","getParameters","assign","GL_PARAMETER_DEFAULTS","seal","values","push","assert","length","oldValues","setParameters","pop","key","undefined","cached","deepArrayEqual","trackContextState","options","polyfillContext","globalThis","GL_HOOKED_SETTERS","pushContextState","popContextState"],"sources":["../../../src/state-tracker/track-context-state.js"],"sourcesContent":["// Support for listening to context state changes and intercepting state queries\n// NOTE: this system does not handle buffer bindings\n/** @typedef {import('./track-context-state')} types */\n\nimport {GL_PARAMETER_DEFAULTS, GL_HOOKED_SETTERS} from './webgl-parameter-tables';\nimport {setParameters, getParameters} from './unified-parameter-api';\nimport {assert} from '../utils/assert';\nimport {deepArrayEqual} from '../utils/utils';\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function get(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, it's neither undefined in GL_PARAMETER_DEFAULTS\n    // nor intercepted by GL_HOOKED_SETTERS. Query the original getter.\n    if (!(pname in gl.state.cache)) {\n      return originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable\n      ? // Call the getter the params so that it can e.g. serve from a cache\n        gl.state.cache[pname]\n      : // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n        originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-from-cache`,\n    configurable: false\n  });\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function set(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const {valueChanged, oldValue} = setter(gl.state._updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-to-cache`,\n    configurable: false\n  });\n}\n\nfunction installProgramSpy(gl) {\n  const originalUseProgram = gl.useProgram.bind(gl);\n\n  gl.useProgram = function useProgramLuma(handle) {\n    if (gl.state.program !== handle) {\n      originalUseProgram(handle);\n      gl.state.program = handle;\n    }\n  };\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(\n    gl,\n    {\n      copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n      log = () => {} // Logging function, called when gl parameter change calls are actually issued\n    } = {}\n  ) {\n    this.gl = gl;\n    this.program = null;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      const value = values[key];\n      const cached = this.cache[key];\n      // Check that value hasn't already been shadowed\n      if (!deepArrayEqual(value, cached)) {\n        valueChanged = true;\n        oldValue = cached;\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = cached;\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = value;\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * @type {types['trackContextState']}\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport function trackContextState(gl, options = {}) {\n  const {enable = true, copyState} = options;\n  assert(copyState !== undefined);\n  // @ts-ignore\n  if (!gl.state) {\n    // @ts-ignore\n    const {polyfillContext} = globalThis;\n    if (polyfillContext) {\n      polyfillContext(gl);\n    }\n\n    // Create a state cache\n    // @ts-ignore\n    gl.state = new GLState(gl, {copyState});\n\n    installProgramSpy(gl);\n\n    // intercept all setter functions in the table\n    for (const key in GL_HOOKED_SETTERS) {\n      const setter = GL_HOOKED_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  // @ts-ignore\n  gl.state.enable = enable;\n\n  return gl;\n}\n\n/**\n * Initialize WebGL state caching on a context\n * @type {types['pushContextState']}\n */\nexport function pushContextState(gl) {\n  // @ts-ignore\n  if (!gl.state) {\n    trackContextState(gl, {copyState: false});\n  }\n  // @ts-ignore\n  gl.state.push();\n}\n\n/**\n * Initialize WebGL state caching on a context\n * @type {types['popContextState']}\n */\nexport function popContextState(gl) {\n  // @ts-ignore\n  assert(gl.state);\n  // @ts-ignore\n  gl.state.pop();\n}\n"],"mappings":"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"}