{"version":3,"file":"model.js","names":["LOG_DRAW_PRIORITY","LOG_DRAW_TIMEOUT","ERR_MODEL_PARAMS","NOOP","DRAW_PARAMS","Model","gl","props","id","uid","assert","isWebGL","lastLogTime","animated","initialize","programManager","ProgramManager","getDefaultProgramManager","_programManagerState","_managedProgram","program","vs","fs","modules","defines","inject","varyings","bufferMode","transpileToGLSL100","programProps","vertexArray","_programDirty","userData","needsRedraw","_attributes","attributes","uniforms","pickable","_checkProgram","setUniforms","Object","assign","getModuleUniforms","moduleSettings","drawMode","undefined","vertexCount","geometryBuffers","isInstanced","instanced","instanceCount","_setModelProps","geometry","Number","isFinite","key","delete","release","_deleteGeometryBuffers","getVertexCount","getBuffersFromGeometry","setAttributes","isObjectEmpty","normalizedAttributes","name","attribute","getValue","opts","getUniforms","clear","framebuffer","transformFeedback","parameters","updateModuleSettings","logPriority","log","priority","_logDrawCallStart","drawParams","getDrawParams","isIndexed","indexType","indexOffset","vertexArrayInstanced","warn","onBeforeRender","onAfterRender","didDraw","draw","getDrawMode","offset","_logDrawCallEnd","discard","feedbackBuffers","unbindModels","_setFeedbackBuffers","forEach","model","unbindBuffers","bindBuffers","setGeometry","_feedbackBuffers","needsUpdate","stateHash","get","Program","setProps","VertexArray","buffer","Buffer","animationProps","TransformFeedback","setBuffers","logLevel","logDrawTimeout","Date","now","group","collapsed","level","attributeTable","getDebugTableForVertexArray","header","getDebugTableForUniforms","uniformTable","table","unusedTable","unusedCount","undefinedOnly","missingTable","missingCount","count","keys","configTable","getDebugTableForProgramConfiguration","configuration","message","groupEnd"],"sources":["../../../src/lib/model.js"],"sourcesContent":["/* eslint-disable complexity */\n\nimport GL from '@luma.gl/constants';\nimport {isWebGL} from '@luma.gl/gltools';\nimport ProgramManager from './program-manager';\nimport {\n  Program,\n  VertexArray,\n  clear,\n  TransformFeedback,\n  Buffer,\n  log,\n  isObjectEmpty,\n  uid,\n  assert\n} from '@luma.gl/webgl';\nimport {\n  getDebugTableForUniforms,\n  getDebugTableForVertexArray,\n  getDebugTableForProgramConfiguration\n} from '@luma.gl/webgl';\nimport {getBuffersFromGeometry} from './model-utils';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\nconst ERR_MODEL_PARAMS = 'Model needs drawMode and vertexCount';\n\nconst NOOP = () => {};\nconst DRAW_PARAMS = {};\n\nexport default class Model {\n  constructor(gl, props = {}) {\n    // Deduce a helpful id\n    const {id = uid('model')} = props;\n    assert(isWebGL(gl));\n    this.id = id;\n    this.gl = gl;\n    this.id = props.id || uid('Model');\n    this.lastLogTime = 0; // TODO - move to probe.gl\n    this.animated = false;\n    this.initialize(props);\n  }\n\n  initialize(props) {\n    this.props = {};\n\n    this.programManager = props.programManager || ProgramManager.getDefaultProgramManager(this.gl);\n    this._programManagerState = -1;\n    this._managedProgram = false;\n\n    const {\n      program = null,\n      vs,\n      fs,\n      modules,\n      defines,\n      inject,\n      varyings,\n      bufferMode,\n      transpileToGLSL100\n    } = props;\n\n    this.programProps = {\n      program,\n      vs,\n      fs,\n      modules,\n      defines,\n      inject,\n      varyings,\n      bufferMode,\n      transpileToGLSL100\n    };\n    this.program = null;\n    this.vertexArray = null;\n    this._programDirty = true;\n\n    // Initialize state\n    this.userData = {};\n    this.needsRedraw = true;\n\n    // Attributes and buffers\n    // Model manages auto Buffer creation from typed arrays\n    this._attributes = {}; // All attributes\n    this.attributes = {}; // User defined attributes\n\n    // Model manages uniform animation\n    this.uniforms = {};\n\n    // picking options\n    this.pickable = true;\n\n    this._checkProgram();\n\n    this.setUniforms(\n      Object.assign(\n        {},\n        this.getModuleUniforms(props.moduleSettings) // Get unforms for supplied parameters\n      )\n    );\n\n    this.drawMode = props.drawMode !== undefined ? props.drawMode : GL.TRIANGLES;\n    this.vertexCount = props.vertexCount || 0;\n\n    // Track buffers created by setGeometry\n    this.geometryBuffers = {};\n\n    // geometry might have set drawMode and vertexCount\n    this.isInstanced = props.isInstanced || props.instanced || props.instanceCount > 0;\n\n    this._setModelProps(props);\n\n    // TODO - just to unbreak deck.gl 7.0-beta, remove as soon as updated\n    this.geometry = {};\n\n    // assert(program || program instanceof Program);\n    assert(this.drawMode !== undefined && Number.isFinite(this.vertexCount), ERR_MODEL_PARAMS);\n  }\n\n  setProps(props) {\n    this._setModelProps(props);\n  }\n\n  delete() {\n    // delete all attributes created by this model\n    // TODO - should buffer deletes be handled by vertex array?\n    for (const key in this._attributes) {\n      if (this._attributes[key] !== this.attributes[key]) {\n        this._attributes[key].delete();\n      }\n    }\n\n    if (this._managedProgram) {\n      this.programManager.release(this.program);\n      this._managedProgram = false;\n    }\n\n    this.vertexArray.delete();\n\n    this._deleteGeometryBuffers();\n  }\n\n  // GETTERS\n\n  getDrawMode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  getInstanceCount() {\n    return this.instanceCount;\n  }\n\n  getAttributes() {\n    return this.attributes;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  setProgram(props) {\n    const {\n      program,\n      vs,\n      fs,\n      modules,\n      defines,\n      inject,\n      varyings,\n      bufferMode,\n      transpileToGLSL100\n    } = props;\n    this.programProps = {\n      program,\n      vs,\n      fs,\n      modules,\n      defines,\n      inject,\n      varyings,\n      bufferMode,\n      transpileToGLSL100\n    };\n    this._programDirty = true;\n  }\n\n  getUniforms() {\n    return this.uniforms;\n  }\n\n  // SETTERS\n\n  setDrawMode(drawMode) {\n    this.drawMode = drawMode;\n    return this;\n  }\n\n  setVertexCount(vertexCount) {\n    assert(Number.isFinite(vertexCount));\n    this.vertexCount = vertexCount;\n    return this;\n  }\n\n  setInstanceCount(instanceCount) {\n    assert(Number.isFinite(instanceCount));\n    this.instanceCount = instanceCount;\n    return this;\n  }\n\n  setGeometry(geometry) {\n    this.drawMode = geometry.drawMode;\n    this.vertexCount = geometry.getVertexCount();\n\n    this._deleteGeometryBuffers();\n\n    this.geometryBuffers = getBuffersFromGeometry(this.gl, geometry);\n    this.vertexArray.setAttributes(this.geometryBuffers);\n    return this;\n  }\n\n  setAttributes(attributes = {}) {\n    // Avoid setting needsRedraw if no attributes\n    if (isObjectEmpty(attributes)) {\n      return this;\n    }\n\n    const normalizedAttributes = {};\n    for (const name in attributes) {\n      const attribute = attributes[name];\n      // The `getValue` call provides support for deck.gl `Attribute` class\n      // TODO - remove once deck refactoring completes\n      normalizedAttributes[name] = attribute.getValue ? attribute.getValue() : attribute;\n    }\n\n    this.vertexArray.setAttributes(normalizedAttributes);\n    return this;\n  }\n\n  // TODO - should actually set the uniforms\n  setUniforms(uniforms = {}) {\n    Object.assign(this.uniforms, uniforms);\n\n    return this;\n  }\n\n  getModuleUniforms(opts) {\n    this._checkProgram();\n\n    const getUniforms = this.programManager.getUniforms(this.program);\n\n    if (getUniforms) {\n      return getUniforms(opts);\n    }\n\n    return {};\n  }\n\n  updateModuleSettings(opts) {\n    const uniforms = this.getModuleUniforms(opts || {});\n    return this.setUniforms(uniforms);\n  }\n\n  // DRAW CALLS\n\n  clear(opts) {\n    clear(this.program.gl, opts);\n    return this;\n  }\n\n  draw(opts = {}) {\n    // Lazy update program and vertex array\n    this._checkProgram();\n\n    const {\n      moduleSettings = null,\n      framebuffer,\n      uniforms = {},\n      attributes = {},\n      transformFeedback = this.transformFeedback,\n      parameters = {},\n      vertexArray = this.vertexArray\n    } = opts;\n\n    // Update model with any just provided attributes, settings or uniforms\n    this.setAttributes(attributes);\n    this.updateModuleSettings(moduleSettings);\n    this.setUniforms(uniforms);\n\n    let logPriority;\n\n    if (log.priority >= LOG_DRAW_PRIORITY) {\n      logPriority = this._logDrawCallStart(LOG_DRAW_PRIORITY);\n    }\n\n    const drawParams = this.vertexArray.getDrawParams();\n    const {\n      isIndexed = drawParams.isIndexed,\n      indexType = drawParams.indexType,\n      indexOffset = drawParams.indexOffset,\n      vertexArrayInstanced = drawParams.isInstanced\n    } = this.props;\n\n    if (vertexArrayInstanced && !this.isInstanced) {\n      log.warn('Found instanced attributes on non-instanced model', this.id)();\n    }\n\n    const {isInstanced, instanceCount} = this;\n\n    const {onBeforeRender = NOOP, onAfterRender = NOOP} = this.props;\n\n    onBeforeRender();\n\n    this.program.setUniforms(this.uniforms);\n\n    const didDraw = this.program.draw(\n      Object.assign(DRAW_PARAMS, opts, {\n        logPriority,\n        uniforms: null, // Already set (may contain \"function values\" not understood by Program)\n        framebuffer,\n        parameters,\n        drawMode: this.getDrawMode(),\n        vertexCount: this.getVertexCount(),\n        vertexArray,\n        transformFeedback,\n        isIndexed,\n        indexType,\n        isInstanced,\n        instanceCount,\n        offset: isIndexed ? indexOffset : 0\n      })\n    );\n\n    onAfterRender();\n\n    if (log.priority >= LOG_DRAW_PRIORITY) {\n      this._logDrawCallEnd(logPriority, vertexArray, framebuffer);\n    }\n\n    return didDraw;\n  }\n\n  // Draw call for transform feedback\n  transform(opts = {}) {\n    const {discard = true, feedbackBuffers, unbindModels = []} = opts;\n\n    let {parameters} = opts;\n\n    if (feedbackBuffers) {\n      this._setFeedbackBuffers(feedbackBuffers);\n    }\n\n    if (discard) {\n      parameters = Object.assign({}, parameters, {[GL.RASTERIZER_DISCARD]: discard});\n    }\n\n    unbindModels.forEach(model => model.vertexArray.unbindBuffers());\n    try {\n      this.draw(Object.assign({}, opts, {parameters}));\n    } finally {\n      unbindModels.forEach(model => model.vertexArray.bindBuffers());\n    }\n\n    return this;\n  }\n\n  // DEPRECATED METHODS\n\n  render(uniforms = {}) {\n    log.warn('Model.render() is deprecated. Use Model.setUniforms() and Model.draw()')();\n    return this.setUniforms(uniforms).draw();\n  }\n\n  // PRIVATE METHODS\n\n  _setModelProps(props) {\n    Object.assign(this.props, props);\n\n    if ('uniforms' in props) {\n      this.setUniforms(props.uniforms);\n    }\n\n    if ('pickable' in props) {\n      this.pickable = props.pickable;\n    }\n\n    if ('instanceCount' in props) {\n      this.instanceCount = props.instanceCount;\n    }\n    if ('geometry' in props) {\n      this.setGeometry(props.geometry);\n    }\n\n    // webgl settings\n    if ('attributes' in props) {\n      this.setAttributes(props.attributes);\n    }\n    if ('_feedbackBuffers' in props) {\n      this._setFeedbackBuffers(props._feedbackBuffers);\n    }\n  }\n\n  _checkProgram() {\n    const needsUpdate =\n      this._programDirty || this.programManager.stateHash !== this._programManagerState;\n\n    if (!needsUpdate) {\n      return;\n    }\n\n    let {program} = this.programProps;\n\n    if (program) {\n      this._managedProgram = false;\n    } else {\n      const {\n        vs,\n        fs,\n        modules,\n        inject,\n        defines,\n        varyings,\n        bufferMode,\n        transpileToGLSL100\n      } = this.programProps;\n      program = this.programManager.get({\n        vs,\n        fs,\n        modules,\n        inject,\n        defines,\n        varyings,\n        bufferMode,\n        transpileToGLSL100\n      });\n      if (this.program && this._managedProgram) {\n        this.programManager.release(this.program);\n      }\n      this._programManagerState = this.programManager.stateHash;\n      this._managedProgram = true;\n    }\n\n    assert(program instanceof Program, 'Model needs a program');\n\n    this._programDirty = false;\n\n    if (program === this.program) {\n      return;\n    }\n\n    this.program = program;\n\n    if (this.vertexArray) {\n      // @ts-ignore TODO\n      this.vertexArray.setProps({program: this.program, attributes: this.vertexArray.attributes});\n    } else {\n      this.vertexArray = new VertexArray(this.gl, {program: this.program});\n    }\n\n    // Make sure we have some reasonable default uniforms in place\n    this.setUniforms(\n      Object.assign(\n        {},\n        this.getModuleUniforms() // Get all default uniforms,\n      )\n    );\n  }\n\n  _deleteGeometryBuffers() {\n    for (const name in this.geometryBuffers) {\n      // Buffer is raw value (for indices) or first element of [buffer, accessor] pair\n      const buffer = this.geometryBuffers[name][0] || this.geometryBuffers[name];\n      if (buffer instanceof Buffer) {\n        buffer.delete();\n      }\n    }\n  }\n\n  // Updates (evaluates) all function valued uniforms based on a new set of animationProps\n  // experimental\n  _setAnimationProps(animationProps) {\n    if (this.animated) {\n      assert(animationProps, 'Model.draw(): animated uniforms but no animationProps');\n      // const animatedUniforms = this._evaluateAnimateUniforms(animationProps);\n      // Object.assign(this.uniforms, animatedUniforms);\n    }\n  }\n\n  // Transform Feedback\n\n  _setFeedbackBuffers(feedbackBuffers = {}) {\n    // Avoid setting needsRedraw if no feedbackBuffers\n    if (isObjectEmpty(feedbackBuffers)) {\n      return this;\n    }\n\n    const {gl} = this.program;\n    this.transformFeedback =\n      this.transformFeedback ||\n      new TransformFeedback(gl, {\n        program: this.program\n      });\n\n    this.transformFeedback.setBuffers(feedbackBuffers);\n    return this;\n  }\n\n  _logDrawCallStart(logLevel) {\n    const logDrawTimeout = logLevel > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (Date.now() - this.lastLogTime < logDrawTimeout) {\n      return undefined;\n    }\n\n    this.lastLogTime = Date.now();\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.level <= 2})();\n\n    return logLevel;\n  }\n\n  _logDrawCallEnd(logLevel, vertexArray, uniforms, framebuffer) {\n    // HACK: logLevel === undefined means logDrawCallStart didn't run\n    if (logLevel === undefined) {\n      return;\n    }\n\n    const attributeTable = getDebugTableForVertexArray({\n      vertexArray,\n      header: `${this.id} attributes`,\n      // @ts-ignore\n      attributes: this._attributes\n    });\n\n    const {table: uniformTable, unusedTable, unusedCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms)\n    });\n\n    // log missing uniforms\n    const {table: missingTable, count: missingCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms),\n      undefinedOnly: true\n    });\n\n    if (missingCount > 0) {\n      log.log('MISSING UNIFORMS', Object.keys(missingTable))();\n      // log.table(logLevel, missingTable)();\n    }\n    if (unusedCount > 0) {\n      log.log('UNUSED UNIFORMS', Object.keys(unusedTable))();\n      // log.log(logLevel, 'Unused uniforms ', unusedTable)();\n    }\n\n    const configTable = getDebugTableForProgramConfiguration(this.vertexArray.configuration);\n\n    log.table(logLevel, attributeTable)();\n\n    log.table(logLevel, uniformTable)();\n\n    log.table(logLevel + 1, configTable)();\n\n    if (framebuffer) {\n      framebuffer.log({logLevel: LOG_DRAW_PRIORITY, message: `Rendered to ${framebuffer.id}`});\n    }\n\n    log.groupEnd(LOG_DRAW_PRIORITY)();\n  }\n}\n"],"mappings":"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"}