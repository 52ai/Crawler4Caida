{"version":3,"file":"transform.js","names":["getPassthroughFS","BufferTransform","TextureTransform","isWebGL2","assert","isObjectEmpty","getShaderVersion","Model","Transform","isSupported","gl","constructor","props","model","elementCount","bufferTransform","textureTransform","elementIDBuffer","_initialize","Object","seal","delete","run","opts","clearRenderTarget","updatedOpts","_updateDrawOptions","framebuffer","clear","color","transform","swap","swapped","resourceTransforms","filter","Boolean","resourceTransform","getBuffer","varyingName","getData","data","getFramebuffer","update","setVertexCount","_buildResourceTransforms","_updateModelProps","assign","fs","version","vs","id","drawMode","vertexCount","setupResources","updatedProps","updateModelProps","canCreateBufferTransform","canCreateTextureTransform","getDrawOptions","feedbackBuffers","feedbackMap","varyings","length","_sourceTextures","_targetTexture","_targetTextureVarying"],"sources":["../../../src/transform/transform.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {getPassthroughFS} from '@luma.gl/shadertools';\nimport BufferTransform from './buffer-transform';\nimport TextureTransform from './texture-transform';\n\nimport {isWebGL2} from '@luma.gl/gltools';\nimport {assert, isObjectEmpty, getShaderVersion} from '@luma.gl/webgl';\nimport Model from '../lib/model';\n\n// takes source and target buffers/textures and setsup the pipeline\nexport default class Transform {\n  static isSupported(gl) {\n    // TODO : differentiate writting to buffer vs not\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    this.gl = gl;\n    this.model = null;\n    this.elementCount = 0;\n    this.bufferTransform = null;\n    this.textureTransform = null;\n    this.elementIDBuffer = null;\n    this._initialize(props);\n    Object.seal(this);\n  }\n\n  // Delete owned resources.\n  delete() {\n    const {model, bufferTransform, textureTransform} = this;\n    if (model) {\n      model.delete();\n    }\n    if (bufferTransform) {\n      bufferTransform.delete();\n    }\n    if (textureTransform) {\n      textureTransform.delete();\n    }\n  }\n\n  // Run one transform loop.\n  run(opts = {}) {\n    const {clearRenderTarget = true} = opts;\n\n    const updatedOpts = this._updateDrawOptions(opts);\n\n    if (clearRenderTarget && updatedOpts.framebuffer) {\n      updatedOpts.framebuffer.clear({color: true});\n    }\n\n    this.model.transform(updatedOpts);\n  }\n\n  // swap resources if a map is provided\n  swap() {\n    let swapped = false;\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      swapped = swapped || resourceTransform.swap();\n    }\n    assert(swapped, 'Nothing to swap');\n  }\n\n  // Return Buffer object for given varying name.\n  getBuffer(varyingName = null) {\n    return this.bufferTransform && this.bufferTransform.getBuffer(varyingName);\n  }\n\n  // Return data either from Buffer or from Texture\n  getData(opts = {}) {\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      // @ts-ignore\n      const data = resourceTransform.getData(opts);\n      if (data) {\n        return data;\n      }\n    }\n    return null;\n  }\n\n  // Return framebuffer object if rendering to textures\n  getFramebuffer() {\n    return this.textureTransform && this.textureTransform.getFramebuffer();\n  }\n\n  // Update some or all buffer/texture bindings.\n  update(opts = {}) {\n    if ('elementCount' in opts) {\n      // @ts-ignore TODO\n      this.model.setVertexCount(opts.elementCount);\n    }\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      resourceTransform.update(opts);\n    }\n  }\n\n  // Private\n\n  _initialize(props = {}) {\n    const {gl} = this;\n    this._buildResourceTransforms(gl, props);\n\n    props = this._updateModelProps(props);\n    this.model = new Model(\n      gl,\n      Object.assign({}, props, {\n        fs: props.fs || getPassthroughFS({version: getShaderVersion(props.vs)}),\n        id: props.id || 'transform-model',\n        drawMode: props.drawMode || GL.POINTS,\n        vertexCount: props.elementCount\n      })\n    );\n\n    /* eslint-disable no-unused-expressions */\n    this.bufferTransform && this.bufferTransform.setupResources({model: this.model});\n    /* eslint-enable no-unused-expressions */\n  }\n\n  _updateModelProps(props) {\n    let updatedProps = Object.assign({}, props);\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      updatedProps = resourceTransform.updateModelProps(updatedProps);\n    }\n    return updatedProps;\n  }\n\n  _buildResourceTransforms(gl, props) {\n    if (canCreateBufferTransform(props)) {\n      this.bufferTransform = new BufferTransform(gl, props);\n    }\n    if (canCreateTextureTransform(props)) {\n      this.textureTransform = new TextureTransform(gl, props);\n    }\n    assert(\n      this.bufferTransform || this.textureTransform,\n      'must provide source/feedback buffers or source/target textures'\n    );\n  }\n\n  _updateDrawOptions(opts) {\n    let updatedOpts = Object.assign({}, opts);\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      updatedOpts = Object.assign(updatedOpts, resourceTransform.getDrawOptions(updatedOpts));\n    }\n    return updatedOpts;\n  }\n}\n\n// Helper Methods\n\nfunction canCreateBufferTransform(props) {\n  if (\n    !isObjectEmpty(props.feedbackBuffers) ||\n    !isObjectEmpty(props.feedbackMap) ||\n    (props.varyings && props.varyings.length > 0)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction canCreateTextureTransform(props) {\n  if (\n    !isObjectEmpty(props._sourceTextures) ||\n    props._targetTexture ||\n    props._targetTextureVarying\n  ) {\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"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"}