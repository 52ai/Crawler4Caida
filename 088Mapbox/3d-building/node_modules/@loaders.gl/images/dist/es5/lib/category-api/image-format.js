"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._isImageFormatSupported = _isImageFormatSupported;

var _loaderUtils = require("@loaders.gl/loader-utils");

var NODE_FORMAT_SUPPORT = ['image/png', 'image/jpeg', 'image/gif'];
var mimeTypeSupported = {};

function _isImageFormatSupported(mimeType) {
  if (mimeTypeSupported[mimeType] === undefined) {
    mimeTypeSupported[mimeType] = checkFormatSupport(mimeType);
  }

  return mimeTypeSupported[mimeType];
}

function checkFormatSupport(mimeType) {
  switch (mimeType) {
    case 'image/webp':
      return checkWebPSupport();

    case 'image/svg':
      return _loaderUtils.isBrowser;

    default:
      if (!_loaderUtils.isBrowser) {
        var _parseImageNode = globalThis._parseImageNode;
        return Boolean(_parseImageNode) && NODE_FORMAT_SUPPORT.includes(mimeType);
      }

      return true;
  }
}

function checkWebPSupport() {
  if (!_loaderUtils.isBrowser) {
    return false;
  }

  try {
    var element = document.createElement('canvas');
    return element.toDataURL('image/webp').indexOf('data:image/webp') === 0;
  } catch (_unused) {
    return false;
  }
}
//# sourceMappingURL=image-format.js.map