{"version":3,"sources":["../../../../src/lib/arrow/arrow-like-type-utils.ts"],"names":["Float32","Float64","Int16","Int32","Int8","Uint16","Uint32","Uint8","getArrowTypeFromTypedArray","array","constructor","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Error"],"mappings":"AACA,SAEEA,OAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,MAPF,EAQEC,MARF,EASEC,KATF,QAUO,kBAVP;AAYA,OAAO,SAASC,0BAAT,CAAoCC,KAApC,EAAiE;AACtE,UAAQA,KAAK,CAACC,WAAd;AACE,SAAKC,SAAL;AACE,aAAO,IAAIP,IAAJ,EAAP;;AACF,SAAKQ,UAAL;AACE,aAAO,IAAIL,KAAJ,EAAP;;AACF,SAAKM,UAAL;AACE,aAAO,IAAIX,KAAJ,EAAP;;AACF,SAAKY,WAAL;AACE,aAAO,IAAIT,MAAJ,EAAP;;AACF,SAAKU,UAAL;AACE,aAAO,IAAIZ,KAAJ,EAAP;;AACF,SAAKa,WAAL;AACE,aAAO,IAAIV,MAAJ,EAAP;;AACF,SAAKW,YAAL;AACE,aAAO,IAAIjB,OAAJ,EAAP;;AACF,SAAKkB,YAAL;AACE,aAAO,IAAIjB,OAAJ,EAAP;;AACF;AACE,YAAM,IAAIkB,KAAJ,CAAU,0BAAV,CAAN;AAlBJ;AAoBD","sourcesContent":["import type {TypedArray} from '../../types';\nimport {\n  DataType,\n  Float32,\n  Float64,\n  Int16,\n  Int32,\n  Int8,\n  Uint16,\n  Uint32,\n  Uint8\n} from '../schema/schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n"],"file":"arrow-like-type-utils.js"}