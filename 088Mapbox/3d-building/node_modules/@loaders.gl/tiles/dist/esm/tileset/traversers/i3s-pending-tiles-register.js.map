{"version":3,"sources":["../../../../src/tileset/traversers/i3s-pending-tiles-register.ts"],"names":["I3SPendingTilesRegister","Map","register","viewportId","frameNumber","viewportMap","frameNumberMap","get","oldCount","set","deregister","isZero","count"],"mappings":";AAIA,eAAe,MAAMA,uBAAN,CAA8B;AAAA;AAAA,4CACgB,IAAIC,GAAJ,EADhB;AAAA;;AAQ3CC,EAAAA,QAAQ,CAACC,UAAD,EAAqBC,WAArB,EAA0C;AAChD,UAAMC,WAAW,GAAG,KAAKC,cAAL,CAAoBC,GAApB,CAAwBJ,UAAxB,KAAuC,IAAIF,GAAJ,EAA3D;AACA,UAAMO,QAAQ,GAAGH,WAAW,CAACE,GAAZ,CAAgBH,WAAhB,KAAgC,CAAjD;AACAC,IAAAA,WAAW,CAACI,GAAZ,CAAgBL,WAAhB,EAA6BI,QAAQ,GAAG,CAAxC;AACA,SAAKF,cAAL,CAAoBG,GAApB,CAAwBN,UAAxB,EAAoCE,WAApC;AACD;;AAODK,EAAAA,UAAU,CAACP,UAAD,EAAqBC,WAArB,EAA0C;AAClD,UAAMC,WAAW,GAAG,KAAKC,cAAL,CAAoBC,GAApB,CAAwBJ,UAAxB,CAApB;;AACA,QAAI,CAACE,WAAL,EAAkB;AAChB;AACD;;AACD,UAAMG,QAAQ,GAAGH,WAAW,CAACE,GAAZ,CAAgBH,WAAhB,KAAgC,CAAjD;AACAC,IAAAA,WAAW,CAACI,GAAZ,CAAgBL,WAAhB,EAA6BI,QAAQ,GAAG,CAAxC;AACD;;AAQDG,EAAAA,MAAM,CAACR,UAAD,EAAqBC,WAArB,EAA0C;AAAA;;AAC9C,UAAMQ,KAAK,GAAG,+BAAKN,cAAL,CAAoBC,GAApB,CAAwBJ,UAAxB,iFAAqCI,GAArC,CAAyCH,WAAzC,MAAyD,CAAvE;AACA,WAAOQ,KAAK,KAAK,CAAjB;AACD;;AAtC0C","sourcesContent":["/**\n * Counter to register pending tile headers for the particular frameNumber\n * Until all tiles are loaded we won't call `onTraversalEnd` callback\n */\nexport default class I3SPendingTilesRegister {\n  private frameNumberMap: Map<string, Map<number, number>> = new Map();\n\n  /**\n   * Register a new pending tile header for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   */\n  register(viewportId: string, frameNumber: number) {\n    const viewportMap = this.frameNumberMap.get(viewportId) || new Map();\n    const oldCount = viewportMap.get(frameNumber) || 0;\n    viewportMap.set(frameNumber, oldCount + 1);\n    this.frameNumberMap.set(viewportId, viewportMap);\n  }\n\n  /**\n   * Deregister a pending tile header for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   */\n  deregister(viewportId: string, frameNumber: number) {\n    const viewportMap = this.frameNumberMap.get(viewportId);\n    if (!viewportMap) {\n      return;\n    }\n    const oldCount = viewportMap.get(frameNumber) || 1;\n    viewportMap.set(frameNumber, oldCount - 1);\n  }\n\n  /**\n   * Check is there are no pending tile headers registered for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   * @returns\n   */\n  isZero(viewportId: string, frameNumber: number) {\n    const count = this.frameNumberMap.get(viewportId)?.get(frameNumber) || 0;\n    return count === 0;\n  }\n}\n"],"file":"i3s-pending-tiles-register.js"}