{"version":3,"sources":["../../../../../src/lib/parsers/helpers/normalize-3d-tile-normals.ts"],"names":["Vector3","GL","octDecode","scratchNormal","normalize3DTileNormalAttribute","tile","normals","isOctEncoded16P","decodedArray","Float32Array","pointsLength","i","toArray","type","FLOAT","size","value"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,EAAR,EAAYC,SAAZ,QAA4B,kBAA5B;AAEA,MAAMC,aAAa,GAAG,IAAIH,OAAJ,EAAtB;AAEA,OAAO,SAASI,8BAAT,CAAwCC,IAAxC,EAA8CC,OAA9C,EAAuD;AAC5D,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,MAAID,IAAI,CAACE,eAAT,EAA0B;AACxB,UAAMC,YAAY,GAAG,IAAIC,YAAJ,CAAiBJ,IAAI,CAACK,YAAL,GAAoB,CAArC,CAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACK,YAAzB,EAAuCC,CAAC,EAAxC,EAA4C;AAC1CT,MAAAA,SAAS,CAACI,OAAO,CAACK,CAAC,GAAG,CAAL,CAAR,EAAiBL,OAAO,CAACK,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAxB,EAAqCR,aAArC,CAAT;AAEAA,MAAAA,aAAa,CAACS,OAAd,CAAsBJ,YAAtB,EAAoCG,CAAC,GAAG,CAAxC;AACD;;AAED,WAAO;AACLE,MAAAA,IAAI,EAAEZ,EAAE,CAACa,KADJ;AAELC,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,KAAK,EAAER;AAHF,KAAP;AAKD;;AAED,SAAO;AACLK,IAAAA,IAAI,EAAEZ,EAAE,CAACa,KADJ;AAELC,IAAAA,IAAI,EAAE,CAFD;AAGLC,IAAAA,KAAK,EAAEV;AAHF,GAAP;AAKD","sourcesContent":["import {Vector3} from '@math.gl/core';\nimport {GL, octDecode} from '@loaders.gl/math';\n\nconst scratchNormal = new Vector3();\n\nexport function normalize3DTileNormalAttribute(tile, normals) {\n  if (!normals) {\n    return null;\n  }\n\n  if (tile.isOctEncoded16P) {\n    const decodedArray = new Float32Array(tile.pointsLength * 3);\n    for (let i = 0; i < tile.pointsLength; i++) {\n      octDecode(normals[i * 2], normals[i * 2 + 1], scratchNormal);\n      // @ts-ignore\n      scratchNormal.toArray(decodedArray, i * 3);\n    }\n\n    return {\n      type: GL.FLOAT,\n      size: 2,\n      value: decodedArray\n    };\n  }\n\n  return {\n    type: GL.FLOAT,\n    size: 2,\n    value: normals\n  };\n}\n"],"file":"normalize-3d-tile-normals.js"}