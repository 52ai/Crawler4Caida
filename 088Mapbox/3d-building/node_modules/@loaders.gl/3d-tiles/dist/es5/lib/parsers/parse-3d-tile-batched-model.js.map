{"version":3,"sources":["../../../../src/lib/parsers/parse-3d-tile-batched-model.ts"],"names":["parseBatchedModel3DTile","tile","arrayBuffer","byteOffset","options","context","parseBatchedModel","GLTF_FORMAT","EMBEDDED","extensions","gltf","CESIUM_RTC","rtcCenter","center","featureTable","Tile3DFeatureTable","featureTableJson","featureTableBinary","getGlobalProperty","GL","FLOAT"],"mappings":";;;;;;;;;;;;;AAGA;;AACA;;AAGA;;AACA;;AACA;;SAEsBA,uB;;;;;uFAAf,iBAAuCC,IAAvC,EAA6CC,WAA7C,EAA0DC,UAA1D,EAAsEC,OAAtE,EAA+EC,OAA/E;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACLF,YAAAA,UAAU,GAAGG,iBAAiB,CAACL,IAAD,EAAOC,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,OAAzC,CAA9B;AADK;AAAA,mBAEC,sCAAYJ,IAAZ,EAAkBM,iCAAYC,QAA9B,EAAwCJ,OAAxC,EAAiDC,OAAjD,CAFD;;AAAA;AAICI,YAAAA,UAJD,GAIcR,IAJd,aAIcA,IAJd,qCAIcA,IAAI,CAAES,IAJpB,+CAIc,WAAYD,UAJ1B;;AAKL,gBAAIA,UAAU,IAAIA,UAAU,CAACE,UAA7B,EAAyC;AACvCV,cAAAA,IAAI,CAACW,SAAL,GAAiBH,UAAU,CAACE,UAAX,CAAsBE,MAAvC;AACD;;AAPI,6CASEV,UATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,SAASG,iBAAT,CAA2BL,IAA3B,EAAiCC,WAAjC,EAA8CC,UAA9C,EAA0DC,OAA1D,EAAmEC,OAAnE,EAA4E;AAC1EF,EAAAA,UAAU,GAAG,8CAAsBF,IAAtB,EAA4BC,WAA5B,EAAyCC,UAAzC,CAAb;AAEAA,EAAAA,UAAU,GAAG,oDAA4BF,IAA5B,EAAkCC,WAAlC,EAA+CC,UAA/C,CAAb;AACAA,EAAAA,UAAU,GAAG,8CAAsBF,IAAtB,EAA4BC,WAA5B,EAAyCC,UAAzC,EAAqDC,OAArD,CAAb;AAEAD,EAAAA,UAAU,GAAG,kDAAwBF,IAAxB,EAA8BC,WAA9B,EAA2CC,UAA3C,EAAuDC,OAAvD,CAAb;AAEA,MAAMU,YAAY,GAAG,IAAIC,2BAAJ,CAAuBd,IAAI,CAACe,gBAA5B,EAA8Cf,IAAI,CAACgB,kBAAnD,CAArB;AACAhB,EAAAA,IAAI,CAACW,SAAL,GAAiBE,YAAY,CAACI,iBAAb,CAA+B,YAA/B,EAA6CC,SAAGC,KAAhD,EAAuD,CAAvD,CAAjB;AAEA,SAAOjB,UAAP;AACD","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL} from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n\n  const extensions = tile?.gltf?.extensions;\n  if (extensions && extensions.CESIUM_RTC) {\n    tile.rtcCenter = extensions.CESIUM_RTC.center;\n  }\n\n  return byteOffset;\n}\n\nfunction parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  return byteOffset;\n}\n"],"file":"parse-3d-tile-batched-model.js"}