"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._typecheckQuantizedMeshLoader = exports.QuantizedMeshLoader = exports.QuantizedMeshWorkerLoader = exports._typecheckTerrainLoader = exports.TerrainLoader = exports.TerrainWorkerLoader = void 0;
const parse_quantized_mesh_1 = __importDefault(require("./lib/parse-quantized-mesh"));
const parse_terrain_1 = __importDefault(require("./lib/parse-terrain"));
const terrain_loader_1 = require("./terrain-loader");
Object.defineProperty(exports, "TerrainWorkerLoader", { enumerable: true, get: function () { return terrain_loader_1.TerrainLoader; } });
const quantized_mesh_loader_1 = require("./quantized-mesh-loader");
Object.defineProperty(exports, "QuantizedMeshWorkerLoader", { enumerable: true, get: function () { return quantized_mesh_loader_1.QuantizedMeshLoader; } });
exports.TerrainLoader = {
    ...terrain_loader_1.TerrainLoader,
    parse: parse_terrain_1.default
};
exports._typecheckTerrainLoader = exports.TerrainLoader; // eslint-disable-line
/**
 * Loader for quantized meshes
 */
exports.QuantizedMeshLoader = {
    ...quantized_mesh_loader_1.QuantizedMeshLoader,
    parseSync: parse_quantized_mesh_1.default,
    parse: async (arrayBuffer, options) => (0, parse_quantized_mesh_1.default)(arrayBuffer, options)
};
exports._typecheckQuantizedMeshLoader = exports.QuantizedMeshLoader;
