{"version":3,"sources":["../../../../src/lib/worker-loader-utils/encode-with-worker.ts"],"names":["WorkerFarm","isBrowser","canEncodeWithWorker","writer","options","isSupported","_nodeWorkers","worker"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,0BAAzB;AAEA,SAAQC,SAAR,QAAwB,sBAAxB;AAOA,OAAO,SAASC,mBAAT,CAA6BC,MAA7B,EAA6CC,OAA7C,EAAsE;AAC3E,MAAI,CAACJ,UAAU,CAACK,WAAX,EAAL,EAA+B;AAC7B,WAAO,KAAP;AACD;;AAGD,MAAI,CAACJ,SAAD,IAAc,EAACG,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEE,YAAV,CAAlB,EAA0C;AACxC,WAAO,KAAP;AACD;;AAED,SAAOH,MAAM,CAACI,MAAP,KAAiBH,OAAjB,aAAiBA,OAAjB,uBAAiBA,OAAO,CAAEG,MAA1B,CAAP;AACD","sourcesContent":["import {WorkerFarm} from '@loaders.gl/worker-utils';\nimport {Writer, WriterOptions} from '../../types';\nimport {isBrowser} from '../env-utils/globals';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canEncodeWithWorker(writer: Writer, options?: WriterOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  // Node workers are still experimental\n  if (!isBrowser && !options?._nodeWorkers) {\n    return false;\n  }\n\n  return writer.worker && options?.worker;\n}\n"],"file":"encode-with-worker.js"}