{"version":3,"sources":["../../src/npy-loader.ts"],"names":["VERSION","parseNPY","NPY_MAGIC_NUMBER","Uint8Array","NPYWorkerLoader","name","id","module","version","worker","extensions","mimeTypes","tests","buffer","options","npy","NPYLoader","parseSync","parse","arrayBuffer","_TypecheckNPYWorkerLoader","_TypecheckNPYLoader"],"mappings":"AACA,SAAQA,OAAR,QAAsB,qBAAtB;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AAGA,MAAMC,gBAAgB,GAAG,IAAIC,UAAJ,CAAe,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,CAAf,CAAzB;AAKA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EAAE,KADuB;AAE7BC,EAAAA,EAAE,EAAE,KAFyB;AAG7BC,EAAAA,MAAM,EAAE,UAHqB;AAI7BC,EAAAA,OAAO,EAAER,OAJoB;AAK7BS,EAAAA,MAAM,EAAE,IALqB;AAM7BC,EAAAA,UAAU,EAAE,CAAC,KAAD,CANiB;AAO7BC,EAAAA,SAAS,EAAE,EAPkB;AAQ7BC,EAAAA,KAAK,EAAE,CAACV,gBAAgB,CAACW,MAAlB,CARsB;AAS7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE;AAToB,CAAxB;AAiBP,OAAO,MAAMC,SAAS,GAAG,EACvB,GAAGZ,eADoB;AAEvBa,EAAAA,SAAS,EAAEhB,QAFY;AAGvBiB,EAAAA,KAAK,EAAE,OAAOC,WAAP,EAAiCL,OAAjC,KAA6Db,QAAQ,CAACkB,WAAD,EAAcL,OAAd;AAHrD,CAAlB;AAOP,OAAO,MAAMM,yBAAiC,GAAGhB,eAA1C;AACP,OAAO,MAAMiB,mBAAqC,GAAGL,SAA9C","sourcesContent":["import type {Loader, LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseNPY} from './lib/parsers/parse-npy';\n\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n\n/**\n * Worker loader for numpy \"tiles\"\n */\nexport const NPYWorkerLoader = {\n  name: 'NPY',\n  id: 'npy',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {}\n  }\n};\n\n/**\n * Loader for numpy \"tiles\"\n */\nexport const NPYLoader = {\n  ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer: ArrayBuffer, options?: LoaderOptions) => parseNPY(arrayBuffer, options)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckNPYWorkerLoader: Loader = NPYWorkerLoader;\nexport const _TypecheckNPYLoader: LoaderWithParser = NPYLoader;\n"],"file":"npy-loader.js"}