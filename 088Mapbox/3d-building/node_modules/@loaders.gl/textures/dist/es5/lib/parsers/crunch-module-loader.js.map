{"version":3,"sources":["../../../../src/lib/parsers/crunch-module-loader.ts"],"names":["loadCrunchModule","options","modules","crunch","loadCrunch","crunchModule","loadCrunchDecoder","globalThis","LoadCrunchDecoder"],"mappings":";;;;;;;;;;;;;AACA;;SAOsBA,gB;;;;;gFAAf,iBAAgCC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,OADD,GACWD,OAAO,CAACC,OAAR,IAAmB,EAD9B;;AAAA,iBAEDA,OAAO,CAACC,MAFP;AAAA;AAAA;AAAA;;AAAA,6CAGID,OAAO,CAACC,MAHZ;;AAAA;AAAA,6CAMEC,UAAU,CAACH,OAAD,CANZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASP,IAAII,YAAJ;;SAOeD,U;;;;;0EAAf,kBAA0BH,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMI,YADN;AAAA;AAAA;AAAA;;AAAA,8CAEWA,YAFX;;AAAA;AAAA;AAAA,mBAKgC,8BAAY,WAAZ,EAAyB,UAAzB,EAAqCJ,OAArC,CALhC;;AAAA;AAKMK,YAAAA,iBALN;AASEA,YAAAA,iBAAiB,GAAGA,iBAAiB,IAAIC,UAAU,CAACC,iBAApD;AACAH,YAAAA,YAAY,GAAGC,iBAAiB,EAAhC;AAVF,8CAWSD,YAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// @ts-nocheck\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\n/**\n * Load crunch decoder module\n * @param options - loader options\n * @returns Promise of module object\n */\nexport async function loadCrunchModule(options): Promise<any> {\n  const modules = options.modules || {};\n  if (modules.crunch) {\n    return modules.crunch;\n  }\n\n  return loadCrunch(options);\n}\n\nlet crunchModule;\n\n/**\n * Load crunch decoder module\n * @param {any} options - Loader options\n * @returns {Promise<any>} Promise of Module object\n */\nasync function loadCrunch(options) {\n  if (crunchModule) {\n    return crunchModule;\n  }\n\n  let loadCrunchDecoder = await loadLibrary('crunch.js', 'textures', options);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  loadCrunchDecoder = loadCrunchDecoder || globalThis.LoadCrunchDecoder;\n  crunchModule = loadCrunchDecoder();\n  return crunchModule;\n}\n"],"file":"crunch-module-loader.js"}