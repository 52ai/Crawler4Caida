{"version":3,"sources":["../../src/index.ts"],"names":["VERSION","assert","isBrowser","isWorker","default","WorkerJob","WorkerThread","WorkerFarm","WorkerPool","WorkerBody","processOnWorker","canProcessOnWorker","createWorker","getWorkerURL","validateWorkerVersion","getTransferList","getTransferListForWriter","getLibraryUrl","loadLibrary","AsyncQueue","ChildProcessProxy","NullWorker","id","name","module","version","options","null"],"mappings":"AACA,SAAQA,OAAR,QAAsB,yBAAtB;AAcA,SAAQC,MAAR,QAAqB,wBAArB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,yBAAlC;AAGA,SAAQC,OAAO,IAAIC,SAAnB,QAAmC,8BAAnC;AACA,SAAQD,OAAO,IAAIE,YAAnB,QAAsC,iCAAtC;AAGA,SAAQF,OAAO,IAAIG,UAAnB,QAAoC,+BAApC;AACA,SAAQH,OAAO,IAAII,UAAnB,QAAoC,+BAApC;AACA,SAAQJ,OAAO,IAAIK,UAAnB,QAAoC,+BAApC;AAEA,SAAQC,eAAR,EAAyBC,kBAAzB,QAAkD,oCAAlD;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AAGA,SAAQC,YAAR,QAA2B,iCAA3B;AACA,SAAQC,qBAAR,QAAoC,0CAApC;AACA,SAAQC,eAAR,EAAyBC,wBAAzB,QAAwD,sCAAxD;AAGA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,mCAAzC;AAGA,SAAQd,OAAO,IAAIe,UAAnB,QAAoC,+BAApC;AAGA,SAAQf,OAAO,IAAIgB,iBAAnB,QAA2C,yCAA3C;AAKA,OAAO,MAAMC,UAAwB,GAAG;AACtCC,EAAAA,EAAE,EAAE,MADkC;AAEtCC,EAAAA,IAAI,EAAE,MAFgC;AAGtCC,EAAAA,MAAM,EAAE,cAH8B;AAItCC,EAAAA,OAAO,EAAEzB,OAJ6B;AAKtC0B,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC;AAL6B,CAAjC","sourcesContent":["import type {WorkerObject} from './types';\nimport {VERSION} from './lib/env-utils/version';\n\n// TYPES\nexport type {\n  WorkerObject,\n  WorkerOptions,\n  // Protocol\n  WorkerMessage,\n  WorkerMessageType,\n  WorkerMessageData,\n  WorkerMessagePayload\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {isBrowser, isWorker} from './lib/env-utils/globals';\n\n// WORKER UTILS - TYPES\nexport {default as WorkerJob} from './lib/worker-farm/worker-job';\nexport {default as WorkerThread} from './lib/worker-farm/worker-thread';\n\n// WORKER FARMS\nexport {default as WorkerFarm} from './lib/worker-farm/worker-farm';\nexport {default as WorkerPool} from './lib/worker-farm/worker-pool';\nexport {default as WorkerBody} from './lib/worker-farm/worker-body';\n\nexport {processOnWorker, canProcessOnWorker} from './lib/worker-api/process-on-worker';\nexport {createWorker} from './lib/worker-api/create-worker';\n\n// WORKER UTILS - EXPORTS\nexport {getWorkerURL} from './lib/worker-api/get-worker-url';\nexport {validateWorkerVersion} from './lib/worker-api/validate-worker-version';\nexport {getTransferList, getTransferListForWriter} from './lib/worker-utils/get-transfer-list';\n\n// LIBRARY UTILS\nexport {getLibraryUrl, loadLibrary} from './lib/library-utils/library-utils';\n\n// PARSER UTILS\nexport {default as AsyncQueue} from './lib/async-queue/async-queue';\n\n// PROCESS UTILS\nexport {default as ChildProcessProxy} from './lib/process-utils/child-process-proxy';\n\n// WORKER OBJECTS\n\n/** A null worker to test that worker processing is functional */\nexport const NullWorker: WorkerObject = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};\n"],"file":"index.js"}