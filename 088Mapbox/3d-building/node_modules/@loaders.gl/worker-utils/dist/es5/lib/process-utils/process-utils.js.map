{"version":3,"sources":["../../../../src/lib/process-utils/process-utils.ts"],"names":["getAvailablePort","defaultPort","Promise","resolve","ChildProcess","exec","error","stdout","portsInUse","regex","split","forEach","line","match","push","Number","port","includes"],"mappings":";;;;;;;;;AAAA;;AAIO,SAASA,gBAAT,GAAuE;AAAA,MAA7CC,WAA6C,uEAAvB,IAAuB;AAC5E,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAE9BC,2BAAaC,IAAb,CAAkB,6BAAlB,EAAiD,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAClE,UAAID,KAAJ,EAAW;AAETH,QAAAA,OAAO,CAACF,WAAD,CAAP;AACA;AACD;;AAED,UAAMO,UAAoB,GAAG,EAA7B;AACA,UAAMC,KAAK,GAAG,mBAAd;AACAF,MAAAA,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,OAAnB,CAA2B,UAACC,IAAD,EAAU;AACnC,YAAMC,KAAK,GAAGJ,KAAK,CAACJ,IAAN,CAAWO,IAAX,CAAd;;AACA,YAAIC,KAAJ,EAAW;AACTL,UAAAA,UAAU,CAACM,IAAX,CAAgBC,MAAM,CAACF,KAAK,CAAC,CAAD,CAAN,CAAtB;AACD;AACF,OALD;AAMA,UAAIG,IAAI,GAAGf,WAAX;;AACA,aAAOO,UAAU,CAACS,QAAX,CAAoBD,IAApB,CAAP,EAAkC;AAChCA,QAAAA,IAAI;AACL;;AACDb,MAAAA,OAAO,CAACa,IAAD,CAAP;AACD,KApBD;AAqBD,GAvBM,CAAP;AAwBD","sourcesContent":["import ChildProcess from 'child_process';\n\n// Get an available port\n// Works on Unix systems\nexport function getAvailablePort(defaultPort: number = 3000): Promise<number> {\n  return new Promise((resolve) => {\n    // Get a list of all ports in use\n    ChildProcess.exec('lsof -i -P -n | grep LISTEN', (error, stdout) => {\n      if (error) {\n        // likely no permission, e.g. CI\n        resolve(defaultPort);\n        return;\n      }\n\n      const portsInUse: number[] = [];\n      const regex = /:(\\d+) \\(LISTEN\\)/;\n      stdout.split('\\n').forEach((line) => {\n        const match = regex.exec(line);\n        if (match) {\n          portsInUse.push(Number(match[1]));\n        }\n      });\n      let port = defaultPort;\n      while (portsInUse.includes(port)) {\n        port++;\n      }\n      resolve(port);\n    });\n  });\n}\n"],"file":"process-utils.js"}