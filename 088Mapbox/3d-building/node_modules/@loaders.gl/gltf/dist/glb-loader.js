"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._TypecheckGLBLoader = exports.GLBLoader = void 0;
const version_1 = require("./lib/utils/version");
const parse_glb_1 = __importDefault(require("./lib/parsers/parse-glb"));
/**
 * GLB Loader -
 * GLB is the binary container format for GLTF
 */
exports.GLBLoader = {
    name: 'GLB',
    id: 'glb',
    module: 'gltf',
    version: version_1.VERSION,
    extensions: ['glb'],
    mimeTypes: ['model/gltf-binary'],
    binary: true,
    parse,
    parseSync,
    options: {
        glb: {
            strict: false // Enables deprecated XVIZ support (illegal CHUNK formats)
        }
    }
};
async function parse(arrayBuffer, options) {
    return parseSync(arrayBuffer, options);
}
function parseSync(arrayBuffer, options) {
    const { byteOffset = 0 } = options || {};
    const glb = {};
    (0, parse_glb_1.default)(glb, arrayBuffer, byteOffset, options?.glb);
    return glb;
}
// TYPE TESTS - TODO find a better way than exporting junk
exports._TypecheckGLBLoader = exports.GLBLoader;
