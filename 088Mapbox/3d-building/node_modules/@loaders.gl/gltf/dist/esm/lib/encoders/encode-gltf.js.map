{"version":3,"sources":["../../../../src/lib/encoders/encode-gltf.ts"],"names":["encodeGLBSync","encodeGLTFSync","gltf","arrayBuffer","byteOffset","options","convertBuffersToBase64","firstBuffer","buffers","length","Error"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,cAA1B;AAYA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,WAA9B,EAA2CC,UAA3C,EAAuDC,OAAvD,EAAgE;AACrEC,EAAAA,sBAAsB,CAACJ,IAAD,CAAtB;AAIA,SAAOF,aAAa,CAACE,IAAD,EAAOC,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,CAApB;AACD;;AAED,SAASC,sBAAT,CAAgCJ,IAAhC,EAAsC;AAACK,EAAAA,WAAW,GAAG;AAAf,IAAoB,EAA1D,EAA8D;AAC5D,MAAIL,IAAI,CAACM,OAAL,IAAgBN,IAAI,CAACM,OAAL,CAAaC,MAAb,GAAsBF,WAA1C,EAAuD;AACrD,UAAM,IAAIG,KAAJ,CAAU,kDAAV,CAAN;AACD;AACF","sourcesContent":["import encodeGLBSync from './encode-glb';\n\n// Encode the full glTF file as a binary GLB file\n// Returns an ArrayBuffer that represents the complete GLB image that can be saved to file\n//\n// TODO - Does not support encoding to non-GLB versions of glTF format\n// - Encode as a textual JSON file with binary data in base64 data URLs.\n// - Encode as a JSON with all images (and buffers?) in separate binary files\n//\n// glb-file-format-specification\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n\nexport function encodeGLTFSync(gltf, arrayBuffer, byteOffset, options) {\n  convertBuffersToBase64(gltf);\n\n  // TODO: Copy buffers to binary\n\n  return encodeGLBSync(gltf, arrayBuffer, byteOffset, options);\n}\n\nfunction convertBuffersToBase64(gltf, {firstBuffer = 0} = {}) {\n  if (gltf.buffers && gltf.buffers.length > firstBuffer) {\n    throw new Error('encodeGLTF: multiple buffers not yet implemented');\n  }\n}\n"],"file":"encode-gltf.js"}