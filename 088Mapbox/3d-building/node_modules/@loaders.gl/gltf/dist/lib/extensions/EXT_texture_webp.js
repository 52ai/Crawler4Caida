"use strict";
// GLTF EXTENSION: EXT_TEXTURE_WEBP
// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_TEXTURE_WEBP
/* eslint-disable camelcase */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.preprocess = exports.name = void 0;
const images_1 = require("@loaders.gl/images");
const gltf_scenegraph_1 = __importDefault(require("../api/gltf-scenegraph"));
const EXT_TEXTURE_WEBP = 'EXT_texture_webp';
/** Extension name */
exports.name = EXT_TEXTURE_WEBP;
/**
 * Replaces a texture source reference with the extension texture
 * Done in preprocess() to prevent load of default image
 */
function preprocess(gltfData, options) {
    const scenegraph = new gltf_scenegraph_1.default(gltfData);
    if (!(0, images_1._isImageFormatSupported)('image/webp')) {
        if (scenegraph.getRequiredExtensions().includes(EXT_TEXTURE_WEBP)) {
            throw new Error(`gltf: Required extension ${EXT_TEXTURE_WEBP} not supported by browser`);
        }
        return;
    }
    const { json } = scenegraph;
    for (const texture of json.textures || []) {
        const extension = scenegraph.getObjectExtension(texture, EXT_TEXTURE_WEBP);
        if (extension) {
            texture.source = extension.source;
        }
        scenegraph.removeObjectExtension(texture, EXT_TEXTURE_WEBP);
    }
    // Remove the top-level extension
    scenegraph.removeExtension(EXT_TEXTURE_WEBP);
}
exports.preprocess = preprocess;
