{"version":3,"sources":["../../../../../src/lib/extensions/deprecated/KHR_materials_unlit.ts"],"names":["KHR_MATERIALS_UNLIT","name","decode","gltfData","gltfScenegraph","GLTFScenegraph","json","removeExtension","materials","material","extension","extensions","KHR_materials_unlit","unlit","removeObjectExtension","encode","addObjectExtension","addExtension"],"mappings":";;;;;;;;;;;;;;;AAKA;;;;;;;;AAEA,IAAMA,mBAAmB,GAAG,qBAA5B;AAEO,IAAMC,IAAI,GAAGD,mBAAb;;;SAEeE,M;;;;;sEAAf,iBAAsBC,QAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,cADD,GACkB,IAAIC,uBAAJ,CAAmBF,QAAnB,CADlB;AAEEG,YAAAA,IAFF,GAEUF,cAFV,CAEEE,IAFF;AAKLF,YAAAA,cAAc,CAACG,eAAf,CAA+BP,mBAA/B;AALK,oDASkBM,IAAI,CAACE,SAAL,IAAkB,EATpC;;AAAA;AASL,qEAA6C;AAAlCC,gBAAAA,QAAkC;AACrCC,gBAAAA,SADqC,GACzBD,QAAQ,CAACE,UAAT,IAAuBF,QAAQ,CAACE,UAAT,CAAoBC,mBADlB;;AAE3C,oBAAIF,SAAJ,EAAe;AAEbD,kBAAAA,QAAQ,CAACI,KAAT,GAAiB,IAAjB;AACD;;AACDT,gBAAAA,cAAc,CAACU,qBAAf,CAAqCL,QAArC,EAA+CT,mBAA/C;AACD;AAhBI;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBA,SAASe,MAAT,CAAgBZ,QAAhB,EAA0B;AAC/B,MAAMC,cAAc,GAAG,IAAIC,uBAAJ,CAAmBF,QAAnB,CAAvB;AACA,MAAOG,IAAP,GAAeF,cAAf,CAAOE,IAAP;;AAKA,MAAIF,cAAc,CAACI,SAAnB,EAA8B;AAAA,+CACLF,IAAI,CAACE,SAAL,IAAkB,EADb;AAAA;;AAAA;AAC5B,0DAA6C;AAAA,YAAlCC,QAAkC;;AAE3C,YAAIA,QAAQ,CAACI,KAAb,EAAoB;AAElB,iBAAOJ,QAAQ,CAACI,KAAhB;AACAT,UAAAA,cAAc,CAACY,kBAAf,CAAkCP,QAAlC,EAA4CT,mBAA5C,EAAiE,EAAjE;AACAI,UAAAA,cAAc,CAACa,YAAf,CAA4BjB,mBAA5B;AACD;AACF;AAT2B;AAAA;AAAA;AAAA;AAAA;AAU7B;AACF","sourcesContent":["// GLTF EXTENSION: KHR_materials_unlit\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\n\nexport const name = KHR_MATERIALS_UNLIT;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Remove the top-level extension\n  gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const material of json.materials || []) {\n    const extension = material.extensions && material.extensions.KHR_materials_unlit;\n    if (extension) {\n      // @ts-ignore TODO\n      material.unlit = true;\n    }\n    gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n  }\n}\n\nexport function encode(gltfData) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.materials) {\n    for (const material of json.materials || []) {\n      // @ts-ignore\n      if (material.unlit) {\n        // @ts-ignore\n        delete material.unlit;\n        gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n        gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n      }\n    }\n  }\n}\n"],"file":"KHR_materials_unlit.js"}