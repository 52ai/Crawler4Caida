"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DracoWriter = void 0;
const draco_builder_1 = __importDefault(require("./lib/draco-builder"));
const draco_module_loader_1 = require("./lib/draco-module-loader");
const version_1 = require("./lib/utils/version");
const DEFAULT_DRACO_OPTIONS = {
    pointcloud: false,
    attributeNameEntry: 'name'
    // Draco Compression Parameters
    // method: 'MESH_EDGEBREAKER_ENCODING',
    // speed: [5, 5],
    // quantization: {
    //   POSITION: 10
    // }
};
/**
 * Exporter for Draco3D compressed geometries
 */
exports.DracoWriter = {
    name: 'DRACO',
    id: 'draco',
    module: 'draco',
    version: version_1.VERSION,
    extensions: ['drc'],
    encode,
    options: {
        draco: DEFAULT_DRACO_OPTIONS
    }
};
async function encode(data, options = {}) {
    // Dynamically load draco
    const { draco } = await (0, draco_module_loader_1.loadDracoEncoderModule)(options);
    const dracoBuilder = new draco_builder_1.default(draco);
    try {
        return dracoBuilder.encodeSync(data, options.draco);
    }
    finally {
        dracoBuilder.destroy();
    }
}
