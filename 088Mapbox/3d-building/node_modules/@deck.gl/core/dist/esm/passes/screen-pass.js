import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { ClipSpace, setParameters, withParameters, clear } from '@luma.gl/core';
import Pass from './pass';
export default class ScreenPass extends Pass {
  constructor(gl, props) {
    super(gl, props);

    _defineProperty(this, "model", void 0);

    const {
      module,
      fs,
      id
    } = props;
    this.model = new ClipSpace(gl, {
      id,
      fs,
      modules: [module]
    });
  }

  render(params) {
    const gl = this.gl;
    setParameters(gl, {
      viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]
    });
    withParameters(gl, {
      framebuffer: params.outputBuffer,
      clearColor: [0, 0, 0, 0]
    }, () => this._renderPass(gl, params));
  }

  delete() {
    this.model.delete();
    this.model = null;
  }

  _renderPass(gl, options) {
    const {
      inputBuffer
    } = options;
    clear(gl, {
      color: true
    });
    this.model.draw({
      moduleSettings: this.props.moduleSettings,
      uniforms: {
        texture: inputBuffer,
        texSize: [inputBuffer.width, inputBuffer.height]
      },
      parameters: {
        depthWrite: false,
        depthTest: false
      }
    });
  }

}
//# sourceMappingURL=screen-pass.js.map