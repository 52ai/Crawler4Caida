{"version":3,"sources":["../../../src/utils/count.ts"],"names":["ERR_NOT_OBJECT","ERR_NOT_CONTAINER","count","container","isObject","Error","Number","isFinite","size","length","isPlainObject","Object","keys","value","constructor"],"mappings":"AAoBA,MAAMA,cAAc,GAAG,iCAAvB;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AASA,OAAO,SAASC,KAAT,CAAeC,SAAf,EAAuC;AAC5C,MAAI,CAACC,QAAQ,CAACD,SAAD,CAAb,EAA0B;AACxB,UAAM,IAAIE,KAAJ,CAAUL,cAAV,CAAN;AACD;;AAGD,MAAI,OAAOG,SAAS,CAACD,KAAjB,KAA2B,UAA/B,EAA2C;AACzC,WAAOC,SAAS,CAACD,KAAV,EAAP;AACD;;AAGD,MAAII,MAAM,CAACC,QAAP,CAAgBJ,SAAS,CAACK,IAA1B,CAAJ,EAAqC;AACnC,WAAOL,SAAS,CAACK,IAAjB;AACD;;AAKD,MAAIF,MAAM,CAACC,QAAP,CAAgBJ,SAAS,CAACM,MAA1B,CAAJ,EAAuC;AACrC,WAAON,SAAS,CAACM,MAAjB;AACD;;AAGD,MAAIC,aAAa,CAACP,SAAD,CAAjB,EAA8B;AAC5B,WAAOQ,MAAM,CAACC,IAAP,CAAYT,SAAZ,EAAuBM,MAA9B;AACD;;AAED,QAAM,IAAIJ,KAAJ,CAAUJ,iBAAV,CAAN;AACD;;AAOD,SAASS,aAAT,CAAuBG,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+CA,KAAK,CAACC,WAAN,KAAsBH,MAA5E;AACD;;AAOD,SAASP,QAAT,CAAkBS,KAAlB,EAAyB;AACvB,SAAOA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAA1C;AACD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst ERR_NOT_OBJECT = 'count(): argument not an object';\nconst ERR_NOT_CONTAINER = 'count(): argument not a container';\n\n/**\n * Deduces numer of elements in a JavaScript container.\n * - Auto-deduction for ES6 containers that define a count() method\n * - Auto-deduction for ES6 containers that define a size member\n * - Auto-deduction for Classic Arrays via the built-in length attribute\n * - Also handles objects, although note that this an O(N) operation\n */\nexport function count(container: any): number {\n  if (!isObject(container)) {\n    throw new Error(ERR_NOT_OBJECT);\n  }\n\n  // Check if ES6 collection \"count\" function is available\n  if (typeof container.count === 'function') {\n    return container.count();\n  }\n\n  // Check if ES6 collection \"size\" attribute is set\n  if (Number.isFinite(container.size)) {\n    return container.size;\n  }\n\n  // Check if array length attribute is set\n  // Note: checking this last since some ES6 collections (Immutable.js)\n  // emit profuse warnings when trying to access `length` attribute\n  if (Number.isFinite(container.length)) {\n    return container.length;\n  }\n\n  // Note that getting the count of an object is O(N)\n  if (isPlainObject(container)) {\n    return Object.keys(container).length;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n/**\n * Checks if argument is a plain object (not a class or array etc)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a plain JavaScript object\n */\nfunction isPlainObject(value) {\n  return value !== null && typeof value === 'object' && value.constructor === Object;\n}\n\n/**\n * Checks if argument is an indexable object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n"],"file":"count.js"}