{"version":3,"sources":["../../../../src/shaderlib/project/project.ts"],"names":["fp32","geometry","projectShader","getUniformsFromViewport","INITIAL_MODULE_OPTIONS","getUniforms","opts","name","dependencies","vs"],"mappings":"AAoBA,SAAQA,IAAR,QAAmB,eAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,uBAAR,QAAsC,qBAAtC;AAKA,MAAMC,sBAAsB,GAAG,EAA/B;;AAEA,SAASC,WAAT,CAAqBC,IAAgC,GAAGF,sBAAxD,EAAgF;AAC9E,MAAI,cAAcE,IAAlB,EAAwB;AACtB,WAAOH,uBAAuB,CAACG,IAAD,CAA9B;AACD;;AACD,SAAO,EAAP;AACD;;AAED,eAAe;AACbC,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,YAAY,EAAE,CAACR,IAAD,EAAOC,QAAP,CAFD;AAGbQ,EAAAA,EAAE,EAAEP,aAHS;AAIbG,EAAAA;AAJa,CAAf","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {fp32} from '@luma.gl/core';\nimport geometry from '../misc/geometry';\nimport projectShader from './project.glsl';\nimport {getUniformsFromViewport} from './viewport-uniforms';\n\nimport type {ProjectModuleSettings} from './viewport-uniforms';\nimport type {ShaderModule} from '../../types/types';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getUniforms(opts: ProjectModuleSettings | {} = INITIAL_MODULE_OPTIONS) {\n  if ('viewport' in opts) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\n\nexport default {\n  name: 'project',\n  dependencies: [fp32, geometry],\n  vs: projectShader,\n  getUniforms\n} as ShaderModule<ProjectModuleSettings>;\n"],"file":"project.js"}