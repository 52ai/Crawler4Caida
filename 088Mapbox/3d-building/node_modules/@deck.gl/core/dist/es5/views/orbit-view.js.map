{"version":3,"sources":["../../../src/views/orbit-view.ts"],"names":["OrbitView","props","orbitAxis","OrbitViewport","OrbitController","View"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;IAoCqBA,S;;;;;AAGnB,uBAAwC;AAAA;;AAAA,QAA5BC,KAA4B,uEAAJ,EAAI;AAAA;AACtC,8BAAMA,KAAN;AACA,UAAKA,KAAL,CAAWC,SAAX,GAAuBD,KAAK,CAACC,SAAN,IAAmB,GAA1C;AAFsC;AAGvC;;;;SAED,eAAmB;AACjB,aAAOC,sBAAP;AACD;;;SAED,eAAqB;AACnB,aAAOC,wBAAP;AACD;;;EAdoCC,a;;;8BAAlBL,S,iBACE,W","sourcesContent":["import View, {CommonViewState} from './view';\nimport OrbitViewport from '../viewports/orbit-viewport';\nimport OrbitController from '../controllers/orbit-controller';\n\nexport type OrbitViewState = {\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target: [number, number, number];\n  /** The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large. Default `0`. */\n  zoom: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationOrbit?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationX?: number;\n  /** The min zoom level of the viewport. Default `-Infinity`. */\n  minZoom?: number;\n  /** The max zoom level of the viewport. Default `Infinity`. */\n  maxZoom?: number;\n  /** The min rotating angle around X axis. Default `-90`. */\n  minRotationX?: number;\n  /** The max rotating angle around X axis. Default `90`. */\n  maxRotationX?: number;\n} & CommonViewState;\n\ntype OrbitViewProps = {\n  /** Axis with 360 degrees rotating freedom, either `'Y'` or `'Z'`, default to `'Z'`. */\n  orbitAxis?: 'Y' | 'Z';\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in the perspective case. In degrees. Default `50`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class OrbitView extends View<OrbitViewState, OrbitViewProps> {\n  static displayName = 'OrbitView';\n\n  constructor(props: OrbitViewProps = {}) {\n    super(props);\n    this.props.orbitAxis = props.orbitAxis || 'Z';\n  }\n\n  get ViewportType() {\n    return OrbitViewport;\n  }\n\n  get ControllerType() {\n    return OrbitController;\n  }\n}\n"],"file":"orbit-view.js"}