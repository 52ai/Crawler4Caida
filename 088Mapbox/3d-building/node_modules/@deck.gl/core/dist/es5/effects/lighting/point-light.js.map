{"version":3,"sources":["../../../../src/effects/lighting/point-light.ts"],"names":["DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","props","color","intensity","position","id","type","attenuation","getAttenuation","projectedLight","layer","viewport","context","coordinateSystem","coordinateOrigin","fromCoordinateSystem","isGeospatial","COORDINATE_SYSTEM","LNGLAT","CARTESIAN","fromCoordinateOrigin"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAIA,IAAMA,mBAAmB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA5B;AACA,IAAMC,uBAAuB,GAAG,GAAhC;AACA,IAAMC,mBAAmB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5B;AACA,IAAMC,sBAAsB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA/B;AAEA,IAAIC,OAAO,GAAG,CAAd;;IAsBaC,U;AAUX,wBAA2C;AAAA,QAA/BC,KAA+B,uEAAJ,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,gDANpC,OAMoC;AAAA;AAAA;AAAA;AACzC,uBAAsCA,KAAtC,CAAOC,KAAP;AAAA,QAAOA,KAAP,6BAAeP,mBAAf;AACA,2BAA8CM,KAA9C,CAAOE,SAAP;AAAA,QAAOA,SAAP,iCAAmBP,uBAAnB;AACA,0BAA4CK,KAA5C,CAAOG,QAAP;AAAA,QAAOA,QAAP,gCAAkBN,sBAAlB;AAEA,SAAKO,EAAL,GAAUJ,KAAK,CAACI,EAAN,oBAAqBN,OAAO,EAA5B,CAAV;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKG,IAAL,GAAY,OAAZ;AACA,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKG,WAAL,GAAmBC,cAAc,CAACP,KAAD,CAAjC;AACA,SAAKQ,cAAL,qBAA0B,IAA1B;AACD;;;;WAED,iCAAuD;AAAA,UAApCC,KAAoC,QAApCA,KAAoC;AACrD,UAAOD,cAAP,GAAyB,IAAzB,CAAOA,cAAP;AACA,UAAME,QAAQ,GAAGD,KAAK,CAACE,OAAN,CAAcD,QAA/B;AACA,yBAA6CD,KAAK,CAACT,KAAnD;AAAA,UAAOY,gBAAP,gBAAOA,gBAAP;AAAA,UAAyBC,gBAAzB,gBAAyBA,gBAAzB;AACA,UAAMV,QAAQ,GAAG,uCAAgB,KAAKA,QAArB,EAA+B;AAC9CO,QAAAA,QAAQ,EAARA,QAD8C;AAE9CE,QAAAA,gBAAgB,EAAhBA,gBAF8C;AAG9CC,QAAAA,gBAAgB,EAAhBA,gBAH8C;AAI9CC,QAAAA,oBAAoB,EAAEJ,QAAQ,CAACK,YAAT,GAClBC,6BAAkBC,MADA,GAElBD,6BAAkBE,SANwB;AAO9CC,QAAAA,oBAAoB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAPwB,OAA/B,CAAjB;AASAX,MAAAA,cAAc,CAACP,KAAf,GAAuB,KAAKA,KAA5B;AACAO,MAAAA,cAAc,CAACN,SAAf,GAA2B,KAAKA,SAAhC;AACAM,MAAAA,cAAc,CAACL,QAAf,GAA0BA,QAA1B;AACA,aAAOK,cAAP;AACD;;;;;;;AAGH,SAASD,cAAT,CAAwBP,KAAxB,EAA4D;AAC1D,MAAIA,KAAK,CAACM,WAAV,EAAuB;AACrB,WAAON,KAAK,CAACM,WAAb;AACD;;AACD,MAAI,eAAeN,KAAnB,EAA0B;AACxB,WAAO,CAAC,CAAD,EAAI,CAAJ,EAAOA,KAAK,CAACE,SAAN,IAAmB,CAA1B,CAAP;AACD;;AACD,SAAON,mBAAP;AACD","sourcesContent":["import {projectPosition} from '../../shaderlib/project/project-functions';\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\n\nimport type Layer from '../../lib/layer';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\nlet idCount = 0;\n\nexport type PointLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: number[];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /** Light position [x, y, z] in the common space\n   * @default [0.0, 0.0, 1.0]\n   */\n  position?: number[];\n  /** Light attenuation\n   * @default [0.0, 0.0, 1.0]\n   */\n  attenuation?: number[];\n};\n\nexport class PointLight {\n  id: string;\n  color: number[];\n  intensity: number;\n  type = 'point';\n  position: number[];\n  attenuation: number[];\n\n  protected projectedLight: PointLight;\n\n  constructor(props: PointLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {...this};\n  }\n\n  getProjectedLight({layer}: {layer: Layer}): PointLight {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin} = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial\n        ? COORDINATE_SYSTEM.LNGLAT\n        : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\n\nfunction getAttenuation(props: PointLightOptions): number[] {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n  return DEFAULT_ATTENUATION;\n}\n"],"file":"point-light.js"}