import { AmbientLight } from './ambient-light';
import { DirectionalLight } from './directional-light';
import { PointLight } from './point-light';
import { Matrix4 } from '@math.gl/core';
import type Layer from '../../lib/layer';
import type { Effect, PreRenderOptions } from '../../lib/effect';
export default class LightingEffect implements Effect {
    id: string;
    props: null;
    shadowColor: number[];
    private shadow;
    private ambientLight;
    private directionalLights;
    private pointLights;
    private shadowPasses;
    private shadowMaps;
    private dummyShadowMap;
    private programManager?;
    private shadowMatrices?;
    constructor(props?: Record<string, PointLight | DirectionalLight | AmbientLight>);
    preRender(gl: WebGLRenderingContext, { layers, layerFilter, viewports, onViewportActive, views }: PreRenderOptions): void;
    getModuleParameters(layer: Layer): {
        lightSources?: {
            ambientLight: AmbientLight | null;
            directionalLights: DirectionalLight[];
            pointLights: PointLight[];
        } | undefined;
        shadowMaps?: any[] | undefined;
        dummyShadowMap?: any;
        shadowColor?: number[] | undefined;
        shadowMatrices?: Matrix4[] | undefined;
    };
    cleanup(): void;
    private _calculateMatrices;
    private _createShadowPasses;
    private _applyDefaultLights;
}
//# sourceMappingURL=lighting-effect.d.ts.map