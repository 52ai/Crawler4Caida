{"version":3,"sources":["../../../src/transports/transport.js"],"names":["state","onIninitialize","_","onFinalize","onMessage","Transport","setCallbacks","onInitialize","constructor","name","_messageQueue","userData","getRootDOMElement","document","body","sendJSONMessage","console","error","sendBinaryMessage","_initialize","options","message","transport","_finalize","_destroyed","_messageReceived","debug","_stringifyJSONSafe","v","cache","Set","JSON","stringify","key","value","has","parse","err","undefined","add"],"mappings":"AACA,MAAMA,KAAK,GAAG;AACZC,EAAAA,cAAc,EAAEC,CAAC,IAAIA,CADT;AAEZC,EAAAA,UAAU,EAAED,CAAC,IAAIA,CAFL;AAGZE,EAAAA,SAAS,EAAE;AAHC,CAAd;AAMA,eAAe,MAAMC,SAAN,CAAgB;AACV,SAAZC,YAAY,CAAC;AAACC,IAAAA,YAAD;AAAeJ,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,GAAD,EAAwC;AACzD,QAAIG,YAAJ,EAAkB;AAChBP,MAAAA,KAAK,CAACO,YAAN,GAAqBA,YAArB;AACD;;AACD,QAAIJ,UAAJ,EAAgB;AACdH,MAAAA,KAAK,CAACG,UAAN,GAAmBA,UAAnB;AACD;;AACD,QAAIC,SAAJ,EAAe;AACbJ,MAAAA,KAAK,CAACI,SAAN,GAAkBA,SAAlB;AACD;AAEF;;AAEDI,EAAAA,WAAW,CAACC,IAAI,GAAG,WAAR,EAAqB;AAC9B,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAODC,EAAAA,iBAAiB,GAAG;AAClB,WAAO,OAAOC,QAAP,KAAoB,WAApB,GAAkCA,QAAQ,CAACC,IAA3C,GAAkD,IAAzD;AACD;;AAKDC,EAAAA,eAAe,GAAG;AAEhBC,IAAAA,OAAO,CAACC,KAAR,CAAc,iDAAd;AACD;;AAKDC,EAAAA,iBAAiB,GAAG;AAElBF,IAAAA,OAAO,CAACC,KAAR,CAAc,iDAAd;AACD;;AAMDE,EAAAA,WAAW,CAACC,OAAO,GAAG,EAAX,EAAe;AACxB,UAAMC,OAAO,GAAG;AAACC,MAAAA,SAAS,EAAE,IAAZ;AAAkB,SAAGF;AAArB,KAAhB;AACApB,IAAAA,KAAK,CAACO,YAAN,CAAmBc,OAAnB;AAID;;AAEDE,EAAAA,SAAS,CAACH,OAAO,GAAG,EAAX,EAAe;AACtB,UAAMC,OAAO,GAAG;AAACC,MAAAA,SAAS,EAAE,IAAZ;AAAkB,SAAGF;AAArB,KAAhB;AAGApB,IAAAA,KAAK,CAACG,UAAN,CAAiBkB,OAAjB;AACA,SAAKG,UAAL,GAAkB,IAAlB;AACD;;AAEDC,EAAAA,gBAAgB,CAACJ,OAAO,GAAG,EAAX,EAAe;AAC7BA,IAAAA,OAAO,GAAG;AAACC,MAAAA,SAAS,EAAE,IAAZ;AAAkB,SAAGD;AAArB,KAAV;AASAL,IAAAA,OAAO,CAACU,KAAR,CAAc,8BAAd,EAA8CL,OAA9C;AACArB,IAAAA,KAAK,CAACI,SAAN,CAAgBiB,OAAhB;AACD;;AAwBwB,SAAlBM,kBAAkB,CAACC,CAAD,EAAI;AAC3B,UAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AACA,WAAOC,IAAI,CAACC,SAAL,CAAeJ,CAAf,EAAkB,CAACK,GAAD,EAAMC,KAAN,KAAgB;AACvC,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AAC/C,YAAIL,KAAK,CAACM,GAAN,CAAUD,KAAV,CAAJ,EAAsB;AAEpB,cAAI;AAEF,mBAAOH,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,SAAL,CAAeE,KAAf,CAAX,CAAP;AACD,WAHD,CAGE,OAAOG,GAAP,EAAY;AAEZ,mBAAOC,SAAP;AACD;AACF;;AAEDT,QAAAA,KAAK,CAACU,GAAN,CAAUL,KAAV;AACD;;AACD,aAAOA,KAAP;AACD,KAhBM,CAAP;AAiBD;;AAxH4B","sourcesContent":["/* global document */\nconst state = {\n  onIninitialize: _ => _,\n  onFinalize: _ => _,\n  onMessage: null\n};\n\nexport default class Transport {\n  static setCallbacks({onInitialize, onFinalize, onMessage}) {\n    if (onInitialize) {\n      state.onInitialize = onInitialize;\n    }\n    if (onFinalize) {\n      state.onFinalize = onFinalize;\n    }\n    if (onMessage) {\n      state.onMessage = onMessage;\n    }\n    // this._flushQueuedConnections();\n  }\n\n  constructor(name = 'Transport') {\n    this.name = name;\n    this._messageQueue = [];\n    this.userData = {};\n  }\n\n  /**\n   * Return a root DOM element for this transport connection\n   * @return {HTMLElement} default implementation returns document.body\n   * Jupyter Notebook transports will return an element associated with the notebook cell\n   */\n  getRootDOMElement() {\n    return typeof document !== 'undefined' ? document.body : null;\n  }\n\n  /**\n   * Back-channel messaging\n   */\n  sendJSONMessage() {\n    // eslint-disable-next-line\n    console.error('Back-channel not implemented for this transport');\n  }\n\n  /**\n   * Back-channel messaging\n   */\n  sendBinaryMessage() {\n    // eslint-disable-next-line\n    console.error('Back-channel not implemented for this transport');\n  }\n\n  //\n  // API for transports (not intended for apps)\n  //\n\n  _initialize(options = {}) {\n    const message = {transport: this, ...options};\n    state.onInitialize(message);\n\n    // console.debug('Resolving init promise', options); // eslint-disable-line\n    // this._initResolvers.resolve(message);\n  }\n\n  _finalize(options = {}) {\n    const message = {transport: this, ...options};\n\n    // TODO - could potentially be called without Initialize being called\n    state.onFinalize(message);\n    this._destroyed = true;\n  }\n\n  _messageReceived(message = {}) {\n    message = {transport: this, ...message};\n\n    // TODO - this function could potentially be called before callback registered/ Initialize called\n    // if (!state.onMessage) {\n    //   console.error('Queueing transport message', message); // eslint-disable-line\n    //   this._messageQueue.push(message);\n    //   return;\n    // }\n\n    console.debug('Delivering transport message', message); // eslint-disable-line\n    state.onMessage(message);\n  }\n\n  /*\n  // This tries to handle the case that a transport connection initializes before the application\n  // has set the callbacks.\n  // Note: It is not clear that this can actually happen in the in initial Jupyter widget transport\n  _flushQueuedConnections() {\n    if (onInitialize) {\n      state._initPromise.then(initArgs => {\n        onInitialize(initArgs);\n\n        if (state._onMessage) {\n          // Send any queued messages\n          let message;\n          while ((message = this._messageQueue.pop())) {\n            console.debug('Delivering queued transport message', message); // eslint-disable-line\n            this._onMessage(message);\n          }\n        }\n      });\n    }\n  }\n  */\n\n  static _stringifyJSONSafe(v) {\n    const cache = new Set();\n    return JSON.stringify(v, (key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.has(value)) {\n          // Circular reference found\n          try {\n            // If this value does not reference a parent it can be deduped\n            return JSON.parse(JSON.stringify(value));\n          } catch (err) {\n            // discard key if value cannot be deduped\n            return undefined;\n          }\n        }\n        // Store value in our set\n        cache.add(value);\n      }\n      return value;\n    });\n  }\n}\n"],"file":"transport.js"}