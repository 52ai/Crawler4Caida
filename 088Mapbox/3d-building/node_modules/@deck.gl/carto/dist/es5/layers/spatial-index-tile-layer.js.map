{"version":3,"sources":["../../../src/layers/spatial-index-tile-layer.ts"],"names":["isFeatureIdDefined","value","undefined","SpatialIndexTileLayer","info","hoveredFeatureId","state","hoveredFeature","object","newHoveredFeatureId","id","highlightColor","props","setState","tile","highlightedObjectIndex","getHighlightedObjectIndex","data","content","isFeatureIdPresent","Array","isArray","findIndex","feature","TileLayer"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEA,SAASA,kBAAT,CAA4BC,KAA5B,EAAqD;AACnD,SAAOA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAA1D;AACD;;IAEoBE,qB;;;;;;;;;;;;WAGnB,8BAA+BC,IAA/B,EAAwD;AACtD,UAAOC,gBAAP,GAA2B,KAAKC,KAAhC,CAAOD,gBAAP;AACA,UAAME,cAAc,GAAGH,IAAI,CAACI,MAA5B;AACA,UAAIC,mBAAJ;;AAEA,UAAIF,cAAJ,EAAoB;AAClBE,QAAAA,mBAAmB,GAAGF,cAAc,CAACG,EAArC;AACD;;AAED,UAAIL,gBAAgB,KAAKI,mBAAzB,EAA8C;AAC5C,YAAKE,cAAL,GAAuB,KAAKC,KAA5B,CAAKD,cAAL;;AACA,YAAI,OAAOA,cAAP,KAA0B,UAA9B,EAA0C;AACxCA,UAAAA,cAAc,GAAGA,cAAc,CAACP,IAAD,CAA/B;AACD;;AAED,aAAKS,QAAL,CAAc;AACZF,UAAAA,cAAc,EAAdA,cADY;AAEZN,UAAAA,gBAAgB,EAAEI;AAFN,SAAd;AAID;AACF;;;WAED,gCAAuBK,IAAvB,EAA2C;AACzC,aAAO;AACLC,QAAAA,sBAAsB,EAAE,KAAKC,yBAAL,CAA+BF,IAA/B,CADnB;AAELH,QAAAA,cAAc,EAAE,KAAKL,KAAL,CAAWK;AAFtB,OAAP;AAID;;;WAED,mCAA0BG,IAA1B,EAA8C;AAC5C,UAAOT,gBAAP,GAA2B,KAAKC,KAAhC,CAAOD,gBAAP;AACA,UAAMY,IAAI,GAAGH,IAAI,CAACI,OAAlB;AAEA,UAAMC,kBAAkB,GAAGnB,kBAAkB,CAACK,gBAAD,CAA7C;;AACA,UAAI,CAACc,kBAAD,IAAuB,CAACC,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAA5B,EAAiD;AAC/C,eAAO,CAAC,CAAR;AACD;;AAED,aAAOA,IAAI,CAACK,SAAL,CAAe,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACb,EAAR,KAAeL,gBAAnB;AAAA,OAAtB,CAAP;AACD;;;EA1CiEmB,oB;;;8BAA/CrB,qB,eACA,uB","sourcesContent":["import {PickingInfo} from '@deck.gl/core';\nimport {TileLayer, _Tile2DHeader as Tile2DHeader} from '@deck.gl/geo-layers';\n\nfunction isFeatureIdDefined(value: unknown): boolean {\n  return value !== undefined && value !== null && value !== '';\n}\n\nexport default class SpatialIndexTileLayer<ExtraProps = {}> extends TileLayer<any, ExtraProps> {\n  static layerName = 'SpatialIndexTileLayer';\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const {hoveredFeatureId} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = hoveredFeature.id;\n    }\n\n    if (hoveredFeatureId !== newHoveredFeatureId) {\n      let {highlightColor} = this.props;\n      if (typeof highlightColor === 'function') {\n        highlightColor = highlightColor(info);\n      }\n\n      this.setState({\n        highlightColor,\n        hoveredFeatureId: newHoveredFeatureId\n      });\n    }\n  }\n\n  getSubLayerPropsByTile(tile: Tile2DHeader) {\n    return {\n      highlightedObjectIndex: this.getHighlightedObjectIndex(tile),\n      highlightColor: this.state.highlightColor\n    };\n  }\n\n  getHighlightedObjectIndex(tile: Tile2DHeader) {\n    const {hoveredFeatureId} = this.state;\n    const data = tile.content;\n\n    const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId);\n    if (!isFeatureIdPresent || !Array.isArray(data)) {\n      return -1;\n    }\n\n    return data.findIndex(feature => feature.id === hoveredFeatureId);\n  }\n}\n"],"file":"spatial-index-tile-layer.js"}