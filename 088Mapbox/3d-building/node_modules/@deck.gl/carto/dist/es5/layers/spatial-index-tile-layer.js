"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _geoLayers = require("@deck.gl/geo-layers");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function isFeatureIdDefined(value) {
  return value !== undefined && value !== null && value !== '';
}

var SpatialIndexTileLayer = function (_TileLayer) {
  (0, _inherits2.default)(SpatialIndexTileLayer, _TileLayer);

  var _super = _createSuper(SpatialIndexTileLayer);

  function SpatialIndexTileLayer() {
    (0, _classCallCheck2.default)(this, SpatialIndexTileLayer);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(SpatialIndexTileLayer, [{
    key: "_updateAutoHighlight",
    value: function _updateAutoHighlight(info) {
      var hoveredFeatureId = this.state.hoveredFeatureId;
      var hoveredFeature = info.object;
      var newHoveredFeatureId;

      if (hoveredFeature) {
        newHoveredFeatureId = hoveredFeature.id;
      }

      if (hoveredFeatureId !== newHoveredFeatureId) {
        var highlightColor = this.props.highlightColor;

        if (typeof highlightColor === 'function') {
          highlightColor = highlightColor(info);
        }

        this.setState({
          highlightColor: highlightColor,
          hoveredFeatureId: newHoveredFeatureId
        });
      }
    }
  }, {
    key: "getSubLayerPropsByTile",
    value: function getSubLayerPropsByTile(tile) {
      return {
        highlightedObjectIndex: this.getHighlightedObjectIndex(tile),
        highlightColor: this.state.highlightColor
      };
    }
  }, {
    key: "getHighlightedObjectIndex",
    value: function getHighlightedObjectIndex(tile) {
      var hoveredFeatureId = this.state.hoveredFeatureId;
      var data = tile.content;
      var isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId);

      if (!isFeatureIdPresent || !Array.isArray(data)) {
        return -1;
      }

      return data.findIndex(function (feature) {
        return feature.id === hoveredFeatureId;
      });
    }
  }]);
  return SpatialIndexTileLayer;
}(_geoLayers.TileLayer);

exports.default = SpatialIndexTileLayer;
(0, _defineProperty2.default)(SpatialIndexTileLayer, "layerName", 'SpatialIndexTileLayer');
//# sourceMappingURL=spatial-index-tile-layer.js.map