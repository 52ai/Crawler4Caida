{"version":3,"sources":["../../src/config.ts"],"names":["API_VERSIONS","defaultClassicCredentials","apiKey","region","username","defaultCloudNativeCredentials","apiBaseUrl","credentials","setDefaultCredentials","apiVersion","rest","V3","V1","V2","Error","getDefaultCredentials","buildUrlFromBase","endpoint","suffix","endsWith","substring","buildMapsUrlFromBase","buildStatsUrlFromBase"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,yBAAyB,GAAG;AACvCC,EAAAA,MAAM,EAAE,gBAD+B;AAEvCC,EAAAA,MAAM,EAAE,IAF+B;AAGvCC,EAAAA,QAAQ,EAAE;AAH6B,CAAlC;AAMP,OAAO,MAAMC,6BAA6B,GAAG;AAC3CC,EAAAA,UAAU,EAAE;AAD+B,CAAtC;AAoBP,IAAIC,WAAwB,GAAG,EAA/B;AAEAC,qBAAqB,CAAC,EAAD,CAArB;AAEA,OAAO,SAASA,qBAAT,CAA+B;AAACC,EAAAA,UAAD;AAAa,KAAGC;AAAhB,CAA/B,EAA4E;AACjFD,EAAAA,UAAU,GAAGA,UAAU,IAAIT,YAAY,CAACW,EAAxC;;AAEA,UAAQF,UAAR;AACE,SAAKT,YAAY,CAACY,EAAlB;AACA,SAAKZ,YAAY,CAACa,EAAlB;AACEN,MAAAA,WAAW,GAAG;AAACE,QAAAA,UAAD;AAAa,WAAGR,yBAAhB;AAA2C,WAAGS;AAA9C,OAAd;AACA;;AACF,SAAKV,YAAY,CAACW,EAAlB;AACEJ,MAAAA,WAAW,GAAG;AAACE,QAAAA,UAAD;AAAa,WAAGJ,6BAAhB;AAA+C,WAAGK;AAAlD,OAAd;AACA;;AACF;AACE,YAAM,IAAII,KAAJ,+BAAiCL,UAAjC,8BAAN;AATJ;AAWD;AAED,OAAO,SAASM,qBAAT,GAA8C;AACnD,SAAOR,WAAP;AACD;;AAID,SAASS,gBAAT,CAA0BV,UAA1B,EAA8CW,QAA9C,EAAoE;AAClE,MAAIC,MAAM,iBAAUD,QAAV,CAAV;;AACA,MAAIX,UAAU,CAACa,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC5BD,IAAAA,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiB,CAAjB,CAAT;AACD;;AAED,mBAAUd,UAAV,SAAuBY,MAAvB;AACD;;AAED,OAAO,SAASG,oBAAT,CAA8Bf,UAA9B,EAA0D;AAC/D,SAAOU,gBAAgB,CAACV,UAAD,EAAa,MAAb,CAAvB;AACD;AAED,OAAO,SAASgB,qBAAT,CAA+BhB,UAA/B,EAA2D;AAChE,SAAOU,gBAAgB,CAACV,UAAD,EAAa,OAAb,CAAvB;AACD","sourcesContent":["import {API_VERSIONS} from './api/maps-api-common';\n\nexport const defaultClassicCredentials = {\n  apiKey: 'default_public',\n  region: 'us',\n  username: 'public'\n} as const;\n\nexport const defaultCloudNativeCredentials = {\n  apiBaseUrl: 'https://gcp-us-east1.api.carto.com'\n} as const;\n\nexport interface ClassicCredentials {\n  apiVersion: 'v1' | 'v2';\n  apiKey: string;\n  region: string;\n  username: string;\n  mapsUrl?: string;\n}\n\nexport interface CloudNativeCredentials {\n  apiVersion: 'v3';\n  apiBaseUrl: string;\n  accessToken?: string;\n  mapsUrl?: string;\n}\n\nexport type Credentials = ClassicCredentials | CloudNativeCredentials;\nlet credentials: Credentials = {} as Credentials;\n\nsetDefaultCredentials({});\n\nexport function setDefaultCredentials({apiVersion, ...rest}: Partial<Credentials>) {\n  apiVersion = apiVersion || API_VERSIONS.V3;\n\n  switch (apiVersion) {\n    case API_VERSIONS.V1:\n    case API_VERSIONS.V2:\n      credentials = {apiVersion, ...defaultClassicCredentials, ...rest};\n      break;\n    case API_VERSIONS.V3:\n      credentials = {apiVersion, ...defaultCloudNativeCredentials, ...rest};\n      break;\n    default:\n      throw new Error(`Invalid API version ${apiVersion}. Use API_VERSIONS enum.`);\n  }\n}\n\nexport function getDefaultCredentials(): Credentials {\n  return credentials;\n}\n\nexport type V3Endpoint = 'maps' | 'stats';\n\nfunction buildUrlFromBase(apiBaseUrl: string, endpoint: V3Endpoint) {\n  let suffix = `/v3/${endpoint}`;\n  if (apiBaseUrl.endsWith('/')) {\n    suffix = suffix.substring(1);\n  }\n\n  return `${apiBaseUrl}${suffix}`;\n}\n\nexport function buildMapsUrlFromBase(apiBaseUrl: string): string {\n  return buildUrlFromBase(apiBaseUrl, 'maps');\n}\n\nexport function buildStatsUrlFromBase(apiBaseUrl: string): string {\n  return buildUrlFromBase(apiBaseUrl, 'stats');\n}\n"],"file":"config.js"}