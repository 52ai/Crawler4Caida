{"version":3,"sources":["../../../src/trips-layer/trips-layer.ts"],"names":["defaultProps","fadeTrail","trailLength","type","value","min","currentTime","getTimestamps","d","timestamps","TripsLayer","shaders","inject","attributeManager","getAttributeManager","addInstanced","size","accessor","shaderAttributes","instanceTimestamps","vertexOffset","instanceNextTimestamps","params","props","uniforms","PathLayer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;AAEA,IAAMA,YAA2C,GAAG;AAClDC,EAAAA,SAAS,EAAE,IADuC;AAElDC,EAAAA,WAAW,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE,GAAxB;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GAFqC;AAGlDC,EAAAA,WAAW,EAAE;AAACH,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE,CAAxB;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GAHqC;AAIlDE,EAAAA,aAAa,EAAE;AAACJ,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAI,CAAC;AAAA,aAAIA,CAAC,CAACC,UAAN;AAAA;AAA3B;AAJmC,CAApD;;IAkCqBC,U;;;;;;;;;;;;WAOnB,sBAAa;AACX,UAAMC,OAAO,yGAAb;AACAA,MAAAA,OAAO,CAACC,MAAR,GAAiB;AACf,sJADe;AAQf,uIARe;AAWf,6HAXe;AAkBf,4HAlBe;AAwBf;AAxBe,OAAjB;AA8BA,aAAOD,OAAP;AACD;;;WAED,2BAAkB;AAChB;AAEA,UAAME,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;AACAD,MAAAA,gBAAgB,CAAEE,YAAlB,CAA+B;AAC7BN,QAAAA,UAAU,EAAE;AACVO,UAAAA,IAAI,EAAE,CADI;AAEVC,UAAAA,QAAQ,EAAE,eAFA;AAGVC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,kBAAkB,EAAE;AAClBC,cAAAA,YAAY,EAAE;AADI,aADJ;AAIhBC,YAAAA,sBAAsB,EAAE;AACtBD,cAAAA,YAAY,EAAE;AADQ;AAJR;AAHR;AADiB,OAA/B;AAcD;;;WAED,cAAKE,MAAL,EAAa;AACX,wBAA8C,KAAKC,KAAnD;AAAA,UAAOtB,SAAP,eAAOA,SAAP;AAAA,UAAkBC,WAAlB,eAAkBA,WAAlB;AAAA,UAA+BI,WAA/B,eAA+BA,WAA/B;AAEAgB,MAAAA,MAAM,CAACE,QAAP,mCACKF,MAAM,CAACE,QADZ;AAEEvB,QAAAA,SAAS,EAATA,SAFF;AAGEC,QAAAA,WAAW,EAAXA,WAHF;AAIEI,QAAAA,WAAW,EAAXA;AAJF;AAOA,uGAAWgB,MAAX;AACD;;;EAzEmEG,iB;;;8BAAjDf,U,eAIA,Y;8BAJAA,U,kBAKGV,Y","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport type {NumericArray} from '@math.gl/core';\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport {PathLayer, PathLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<TripsLayerProps> = {\n  fadeTrail: true,\n  trailLength: {type: 'number', value: 120, min: 0},\n  currentTime: {type: 'number', value: 0, min: 0},\n  getTimestamps: {type: 'accessor', value: d => d.timestamps}\n};\n\n/** All properties supported by TripsLayer. */\nexport type TripsLayerProps<DataT = any> = _TripsLayerProps<DataT> & PathLayerProps<DataT>;\n\n/** Properties added by TripsLayer. */\ntype _TripsLayerProps<DataT = any> = {\n  /**\n   * Whether or not the path fades out.\n   * @default true\n   */\n  fadeTrail?: boolean;\n  /**\n   * Trail length.\n   * @default 120\n   */\n  trailLength?: number;\n  /**\n   * The current time of the frame.\n   * @default 0\n   */\n  currentTime?: number;\n  /**\n   * Timestamp accessor.\n   */\n  getTimestamps?: AccessorFunction<DataT, NumericArray>;\n};\n\n/** Render animated paths that represent vehicle trips. */\nexport default class TripsLayer<DataT = any, ExtraProps = {}> extends PathLayer<\n  DataT,\n  Required<_TripsLayerProps> & ExtraProps\n> {\n  static layerName = 'TripsLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': `\\\nuniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n`,\n      // Timestamp of the vertex\n      'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n      'fs:#decl': `\\\nuniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n`,\n      // Drop the segments outside of the time window\n      'fs:#main-start': `\\\nif(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n`,\n      // Fade the color (currentTime - 100%, end of trail - 0%)\n      'fs:DECKGL_FILTER_COLOR': `\\\nif(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n`\n    };\n    return shaders;\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {fadeTrail, trailLength, currentTime} = this.props;\n\n    params.uniforms = {\n      ...params.uniforms,\n      fadeTrail,\n      trailLength,\n      currentTime\n    };\n\n    super.draw(params);\n  }\n}\n"],"file":"trips-layer.js"}