{"version":3,"sources":["../../../src/geojson-layer/geojson-layer-props.ts"],"names":["createEmptyLayerProps","points","lines","polygons","polygonsOutline","getCoordinates","f","geometry","coordinates","createLayerPropsFromFeatures","features","featuresDiff","layerProps","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","data","_dataDiff","getPosition","getPath","getPolygon","createLayerPropsFromBinary","geojsonBinary","encodePickingColor","customPickingColors","length","positions","value","size","attributes","instancePickingColors","properties","numericProps","featureIds","pathIndices","startIndices","_pathType","polygonIndices","pickingColors","_normalize","triangles","indices","primitivePolygonIndices"],"mappings":"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","sourcesContent":["import {BinaryAttribute, LayerData, LayerProps} from '@deck.gl/core';\nimport {PolygonLayerProps, ScatterplotLayerProps} from '..';\nimport {calculatePickingColors} from './geojson-binary';\nimport {BinaryFeatures} from '@loaders.gl/schema';\nimport {SeparatedGeometries} from './geojson';\n\n// TODO: PathLayer is not yet typed\ntype PathLayerProps = LayerProps & Record<string, any>;\n\ntype SubLayersProps = {\n  points: Partial<ScatterplotLayerProps>;\n  lines: Partial<PathLayerProps>;\n  polygons: Partial<PolygonLayerProps>;\n  polygonsOutline: Partial<PathLayerProps>;\n};\n\ntype ExtendedBinaryFeatures = {\n  [P in keyof BinaryFeatures]: BinaryFeatures[P] & {attributes?: Record<string, BinaryAttribute>};\n};\n\nfunction createEmptyLayerProps(): SubLayersProps {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport function createLayerPropsFromFeatures(\n  features: SeparatedGeometries,\n  featuresDiff\n): SubLayersProps {\n  const layerProps = createEmptyLayerProps();\n  const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = features;\n\n  layerProps.points.data = pointFeatures;\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n  layerProps.points.getPosition = getCoordinates;\n\n  layerProps.lines.data = lineFeatures;\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n  layerProps.lines.getPath = getCoordinates;\n\n  layerProps.polygons.data = polygonFeatures;\n  layerProps.polygons._dataDiff =\n    featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n  layerProps.polygons.getPolygon = getCoordinates;\n\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n  layerProps.polygonsOutline._dataDiff =\n    featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n  layerProps.polygonsOutline.getPath = getCoordinates;\n\n  return layerProps;\n}\n\nexport function createLayerPropsFromBinary(\n  geojsonBinary: Required<ExtendedBinaryFeatures>,\n  encodePickingColor\n): SubLayersProps {\n  // The binary data format is documented here\n  // https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n  // It is the default output from the `MVTLoader` and can also be obtained\n  // from GeoJSON by using the `geojsonToBinary` utility function.\n  const layerProps = createEmptyLayerProps();\n  const {points, lines, polygons} = geojsonBinary;\n\n  const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: {\n      ...points.attributes,\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points!\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  } as LayerData<any>;\n\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: {\n      ...lines.attributes,\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines!\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  } as LayerData<any>;\n  layerProps.lines._pathType = 'open';\n\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: {\n      ...polygons.attributes,\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons!\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  } as LayerData<any>;\n  layerProps.polygons._normalize = false;\n  if (polygons.triangles) {\n    (layerProps.polygons.data as any).attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: {\n      ...polygons.attributes,\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons!\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  } as LayerData<any>;\n  layerProps.polygonsOutline._pathType = 'open';\n\n  return layerProps;\n}\n"],"file":"geojson-layer-props.js"}