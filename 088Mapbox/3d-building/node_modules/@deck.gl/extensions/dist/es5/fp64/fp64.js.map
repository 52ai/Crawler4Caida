{"version":3,"sources":["../../../src/fp64/fp64.ts"],"names":["Fp64Extension","coordinateSystem","props","COORDINATE_SYSTEM","LNGLAT","DEFAULT","Error","modules","project64","LayerExtension"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA;;AACA;;;;;;IAKqBA,a;;;;;;;;;;;;WAGnB,sBAA6B;AAC3B,UAAOC,gBAAP,GAA2B,KAAKC,KAAhC,CAAOD,gBAAP;;AACA,UACEA,gBAAgB,KAAKE,wBAAkBC,MAAvC,IACAH,gBAAgB,KAAKE,wBAAkBE,OAFzC,EAGE;AACA,cAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,aAAO;AACLC,QAAAA,OAAO,EAAE,CAACC,gBAAD;AADJ,OAAP;AAGD;;;EAfwCC,oB;;;8BAAtBT,a,mBACI,e","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, COORDINATE_SYSTEM} from '@deck.gl/core';\nimport project64 from './project64';\n\nimport type {Layer} from '@deck.gl/core';\n\n/** @deprecated Adds the legacy 64-bit precision to geospatial layers. */\nexport default class Fp64Extension extends LayerExtension {\n  static extensionName = 'Fp64Extension';\n\n  getShaders(this: Layer): any {\n    const {coordinateSystem} = this.props;\n    if (\n      coordinateSystem !== COORDINATE_SYSTEM.LNGLAT &&\n      coordinateSystem !== COORDINATE_SYSTEM.DEFAULT\n    ) {\n      throw new Error('fp64: coordinateSystem must be LNGLAT');\n    }\n\n    return {\n      modules: [project64]\n    };\n  }\n}\n"],"file":"fp64.js"}