{"version":3,"sources":["../../../src/utils/resource-utils.js"],"names":["Framebuffer","Texture2D","isWebGL2","DEFAULT_PARAMETERS","getFloatTexture","gl","opts","width","height","data","unpackFlipY","parameters","texture","format","type","border","mipmaps","dataFormat","getFramebuffer","id","fb","attachments","getFloatArray","array","size","fillValue","length","Float32Array","fill"],"mappings":"AACA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,eAA/C;AAEA,MAAMC,kBAAkB,GAAG;AACzB,eADyB;AAEzB;AAFyB,CAA3B;AAKA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAA6BC,IAAI,GAAG,EAApC,EAAwC;AAC7C,QAAM;AACJC,IAAAA,KAAK,GAAG,CADJ;AAEJC,IAAAA,MAAM,GAAG,CAFL;AAGJC,IAAAA,IAAI,GAAG,IAHH;AAIJC,IAAAA,WAAW,GAAG,IAJV;AAKJC,IAAAA,UAAU,GAAGR;AALT,MAMFG,IANJ;AAOA,QAAMM,OAAO,GAAG,IAAIX,SAAJ,CAAcI,EAAd,EAAkB;AAChCI,IAAAA,IADgC;AAEhCI,IAAAA,MAAM,EAAEX,QAAQ,CAACG,EAAD,CAAR,eAFwB;AAGhCS,IAAAA,IAAI,MAH4B;AAIhCC,IAAAA,MAAM,EAAE,CAJwB;AAKhCC,IAAAA,OAAO,EAAE,KALuB;AAMhCL,IAAAA,UANgC;AAOhCM,IAAAA,UAAU,MAPsB;AAQhCV,IAAAA,KARgC;AAShCC,IAAAA,MATgC;AAUhCE,IAAAA;AAVgC,GAAlB,CAAhB;AAYA,SAAOE,OAAP;AACD;AAED,OAAO,SAASM,cAAT,CAAwBb,EAAxB,EAA4BC,IAA5B,EAAkC;AACvC,QAAM;AAACa,IAAAA,EAAD;AAAKZ,IAAAA,KAAK,GAAG,CAAb;AAAgBC,IAAAA,MAAM,GAAG,CAAzB;AAA4BI,IAAAA;AAA5B,MAAuCN,IAA7C;AACA,QAAMc,EAAE,GAAG,IAAIpB,WAAJ,CAAgBK,EAAhB,EAAoB;AAC7Bc,IAAAA,EAD6B;AAE7BZ,IAAAA,KAF6B;AAG7BC,IAAAA,MAH6B;AAI7Ba,IAAAA,WAAW,EAAE;AACX,eAAwBT;AADb;AAJgB,GAApB,CAAX;AASA,SAAOQ,EAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,SAAS,GAAG,CAAhD,EAAmD;AACxD,MAAI,CAACF,KAAD,IAAUA,KAAK,CAACG,MAAN,GAAeF,IAA7B,EAAmC;AACjC,WAAO,IAAIG,YAAJ,CAAiBH,IAAjB,EAAuBI,IAAvB,CAA4BH,SAA5B,CAAP;AACD;;AACD,SAAOF,KAAP;AACD","sourcesContent":["import GL from '@luma.gl/constants';\nimport {Framebuffer, Texture2D, isWebGL2} from '@luma.gl/core';\n\nconst DEFAULT_PARAMETERS = {\n  [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n  [GL.TEXTURE_MIN_FILTER]: GL.NEAREST\n};\n\nexport function getFloatTexture(gl, opts = {}) {\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n    type: GL.FLOAT,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: GL.RGBA,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\n\nexport function getFramebuffer(gl, opts) {\n  const {id, width = 1, height = 1, texture} = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [GL.COLOR_ATTACHMENT0]: texture\n    }\n  });\n\n  return fb;\n}\n\nexport function getFloatArray(array, size, fillValue = 0) {\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n  return array;\n}\n"],"file":"resource-utils.js"}