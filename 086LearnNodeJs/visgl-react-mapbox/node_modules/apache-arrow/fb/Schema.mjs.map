{"version":3,"sources":["fb/Schema.ts"],"names":[],"mappings":"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","file":"Schema.js","sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * Logical types, vector layouts, and schemas\n *\n * @enum {number}\n */\nexport enum MetadataVersion {\n    /**\n     * 0.1.0 (October 2016).\n     */\n    V1 = 0,\n\n    /**\n     * 0.2.0 (February 2017). Non-backwards compatible with V1.\n     */\n    V2 = 1,\n\n    /**\n     * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n     */\n    V3 = 2,\n\n    /**\n     * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n     */\n    V4 = 3,\n\n    /**\n     * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n     * metadata and IPC messages). Implementations are recommended to provide a\n     * V4 compatibility mode with V5 format changes disabled.\n     *\n     * Incompatible changes between V4 and V5:\n     * - Union buffer layout has changed. In V5, Unions don't have a validity\n     *   bitmap buffer.\n     */\n    V5 = 4\n}\n\n/**\n * Represents Arrow Features that might not have full support\n * within implementations. This is intended to be used in\n * two scenarios:\n *  1.  A mechanism for readers of Arrow Streams\n *      and files to understand that the stream or file makes\n *      use of a feature that isn't supported or unknown to\n *      the implementation (and therefore can meet the Arrow\n *      forward compatibility guarantees).\n *  2.  A means of negotiating between a client and server\n *      what features a stream is allowed to use. The enums\n *      values here are intented to represent higher level\n *      features, additional details maybe negotiated\n *      with key-value pairs specific to the protocol.\n *\n * Enums added to this list should be assigned power-of-two values\n * to facilitate exchanging and comparing bitmaps for supported\n * features.\n *\n * @enum {number}\n */\nexport enum Feature {\n    /**\n     * Needed to make flatbuffers happy.\n     */\n    UNUSED = 0,\n\n    /**\n     * The stream makes use of multiple full dictionaries with the\n     * same ID and assumes clients implement dictionary replacement\n     * correctly.\n     */\n    DICTIONARY_REPLACEMENT = 1,\n\n    /**\n     * The stream makes use of compressed bodies as described\n     * in Message.fbs.\n     */\n    COMPRESSED_BODY = 2\n}\n\n/**\n * @enum {number}\n */\nexport enum UnionMode {\n    Sparse = 0,\n    Dense = 1\n}\n\n/**\n * @enum {number}\n */\nexport enum Precision {\n    HALF = 0,\n    SINGLE = 1,\n    DOUBLE = 2\n}\n\n/**\n * @enum {number}\n */\nexport enum DateUnit {\n    DAY = 0,\n    MILLISECOND = 1\n}\n\n/**\n * @enum {number}\n */\nexport enum TimeUnit {\n    SECOND = 0,\n    MILLISECOND = 1,\n    MICROSECOND = 2,\n    NANOSECOND = 3\n}\n\n/**\n * @enum {number}\n */\nexport enum IntervalUnit {\n    YEAR_MONTH = 0,\n    DAY_TIME = 1\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport enum Type {\n    NONE = 0,\n    Null = 1,\n    Int = 2,\n    FloatingPoint = 3,\n    Binary = 4,\n    Utf8 = 5,\n    Bool = 6,\n    Decimal = 7,\n    Date = 8,\n    Time = 9,\n    Timestamp = 10,\n    Interval = 11,\n    List = 12,\n    Struct_ = 13,\n    Union = 14,\n    FixedSizeBinary = 15,\n    FixedSizeList = 16,\n    Map = 17,\n    Duration = 18,\n    LargeBinary = 19,\n    LargeUtf8 = 20,\n    LargeList = 21\n}\n\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n * Maintained for forwards compatibility, in the future\n * Dictionaries might be explicit maps between integers and values\n * allowing for non-contiguous index values\n *\n * @enum {number}\n */\nexport enum DictionaryKind {\n    DenseArray = 0\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport enum Endianness {\n    Little = 0,\n    Big = 1\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport class Null {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Null\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Null= obj\n     * @returns Null\n     */\n    static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n        return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Null= obj\n     * @returns Null\n     */\n    static getSizePrefixedRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNull(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n        Null.startNull(builder);\n        return Null.endNull(builder);\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport class Struct_ {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Struct_\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Struct_= obj\n     * @returns Struct_\n     */\n    static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n        return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Struct_= obj\n     * @returns Struct_\n     */\n    static getSizePrefixedRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startStruct_(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n        Struct_.startStruct_(builder);\n        return Struct_.endStruct_(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class List {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns List\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): List {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param List= obj\n     * @returns List\n     */\n    static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n        return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param List= obj\n     * @returns List\n     */\n    static getSizePrefixedRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startList(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n        List.startList(builder);\n        return List.endList(builder);\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport class LargeList {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns LargeList\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param LargeList= obj\n     * @returns LargeList\n     */\n    static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n        return (obj || new LargeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param LargeList= obj\n     * @returns LargeList\n     */\n    static getSizePrefixedRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startLargeList(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n        LargeList.startLargeList(builder);\n        return LargeList.endLargeList(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class FixedSizeList {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns FixedSizeList\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param FixedSizeList= obj\n     * @returns FixedSizeList\n     */\n    static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n        return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param FixedSizeList= obj\n     * @returns FixedSizeList\n     */\n    static getSizePrefixedRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Number of list items per value\n     *\n     * @returns number\n     */\n    listSize(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startFixedSizeList(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number listSize\n     */\n    static addListSize(builder: flatbuffers.Builder, listSize: number) {\n        builder.addFieldInt32(0, listSize, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n        FixedSizeList.startFixedSizeList(builder);\n        FixedSizeList.addListSize(builder, listSize);\n        return FixedSizeList.endFixedSizeList(builder);\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entries: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field.\n *\n * In a field with Map type, the field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entries\", \"key\", and \"value\", but this is\n * not enforced.\n *\n * Map\n *   - child[0] entries: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entries\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport class Map {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Map\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Map= obj\n     * @returns Map\n     */\n    static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n        return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Map= obj\n     * @returns Map\n     */\n    static getSizePrefixedRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Set to true if the keys within each value are sorted\n     *\n     * @returns boolean\n     */\n    keysSorted(): boolean {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMap(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param boolean keysSorted\n     */\n    static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n        builder.addFieldInt8(0, +keysSorted, +false);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n        Map.startMap(builder);\n        Map.addKeysSorted(builder, keysSorted);\n        return Map.endMap(builder);\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport class Union {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Union\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Union= obj\n     * @returns Union\n     */\n    static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n        return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Union= obj\n     * @returns Union\n     */\n    static getSizePrefixedRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns UnionMode\n     */\n    mode(): UnionMode {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : UnionMode.Sparse;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    typeIds(index: number): number | null {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    typeIdsLength(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    typeIdsArray(): Int32Array | null {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startUnion(builder: flatbuffers.Builder) {\n        builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param UnionMode mode\n     */\n    static addMode(builder: flatbuffers.Builder, mode: UnionMode) {\n        builder.addFieldInt16(0, mode, UnionMode.Sparse);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeIdsOffset\n     */\n    static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(1, typeIdsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt32(data[i]);\n        }\n        return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n        builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createUnion(builder: flatbuffers.Builder, mode: UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n        Union.startUnion(builder);\n        Union.addMode(builder, mode);\n        Union.addTypeIds(builder, typeIdsOffset);\n        return Union.endUnion(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class Int {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Int\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Int= obj\n     * @returns Int\n     */\n    static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n        return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Int= obj\n     * @returns Int\n     */\n    static getSizePrefixedRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    bitWidth(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns boolean\n     */\n    isSigned(): boolean {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInt(builder: flatbuffers.Builder) {\n        builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number bitWidth\n     */\n    static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n        builder.addFieldInt32(0, bitWidth, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param boolean isSigned\n     */\n    static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n        builder.addFieldInt8(1, +isSigned, +false);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n        Int.startInt(builder);\n        Int.addBitWidth(builder, bitWidth);\n        Int.addIsSigned(builder, isSigned);\n        return Int.endInt(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class FloatingPoint {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns FloatingPoint\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param FloatingPoint= obj\n     * @returns FloatingPoint\n     */\n    static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n        return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param FloatingPoint= obj\n     * @returns FloatingPoint\n     */\n    static getSizePrefixedRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns Precision\n     */\n    precision(): Precision {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : Precision.HALF;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startFloatingPoint(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Precision precision\n     */\n    static addPrecision(builder: flatbuffers.Builder, precision: Precision) {\n        builder.addFieldInt16(0, precision, Precision.HALF);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createFloatingPoint(builder: flatbuffers.Builder, precision: Precision): flatbuffers.Offset {\n        FloatingPoint.startFloatingPoint(builder);\n        FloatingPoint.addPrecision(builder, precision);\n        return FloatingPoint.endFloatingPoint(builder);\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport class Utf8 {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Utf8\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Utf8= obj\n     * @returns Utf8\n     */\n    static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n        return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Utf8= obj\n     * @returns Utf8\n     */\n    static getSizePrefixedRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startUtf8(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n        Utf8.startUtf8(builder);\n        return Utf8.endUtf8(builder);\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport class Binary {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Binary\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Binary= obj\n     * @returns Binary\n     */\n    static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n        return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Binary= obj\n     * @returns Binary\n     */\n    static getSizePrefixedRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startBinary(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n        Binary.startBinary(builder);\n        return Binary.endBinary(builder);\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport class LargeUtf8 {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns LargeUtf8\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param LargeUtf8= obj\n     * @returns LargeUtf8\n     */\n    static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n        return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param LargeUtf8= obj\n     * @returns LargeUtf8\n     */\n    static getSizePrefixedRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startLargeUtf8(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n        LargeUtf8.startLargeUtf8(builder);\n        return LargeUtf8.endLargeUtf8(builder);\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport class LargeBinary {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns LargeBinary\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param LargeBinary= obj\n     * @returns LargeBinary\n     */\n    static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n        return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param LargeBinary= obj\n     * @returns LargeBinary\n     */\n    static getSizePrefixedRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startLargeBinary(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n        LargeBinary.startLargeBinary(builder);\n        return LargeBinary.endLargeBinary(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class FixedSizeBinary {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns FixedSizeBinary\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param FixedSizeBinary= obj\n     * @returns FixedSizeBinary\n     */\n    static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n        return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param FixedSizeBinary= obj\n     * @returns FixedSizeBinary\n     */\n    static getSizePrefixedRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Number of bytes per value\n     *\n     * @returns number\n     */\n    byteWidth(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startFixedSizeBinary(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number byteWidth\n     */\n    static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n        builder.addFieldInt32(0, byteWidth, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n        FixedSizeBinary.startFixedSizeBinary(builder);\n        FixedSizeBinary.addByteWidth(builder, byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class Bool {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Bool\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Bool= obj\n     * @returns Bool\n     */\n    static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n        return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Bool= obj\n     * @returns Bool\n     */\n    static getSizePrefixedRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startBool(builder: flatbuffers.Builder) {\n        builder.startObject(0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n        Bool.startBool(builder);\n        return Bool.endBool(builder);\n    }\n}\n/**\n * Exact decimal value represented as an integer value in two's\n * complement. Currently only 128-bit (16-byte) and 256-bit (32-byte) integers\n * are used. The representation uses the endianness indicated\n * in the Schema.\n *\n * @constructor\n */\nexport class Decimal {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Decimal\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Decimal= obj\n     * @returns Decimal\n     */\n    static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n        return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Decimal= obj\n     * @returns Decimal\n     */\n    static getSizePrefixedRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Total number of decimal digits\n     *\n     * @returns number\n     */\n    precision(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * Number of digits after the decimal point \".\"\n     *\n     * @returns number\n     */\n    scale(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * Number of bits per value. The only accepted widths are 128 and 256.\n     * We use bitWidth for consistency with Int::bitWidth.\n     *\n     * @returns number\n     */\n    bitWidth(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 8);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 128;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDecimal(builder: flatbuffers.Builder) {\n        builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number precision\n     */\n    static addPrecision(builder: flatbuffers.Builder, precision: number) {\n        builder.addFieldInt32(0, precision, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number scale\n     */\n    static addScale(builder: flatbuffers.Builder, scale: number) {\n        builder.addFieldInt32(1, scale, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number bitWidth\n     */\n    static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n        builder.addFieldInt32(2, bitWidth, 128);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number, bitWidth: number): flatbuffers.Offset {\n        Decimal.startDecimal(builder);\n        Decimal.addPrecision(builder, precision);\n        Decimal.addScale(builder, scale);\n        Decimal.addBitWidth(builder, bitWidth);\n        return Decimal.endDecimal(builder);\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport class Date {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Date\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Date= obj\n     * @returns Date\n     */\n    static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n        return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Date= obj\n     * @returns Date\n     */\n    static getSizePrefixedRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns DateUnit\n     */\n    unit(): DateUnit {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : DateUnit.MILLISECOND;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDate(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param DateUnit unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: DateUnit) {\n        builder.addFieldInt16(0, unit, DateUnit.MILLISECOND);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createDate(builder: flatbuffers.Builder, unit: DateUnit): flatbuffers.Offset {\n        Date.startDate(builder);\n        Date.addUnit(builder, unit);\n        return Date.endDate(builder);\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport class Time {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Time\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Time= obj\n     * @returns Time\n     */\n    static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n        return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Time= obj\n     * @returns Time\n     */\n    static getSizePrefixedRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns TimeUnit\n     */\n    unit(): TimeUnit {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : TimeUnit.MILLISECOND;\n    }\n\n    /**\n     * @returns number\n     */\n    bitWidth(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTime(builder: flatbuffers.Builder) {\n        builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param TimeUnit unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: TimeUnit) {\n        builder.addFieldInt16(0, unit, TimeUnit.MILLISECOND);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number bitWidth\n     */\n    static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n        builder.addFieldInt32(1, bitWidth, 32);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createTime(builder: flatbuffers.Builder, unit: TimeUnit, bitWidth: number): flatbuffers.Offset {\n        Time.startTime(builder);\n        Time.addUnit(builder, unit);\n        Time.addBitWidth(builder, bitWidth);\n        return Time.endTime(builder);\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport class Timestamp {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Timestamp\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Timestamp= obj\n     * @returns Timestamp\n     */\n    static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n        return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Timestamp= obj\n     * @returns Timestamp\n     */\n    static getSizePrefixedRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns TimeUnit\n     */\n    unit(): TimeUnit {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : TimeUnit.SECOND;\n    }\n\n    /**\n     * The time zone is a string indicating the name of a time zone, one of:\n     *\n     * * As used in the Olson time zone database (the \"tz database\" or\n     *   \"tzdata\"), such as \"America/New_York\"\n     * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n     *\n     * Whether a timezone string is present indicates different semantics about\n     * the data:\n     *\n     * * If the time zone is null or equal to an empty string, the data is \"time\n     *   zone naive\" and shall be displayed *as is* to the user, not localized\n     *   to the locale of the user. This data can be though of as UTC but\n     *   without having \"UTC\" as the time zone, it is not considered to be\n     *   localized to any time zone\n     *\n     * * If the time zone is set to a valid value, values can be displayed as\n     *   \"localized\" to that time zone, even though the underlying 64-bit\n     *   integers are identical to the same data stored in UTC. Converting\n     *   between time zones is a metadata-only operation and does not change the\n     *   underlying values\n     *\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    timezone(): string | null;\n    timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    timezone(optionalEncoding?: any): string | Uint8Array | null {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTimestamp(builder: flatbuffers.Builder) {\n        builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param TimeUnit unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: TimeUnit) {\n        builder.addFieldInt16(0, unit, TimeUnit.SECOND);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset timezoneOffset\n     */\n    static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(1, timezoneOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createTimestamp(builder: flatbuffers.Builder, unit: TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n        Timestamp.startTimestamp(builder);\n        Timestamp.addUnit(builder, unit);\n        Timestamp.addTimezone(builder, timezoneOffset);\n        return Timestamp.endTimestamp(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class Interval {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Interval\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Interval= obj\n     * @returns Interval\n     */\n    static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n        return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Interval= obj\n     * @returns Interval\n     */\n    static getSizePrefixedRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns IntervalUnit\n     */\n    unit(): IntervalUnit {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : IntervalUnit.YEAR_MONTH;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInterval(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param IntervalUnit unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: IntervalUnit) {\n        builder.addFieldInt16(0, unit, IntervalUnit.YEAR_MONTH);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createInterval(builder: flatbuffers.Builder, unit: IntervalUnit): flatbuffers.Offset {\n        Interval.startInterval(builder);\n        Interval.addUnit(builder, unit);\n        return Interval.endInterval(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class Duration {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Duration\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Duration= obj\n     * @returns Duration\n     */\n    static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n        return (obj || new Duration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Duration= obj\n     * @returns Duration\n     */\n    static getSizePrefixedRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Duration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns TimeUnit\n     */\n    unit(): TimeUnit {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : TimeUnit.MILLISECOND;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDuration(builder: flatbuffers.Builder) {\n        builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param TimeUnit unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: TimeUnit) {\n        builder.addFieldInt16(0, unit, TimeUnit.MILLISECOND);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createDuration(builder: flatbuffers.Builder, unit: TimeUnit): flatbuffers.Offset {\n        Duration.startDuration(builder);\n        Duration.addUnit(builder, unit);\n        return Duration.endDuration(builder);\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport class KeyValue {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KeyValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KeyValue= obj\n     * @returns KeyValue\n     */\n    static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KeyValue= obj\n     * @returns KeyValue\n     */\n    static getSizePrefixedRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    key(): string | null;\n    key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    key(optionalEncoding?: any): string | Uint8Array | null {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    value(): string | null;\n    value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    value(optionalEncoding?: any): string | Uint8Array | null {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKeyValue(builder: flatbuffers.Builder) {\n        builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset keyOffset\n     */\n    static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(0, keyOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(1, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n        KeyValue.startKeyValue(builder);\n        KeyValue.addKey(builder, keyOffset);\n        KeyValue.addValue(builder, valueOffset);\n        return KeyValue.endKeyValue(builder);\n    }\n}\n/**\n * @constructor\n */\nexport class DictionaryEncoding {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DictionaryEncoding\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DictionaryEncoding= obj\n     * @returns DictionaryEncoding\n     */\n    static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n        return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DictionaryEncoding= obj\n     * @returns DictionaryEncoding\n     */\n    static getSizePrefixedRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * The known dictionary id in the application where this data is used. In\n     * the file or streaming formats, the dictionary ids are found in the\n     * DictionaryBatch messages\n     *\n     * @returns flatbuffers.Long\n     */\n    id(): flatbuffers.Long {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * The dictionary indices are constrained to be non-negative integers. If\n     * this field is null, the indices must be signed int32. To maximize\n     * cross-language compatibility and performance, implementations are\n     * recommended to prefer signed integer types over unsigned integer types\n     * and to avoid uint64 indices unless they are required by an application.\n     *\n     * @param Int= obj\n     * @returns Int|null\n     */\n    indexType(obj?: Int): Int | null {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? (obj || new Int()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n    }\n\n    /**\n     * By default, dictionaries are not ordered, or the order does not have\n     * semantic meaning. In some statistical, applications, dictionary-encoding\n     * is used to represent ordered categorical data, and we provide a way to\n     * preserve that metadata here\n     *\n     * @returns boolean\n     */\n    isOrdered(): boolean {\n        const offset = this.bb!.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @returns DictionaryKind\n     */\n    dictionaryKind(): DictionaryKind {\n        const offset = this.bb!.__offset(this.bb_pos, 10);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : DictionaryKind.DenseArray;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDictionaryEncoding(builder: flatbuffers.Builder) {\n        builder.startObject(4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long id\n     */\n    static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indexTypeOffset\n     */\n    static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(1, indexTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param boolean isOrdered\n     */\n    static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n        builder.addFieldInt8(2, +isOrdered, +false);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param DictionaryKind dictionaryKind\n     */\n    static addDictionaryKind(builder: flatbuffers.Builder, dictionaryKind: DictionaryKind) {\n        builder.addFieldInt16(3, dictionaryKind, DictionaryKind.DenseArray);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean, dictionaryKind: DictionaryKind): flatbuffers.Offset {\n        DictionaryEncoding.startDictionaryEncoding(builder);\n        DictionaryEncoding.addId(builder, id);\n        DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n        DictionaryEncoding.addIsOrdered(builder, isOrdered);\n        DictionaryEncoding.addDictionaryKind(builder, dictionaryKind);\n        return DictionaryEncoding.endDictionaryEncoding(builder);\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport class Field {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Field\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Field= obj\n     * @returns Field\n     */\n    static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Field= obj\n     * @returns Field\n     */\n    static getSizePrefixedRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Name is not required, in i.e. a List\n     *\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string | null;\n    name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    name(optionalEncoding?: any): string | Uint8Array | null {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * Whether or not this field can contain nulls. Should be true in general.\n     *\n     * @returns boolean\n     */\n    nullable(): boolean {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @returns Type\n     */\n    typeType(): Type {\n        const offset = this.bb!.__offset(this.bb_pos, 8);\n        return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : Type.NONE;\n    }\n\n    /**\n     * This is the type of the decoded value if the field is dictionary encoded.\n     *\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    type<T extends flatbuffers.Table>(obj: T): T | null {\n        const offset = this.bb!.__offset(this.bb_pos, 10);\n        return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * Present only if the field is dictionary encoded.\n     *\n     * @param DictionaryEncoding= obj\n     * @returns DictionaryEncoding|null\n     */\n    dictionary(obj?: DictionaryEncoding): DictionaryEncoding | null {\n        const offset = this.bb!.__offset(this.bb_pos, 12);\n        return offset ? (obj || new DictionaryEncoding()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n    }\n\n    /**\n     * children apply only to nested data types like Struct, List and Union. For\n     * primitive types children will have length 0.\n     *\n     * @param number index\n     * @param Field= obj\n     * @returns Field\n     */\n    children(index: number, obj?: Field): Field | null {\n        const offset = this.bb!.__offset(this.bb_pos, 14);\n        return offset ? (obj || new Field()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    childrenLength(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 14);\n        return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * User-defined metadata\n     *\n     * @param number index\n     * @param KeyValue= obj\n     * @returns KeyValue\n     */\n    customMetadata(index: number, obj?: KeyValue): KeyValue | null {\n        const offset = this.bb!.__offset(this.bb_pos, 16);\n        return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    customMetadataLength(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 16);\n        return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startField(builder: flatbuffers.Builder) {\n        builder.startObject(7);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param boolean nullable\n     */\n    static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n        builder.addFieldInt8(1, +nullable, +false);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Type typeType\n     */\n    static addTypeType(builder: flatbuffers.Builder, typeType: Type) {\n        builder.addFieldInt8(2, typeType, Type.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(3, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dictionaryOffset\n     */\n    static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(4, dictionaryOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset childrenOffset\n     */\n    static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(5, childrenOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n        builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset customMetadataOffset\n     */\n    static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(6, customMetadataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n        builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n        Field.startField(builder);\n        Field.addName(builder, nameOffset);\n        Field.addNullable(builder, nullable);\n        Field.addTypeType(builder, typeType);\n        Field.addType(builder, typeOffset);\n        Field.addDictionary(builder, dictionaryOffset);\n        Field.addChildren(builder, childrenOffset);\n        Field.addCustomMetadata(builder, customMetadataOffset);\n        return Field.endField(builder);\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport class Buffer {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Buffer\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * The relative offset into the shared memory page where the bytes for this\n     * buffer starts\n     *\n     * @returns flatbuffers.Long\n     */\n    offset(): flatbuffers.Long {\n        return this.bb!.readInt64(this.bb_pos);\n    }\n\n    /**\n     * The absolute length (in bytes) of the memory buffer. The memory is found\n     * from offset (inclusive) to offset + length (non-inclusive). When building\n     * messages using the encapsulated IPC message, padding bytes may be written\n     * after a buffer, but such padding bytes do not need to be accounted for in\n     * the size here.\n     *\n     * @returns flatbuffers.Long\n     */\n    length(): flatbuffers.Long {\n        return this.bb!.readInt64(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long offset\n     * @param flatbuffers.Long length\n     * @returns flatbuffers.Offset\n     */\n    static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n        builder.prep(8, 16);\n        builder.writeInt64(length);\n        builder.writeInt64(offset);\n        return builder.offset();\n    }\n\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport class Schema {\n    bb: flatbuffers.ByteBuffer | null = null;\n\n    bb_pos: number = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Schema\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Schema= obj\n     * @returns Schema\n     */\n    static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Schema= obj\n     * @returns Schema\n     */\n    static getSizePrefixedRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * endianness of the buffer\n     * it is Little Endian by default\n     * if endianness doesn't match the underlying system then the vectors need to be converted\n     *\n     * @returns Endianness\n     */\n    endianness(): Endianness {\n        const offset = this.bb!.__offset(this.bb_pos, 4);\n        return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : Endianness.Little;\n    }\n\n    /**\n     * @param number index\n     * @param Field= obj\n     * @returns Field\n     */\n    fields(index: number, obj?: Field): Field | null {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? (obj || new Field()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    fieldsLength(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 6);\n        return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param KeyValue= obj\n     * @returns KeyValue\n     */\n    customMetadata(index: number, obj?: KeyValue): KeyValue | null {\n        const offset = this.bb!.__offset(this.bb_pos, 8);\n        return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    customMetadataLength(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 8);\n        return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * Features used in the stream/file.\n     *\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    features(index: number): flatbuffers.Long | null {\n        const offset = this.bb!.__offset(this.bb_pos, 10);\n        return offset ? /**  */ (this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    featuresLength(): number {\n        const offset = this.bb!.__offset(this.bb_pos, 10);\n        return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSchema(builder: flatbuffers.Builder) {\n        builder.startObject(4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Endianness endianness\n     */\n    static addEndianness(builder: flatbuffers.Builder, endianness: Endianness) {\n        builder.addFieldInt16(0, endianness, Endianness.Little);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset fieldsOffset\n     */\n    static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(1, fieldsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n        builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset customMetadataOffset\n     */\n    static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(2, customMetadataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n        builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset featuresOffset\n     */\n    static addFeatures(builder: flatbuffers.Builder, featuresOffset: flatbuffers.Offset) {\n        builder.addFieldOffset(3, featuresOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createFeaturesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n        builder.startVector(8, data.length, 8);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt64(data[i]);\n        }\n        return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFeaturesVector(builder: flatbuffers.Builder, numElems: number) {\n        builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n        const offset = builder.endObject();\n        return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n        builder.finish(offset);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n        builder.finish(offset, undefined, true);\n    }\n\n    static createSchema(builder: flatbuffers.Builder, endianness: Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset, featuresOffset: flatbuffers.Offset): flatbuffers.Offset {\n        Schema.startSchema(builder);\n        Schema.addEndianness(builder, endianness);\n        Schema.addFields(builder, fieldsOffset);\n        Schema.addCustomMetadata(builder, customMetadataOffset);\n        Schema.addFeatures(builder, featuresOffset);\n        return Schema.endSchema(builder);\n    }\n}\n"]}