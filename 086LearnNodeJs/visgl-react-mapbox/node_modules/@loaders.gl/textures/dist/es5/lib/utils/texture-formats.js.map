{"version":3,"sources":["../../../../src/lib/utils/texture-formats.ts"],"names":["BROWSER_PREFIXES","WEBGL_EXTENSIONS","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_astc","EXT_texture_compression_rgtc","formats","getSupportedGPUTextureFormats","gl","getWebGLContext","undefined","Set","prefix","extension","getExtension","gpuTextureFormat","add","canvas","document","createElement","getContext","error"],"mappings":";;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,CAAC,EAAD,EAAK,SAAL,EAAgB,MAAhB,CAAzB;AAEA,IAAMC,gBAAmD,GAAG;AAE1DC,EAAAA,6BAA6B,EAAE,KAF2B;AAG1DC,EAAAA,kCAAkC,EAAE,UAHsB;AAI1DC,EAAAA,6BAA6B,EAAE,MAJ2B;AAK1DC,EAAAA,4BAA4B,EAAE,MAL4B;AAM1DC,EAAAA,8BAA8B,EAAE,OAN0B;AAO1DC,EAAAA,4BAA4B,EAAE,KAP4B;AAQ1DC,EAAAA,6BAA6B,EAAE,MAR2B;AAS1DC,EAAAA,4BAA4B,EAAE;AAT4B,CAA5D;AAaA,IAAIC,OAAqC,GAAG,IAA5C;;AAQO,SAASC,6BAAT,CAAuCC,EAAvC,EAAgF;AACrF,MAAI,CAACF,OAAL,EAAc;AACZE,IAAAA,EAAE,GAAGA,EAAE,IAAIC,eAAe,EAArB,IAA2BC,SAAhC;AAEAJ,IAAAA,OAAO,GAAG,IAAIK,GAAJ,EAAV;;AAHY,+CAKSf,gBALT;AAAA;;AAAA;AAKZ,0DAAuC;AAAA,YAA5BgB,MAA4B;;AACrC,aAAK,IAAMC,SAAX,IAAwBhB,gBAAxB,EAA0C;AACxC,cAAIW,EAAE,IAAIA,EAAE,CAACM,YAAH,WAAmBF,MAAnB,SAA4BC,SAA5B,EAAV,EAAoD;AAClD,gBAAME,gBAAgB,GAAGlB,gBAAgB,CAACgB,SAAD,CAAzC;AACAP,YAAAA,OAAO,CAACU,GAAR,CAAYD,gBAAZ;AACD;AACF;AACF;AAZW;AAAA;AAAA;AAAA;AAAA;AAab;;AAED,SAAOT,OAAP;AACD;;AAKD,SAASG,eAAT,GAA2B;AACzB,MAAI;AACF,QAAMQ,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,WAAOF,MAAM,CAACG,UAAP,CAAkB,OAAlB,CAAP;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF","sourcesContent":["import type {GPUTextureFormat} from '@loaders.gl/schema';\n\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\n\nconst WEBGL_EXTENSIONS: {[key: string]: GPUTextureFormat} = {\n  /* eslint-disable camelcase */\n  WEBGL_compressed_texture_s3tc: 'dxt',\n  WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n  WEBGL_compressed_texture_etc1: 'etc1',\n  WEBGL_compressed_texture_etc: 'etc2',\n  WEBGL_compressed_texture_pvrtc: 'pvrtc',\n  WEBGL_compressed_texture_atc: 'atc',\n  WEBGL_compressed_texture_astc: 'astc',\n  EXT_texture_compression_rgtc: 'rgtc'\n  /* eslint-enable camelcase */\n};\n\nlet formats: Set<GPUTextureFormat> | null = null;\n\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl?: WebGLRenderingContext): Set<string> {\n  if (!formats) {\n    gl = gl || getWebGLContext() || undefined;\n\n    formats = new Set<GPUTextureFormat>();\n\n    for (const prefix of BROWSER_PREFIXES) {\n      for (const extension in WEBGL_EXTENSIONS) {\n        if (gl && gl.getExtension(`${prefix}${extension}`)) {\n          const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n          formats.add(gpuTextureFormat);\n        }\n      }\n    }\n  }\n\n  return formats;\n}\n\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n  try {\n    const canvas = document.createElement('canvas');\n    return canvas.getContext('webgl');\n  } catch (error) {\n    return null;\n  }\n}\n"],"file":"texture-formats.js"}