{"version":3,"sources":["../../../../src/lib/parsers/crunch-module-loader.ts"],"names":["loadLibrary","loadCrunchModule","options","modules","crunch","loadCrunch","crunchModule","loadCrunchDecoder","globalThis","LoadCrunchDecoder"],"mappings":"AACA,SAAQA,WAAR,QAA0B,0BAA1B;AAOA,OAAO,eAAeC,gBAAf,CAAgCC,OAAhC,EAAuD;AAC5D,QAAMC,OAAO,GAAGD,OAAO,CAACC,OAAR,IAAmB,EAAnC;;AACA,MAAIA,OAAO,CAACC,MAAZ,EAAoB;AAClB,WAAOD,OAAO,CAACC,MAAf;AACD;;AAED,SAAOC,UAAU,CAACH,OAAD,CAAjB;AACD;AAED,IAAII,YAAJ;;AAOA,eAAeD,UAAf,CAA0BH,OAA1B,EAAmC;AACjC,MAAII,YAAJ,EAAkB;AAChB,WAAOA,YAAP;AACD;;AAED,MAAIC,iBAAiB,GAAG,MAAMP,WAAW,CAAC,WAAD,EAAc,UAAd,EAA0BE,OAA1B,CAAzC;AAIAK,EAAAA,iBAAiB,GAAGA,iBAAiB,IAAIC,UAAU,CAACC,iBAApD;AACAH,EAAAA,YAAY,GAAGC,iBAAiB,EAAhC;AACA,SAAOD,YAAP;AACD","sourcesContent":["// @ts-nocheck\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\n/**\n * Load crunch decoder module\n * @param options - loader options\n * @returns Promise of module object\n */\nexport async function loadCrunchModule(options): Promise<any> {\n  const modules = options.modules || {};\n  if (modules.crunch) {\n    return modules.crunch;\n  }\n\n  return loadCrunch(options);\n}\n\nlet crunchModule;\n\n/**\n * Load crunch decoder module\n * @param {any} options - Loader options\n * @returns {Promise<any>} Promise of Module object\n */\nasync function loadCrunch(options) {\n  if (crunchModule) {\n    return crunchModule;\n  }\n\n  let loadCrunchDecoder = await loadLibrary('crunch.js', 'textures', options);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  loadCrunchDecoder = loadCrunchDecoder || globalThis.LoadCrunchDecoder;\n  crunchModule = loadCrunchDecoder();\n  return crunchModule;\n}\n"],"file":"crunch-module-loader.js"}