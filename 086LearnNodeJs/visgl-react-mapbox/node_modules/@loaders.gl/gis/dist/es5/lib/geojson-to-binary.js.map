{"version":3,"sources":["../../../src/lib/geojson-to-binary.ts"],"names":["geojsonToBinary","features","options","fixRingWinding","geometryInfo","coordLength","flatFeatures","numericPropKeys","PositionDataType","Float32Array"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AAkBO,SAASA,eAAT,CACLC,QADK,EAGW;AAAA,MADhBC,OACgB,uEADkB;AAACC,IAAAA,cAAc,EAAE;AAAjB,GAClB;AAChB,MAAMC,YAAY,GAAG,8CAAoBH,QAApB,CAArB;AACA,MAAMI,WAAW,GAAGD,YAAY,CAACC,WAAjC;AACA,MAAOF,cAAP,GAAyBD,OAAzB,CAAOC,cAAP;AACA,MAAMG,YAAY,GAAG,gDAAqBL,QAArB,EAA+B;AAACI,IAAAA,WAAW,EAAXA,WAAD;AAAcF,IAAAA,cAAc,EAAdA;AAAd,GAA/B,CAArB;AACA,SAAO,8CAAoBG,YAApB,EAAkCF,YAAlC,EAAgD;AACrDG,IAAAA,eAAe,EAAEL,OAAO,CAACK,eAD4B;AAErDC,IAAAA,gBAAgB,EAAEN,OAAO,CAACM,gBAAR,IAA4BC;AAFO,GAAhD,CAAP;AAID","sourcesContent":["import type {Feature} from '@loaders.gl/schema';\nimport type {BinaryFeatures} from '@loaders.gl/schema';\n\nimport {extractGeometryInfo} from './extract-geometry-info';\nimport {geojsonToFlatGeojson} from './geojson-to-flat-geojson';\nimport {flatGeojsonToBinary} from './flat-geojson-to-binary';\n\n/**\n * Options for `geojsonToBinary`\n */\nexport type GeojsonToBinaryOptions = {\n  fixRingWinding: boolean;\n  numericPropKeys?: string[];\n  PositionDataType?: Float32ArrayConstructor | Float64ArrayConstructor;\n};\n\n/**\n * Convert GeoJSON features to flat binary arrays\n *\n * @param features\n * @param options\n * @returns features in binary format, grouped by geometry type\n */\nexport function geojsonToBinary(\n  features: Feature[],\n  options: GeojsonToBinaryOptions = {fixRingWinding: true}\n): BinaryFeatures {\n  const geometryInfo = extractGeometryInfo(features);\n  const coordLength = geometryInfo.coordLength;\n  const {fixRingWinding} = options;\n  const flatFeatures = geojsonToFlatGeojson(features, {coordLength, fixRingWinding});\n  return flatGeojsonToBinary(flatFeatures, geometryInfo, {\n    numericPropKeys: options.numericPropKeys,\n    PositionDataType: options.PositionDataType || Float32Array\n  });\n}\n"],"file":"geojson-to-binary.js"}