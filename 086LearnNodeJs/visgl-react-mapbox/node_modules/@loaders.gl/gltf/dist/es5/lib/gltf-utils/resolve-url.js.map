{"version":3,"sources":["../../../../src/lib/gltf-utils/resolve-url.ts"],"names":["resolveUrl","url","options","absolute","startsWith","baseUrl","baseUri","uri","Error","substr","lastIndexOf"],"mappings":";;;;;;;AAEO,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAEvC,MAAMC,QAAQ,GAAGF,GAAG,CAACG,UAAJ,CAAe,OAAf,KAA2BH,GAAG,CAACG,UAAJ,CAAe,OAAf,CAA3B,IAAsDH,GAAG,CAACG,UAAJ,CAAe,QAAf,CAAvE;;AACA,MAAID,QAAJ,EAAc;AACZ,WAAOF,GAAP;AACD;;AACD,MAAMI,OAAO,GAAGH,OAAO,CAACI,OAAR,IAAmBJ,OAAO,CAACK,GAA3C;;AACA,MAAI,CAACF,OAAL,EAAc;AACZ,UAAM,IAAIG,KAAJ,8DAAgEP,GAAhE,EAAN;AACD;;AACD,SAAOI,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkBJ,OAAO,CAACK,WAAR,CAAoB,GAApB,IAA2B,CAA7C,IAAkDT,GAAzD;AACD","sourcesContent":["// Resolves a relative url against a baseUrl\n// If url is absolute, return it unchanged\nexport function resolveUrl(url, options) {\n  // TODO: Use better logic to handle all protocols plus not delay on data\n  const absolute = url.startsWith('data:') || url.startsWith('http:') || url.startsWith('https:');\n  if (absolute) {\n    return url;\n  }\n  const baseUrl = options.baseUri || options.uri;\n  if (!baseUrl) {\n    throw new Error(`'baseUri' must be provided to resolve relative url ${url}`);\n  }\n  return baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1) + url;\n}\n"],"file":"resolve-url.js"}