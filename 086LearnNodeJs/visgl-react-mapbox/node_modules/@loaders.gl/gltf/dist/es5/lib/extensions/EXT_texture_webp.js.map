{"version":3,"sources":["../../../../src/lib/extensions/EXT_texture_webp.ts"],"names":["EXT_TEXTURE_WEBP","name","preprocess","gltfData","options","scenegraph","GLTFScenegraph","getRequiredExtensions","includes","Error","json","textures","texture","extension","getObjectExtension","source","removeObjectExtension","removeExtension"],"mappings":";;;;;;;;;;AAOA;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,kBAAzB;AAGO,IAAMC,IAAI,GAAGD,gBAAb;;;AAMA,SAASE,UAAT,CAAoBC,QAApB,EAA4CC,OAA5C,EAA8E;AACnF,MAAMC,UAAU,GAAG,IAAIC,uBAAJ,CAAmBH,QAAnB,CAAnB;;AAEA,MAAI,CAAC,qCAAwB,YAAxB,CAAL,EAA4C;AAC1C,QAAIE,UAAU,CAACE,qBAAX,GAAmCC,QAAnC,CAA4CR,gBAA5C,CAAJ,EAAmE;AACjE,YAAM,IAAIS,KAAJ,oCAAsCT,gBAAtC,+BAAN;AACD;;AACD;AACD;;AAED,MAAOU,IAAP,GAAeL,UAAf,CAAOK,IAAP;;AAVmF,6CAY7DA,IAAI,CAACC,QAAL,IAAiB,EAZ4C;AAAA;;AAAA;AAYnF,wDAA2C;AAAA,UAAhCC,OAAgC;AACzC,UAAMC,SAAS,GAAGR,UAAU,CAACS,kBAAX,CAChBF,OADgB,EAEhBZ,gBAFgB,CAAlB;;AAIA,UAAIa,SAAJ,EAAe;AACbD,QAAAA,OAAO,CAACG,MAAR,GAAiBF,SAAS,CAACE,MAA3B;AACD;;AACDV,MAAAA,UAAU,CAACW,qBAAX,CAAiCJ,OAAjC,EAA0CZ,gBAA1C;AACD;AArBkF;AAAA;AAAA;AAAA;AAAA;;AAwBnFK,EAAAA,UAAU,CAACY,eAAX,CAA2BjB,gBAA3B;AACD","sourcesContent":["// GLTF EXTENSION: EXT_TEXTURE_WEBP\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_TEXTURE_WEBP\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_EXT_texture_webp} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport {_isImageFormatSupported} from '@loaders.gl/images';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst EXT_TEXTURE_WEBP = 'EXT_texture_webp';\n\n/** Extension name */\nexport const name = EXT_TEXTURE_WEBP;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scenegraph = new GLTFScenegraph(gltfData);\n\n  if (!_isImageFormatSupported('image/webp')) {\n    if (scenegraph.getRequiredExtensions().includes(EXT_TEXTURE_WEBP)) {\n      throw new Error(`gltf: Required extension ${EXT_TEXTURE_WEBP} not supported by browser`);\n    }\n    return;\n  }\n\n  const {json} = scenegraph;\n\n  for (const texture of json.textures || []) {\n    const extension = scenegraph.getObjectExtension<GLTF_EXT_texture_webp>(\n      texture,\n      EXT_TEXTURE_WEBP\n    );\n    if (extension) {\n      texture.source = extension.source;\n    }\n    scenegraph.removeObjectExtension(texture, EXT_TEXTURE_WEBP);\n  }\n\n  // Remove the top-level extension\n  scenegraph.removeExtension(EXT_TEXTURE_WEBP);\n}\n"],"file":"EXT_texture_webp.js"}