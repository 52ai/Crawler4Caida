{"version":3,"sources":["../../../../src/lib/node/require-utils.node.ts"],"names":["Module","path","requireFromFile","filename","startsWith","response","fetch","code","text","requireFromString","process","cwd","require","options","Error","paths","_nodeModulePaths","dirname","parent","module","newModule","concat","prependPaths","appendPaths","_compile","children","splice","indexOf","exports"],"mappings":"AAMA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAMA,OAAO,eAAeC,eAAf,CAA+BC,QAA/B,EAA+D;AACpE,MAAIA,QAAQ,CAACC,UAAT,CAAoB,MAApB,CAAJ,EAAiC;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOC,iBAAiB,CAACF,IAAD,CAAxB;AACD;;AAED,MAAI,CAACJ,QAAQ,CAACC,UAAT,CAAoB,GAApB,CAAL,EAA+B;AAC7BD,IAAAA,QAAQ,aAAMO,OAAO,CAACC,GAAR,EAAN,cAAuBR,QAAvB,CAAR;AACD;;AACD,SAAOS,OAAO,CAACT,QAAD,CAAd;AACD;AAQD,OAAO,SAASM,iBAAT,CACLF,IADK,EAELJ,QAAQ,GAAG,EAFN,EAGLU,OAHK,EAOA;AAAA;;AACL,MAAI,OAAOV,QAAP,KAAoB,QAAxB,EAAkC;AAChCU,IAAAA,OAAO,GAAGV,QAAV;AACAA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,MAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIO,KAAJ,sCAAwC,OAAOP,IAA/C,EAAN;AACD;;AAGD,QAAMQ,KAAK,GAAGf,MAAM,CAACgB,gBAAP,CAAwBf,IAAI,CAACgB,OAAL,CAAad,QAAb,CAAxB,CAAd;;AAEA,QAAMe,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,QAAME,SAAS,GAAG,IAAIpB,MAAJ,CAAWG,QAAX,EAAqBe,MAArB,CAAlB;AACAE,EAAAA,SAAS,CAACjB,QAAV,GAAqBA,QAArB;AACAiB,EAAAA,SAAS,CAACL,KAAV,GAAmB,EAAD,CACfM,MADe,CACR,aAAAR,OAAO,UAAP,4CAASS,YAAT,KAAyB,EADjB,EAEfD,MAFe,CAERN,KAFQ,EAGfM,MAHe,CAGR,cAAAR,OAAO,UAAP,8CAASU,WAAT,KAAwB,EAHhB,CAAlB;;AAKAH,EAAAA,SAAS,CAACI,QAAV,CAAmBjB,IAAnB,EAAyBJ,QAAzB;;AAEA,MAAIe,MAAM,IAAIA,MAAM,CAACO,QAArB,EAA+B;AAC7BP,IAAAA,MAAM,CAACO,QAAP,CAAgBC,MAAhB,CAAuBR,MAAM,CAACO,QAAP,CAAgBE,OAAhB,CAAwBP,SAAxB,CAAvB,EAA2D,CAA3D;AACD;;AAED,SAAOA,SAAS,CAACQ,OAAjB;AACD","sourcesContent":["// Fork of https://github.com/floatdrop/require-from-string/blob/master/index.js\n// Copyright (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop)\n// MIT license\n\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\n\nimport Module from 'module';\nimport path from 'path';\n\n// Node.js Dynamically require from file\n// Relative names are resolved relative to cwd\n// This indirect function is provided because webpack will try to bundle `module.require`.\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\nexport async function requireFromFile(filename: string): Promise<any> {\n  if (filename.startsWith('http')) {\n    const response = await fetch(filename);\n    const code = await response.text();\n    return requireFromString(code);\n  }\n\n  if (!filename.startsWith('/')) {\n    filename = `${process.cwd()}/${filename}`;\n  }\n  return require(filename);\n}\n\n// Dynamically require from string\n// - `code` - Required - Type: string - Module code.\n// - `filename` - Type: string - Default: '' - Optional filename.\n// - `options.appendPaths` Type: Array List of paths, that will be appended to module paths.\n// Useful, when you want to be able require modules from these paths.\n// - `options.prependPaths` Type: Array Same as appendPaths, but paths will be prepended.\nexport function requireFromString(\n  code: string,\n  filename = '',\n  options?: {\n    prependPaths?: string[];\n    appendPaths?: string[];\n  }\n): any {\n  if (typeof filename === 'object') {\n    options = filename;\n    filename = '';\n  }\n\n  if (typeof code !== 'string') {\n    throw new Error(`code must be a string, not ${typeof code}`);\n  }\n\n  // @ts-ignore\n  const paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const parent = module.parent;\n  // @ts-ignore\n  const newModule = new Module(filename, parent);\n  newModule.filename = filename;\n  newModule.paths = ([] as string[])\n    .concat(options?.prependPaths || [])\n    .concat(paths)\n    .concat(options?.appendPaths || []);\n  // @ts-ignore\n  newModule._compile(code, filename);\n\n  if (parent && parent.children) {\n    parent.children.splice(parent.children.indexOf(newModule), 1);\n  }\n\n  return newModule.exports;\n}\n"],"file":"require-utils.node.js"}