{"version":3,"sources":["../../../../src/lib/worker-utils/remove-nontransferable-options.ts"],"names":["removeNontransferableOptions","object","clone","Object","assign","keys","forEach","key","ArrayBuffer","isView","RegExp"],"mappings":"AAIA,OAAO,SAASA,4BAAT,CAAsCC,MAAtC,EAAqE;AAC1E,MAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAO,EAAP;AACD;;AACD,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd;AAEAE,EAAAA,MAAM,CAACE,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA4BC,GAAD,IAAS;AAElC,QAAI,OAAON,MAAM,CAACM,GAAD,CAAb,KAAuB,QAAvB,IAAmC,CAACC,WAAW,CAACC,MAAZ,CAAmBR,MAAM,CAACM,GAAD,CAAzB,CAAxC,EAAyE;AACvEL,MAAAA,KAAK,CAACK,GAAD,CAAL,GAAaP,4BAA4B,CAACC,MAAM,CAACM,GAAD,CAAP,CAAzC;AACD,KAFD,MAEO,IAAI,OAAOL,KAAK,CAACK,GAAD,CAAZ,KAAsB,UAAtB,IAAoCL,KAAK,CAACK,GAAD,CAAL,YAAsBG,MAA9D,EAAsE;AAC3ER,MAAAA,KAAK,CAACK,GAAD,CAAL,GAAa,EAAb;AACD,KAFM,MAEA;AACLL,MAAAA,KAAK,CAACK,GAAD,CAAL,GAAaN,MAAM,CAACM,GAAD,CAAnB;AACD;AACF,GATD;AAWA,SAAOL,KAAP;AACD","sourcesContent":["/**\n * Recursively drop non serializable values like functions and regexps.\n * @param object\n */\nexport function removeNontransferableOptions(object: object | null): object {\n  if (object === null) {\n    return {};\n  }\n  const clone = Object.assign({}, object);\n\n  Object.keys(clone).forEach((key) => {\n    // Checking if it is an object and not a typed array.\n    if (typeof object[key] === 'object' && !ArrayBuffer.isView(object[key])) {\n      clone[key] = removeNontransferableOptions(object[key]);\n    } else if (typeof clone[key] === 'function' || clone[key] instanceof RegExp) {\n      clone[key] = {};\n    } else {\n      clone[key] = object[key];\n    }\n  });\n\n  return clone;\n}\n"],"file":"remove-nontransferable-options.js"}