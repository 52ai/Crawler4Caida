{"version":3,"sources":["../../../../src/lib/encoders/encode-3d-tile.ts"],"names":["TILE3D_TYPE","assert","encodeComposite3DTile","encodeBatchedModel3DTile","encodeInstancedModel3DTile","encodePointCloud3DTile","encode3DTile","tile","options","byteLength","encode3DTileToDataView","arrayBuffer","ArrayBuffer","dataView","DataView","byteOffset","type","COMPOSITE","POINT_CLOUD","BATCHED_3D_MODEL","INSTANCED_3D_MODEL","Error"],"mappings":"AAGA,SAAQA,WAAR,QAA0B,cAA1B;AACA,SAAQC,MAAR,QAAqB,0BAArB;AAEA,SAAQC,qBAAR,QAAoC,4BAApC;AACA,SAAQC,wBAAR,QAAuC,gCAAvC;AACA,SAAQC,0BAAR,QAAyC,kCAAzC;AACA,SAAQC,sBAAR,QAAqC,8BAArC;AAEA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AAClD,QAAMC,UAAU,GAAGC,sBAAsB,CAACH,IAAD,EAAO,IAAP,EAAa,CAAb,EAAgBC,OAAhB,CAAzC;AACA,QAAMG,WAAW,GAAG,IAAIC,WAAJ,CAAgBH,UAAhB,CAApB;AACA,QAAMI,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,WAAb,CAAjB;AACAD,EAAAA,sBAAsB,CAACH,IAAD,EAAOM,QAAP,EAAiB,CAAjB,EAAoBL,OAApB,CAAtB;AACA,SAAOG,WAAP;AACD;;AAED,SAASD,sBAAT,CAAgCH,IAAhC,EAAsCM,QAAtC,EAAgDE,UAAhD,EAA4DP,OAA5D,EAAqE;AACnEP,EAAAA,MAAM,CAAC,OAAOM,IAAI,CAACS,IAAZ,KAAqB,QAAtB,CAAN;;AAEA,UAAQT,IAAI,CAACS,IAAb;AACE,SAAKhB,WAAW,CAACiB,SAAjB;AACE,aAAOf,qBAAqB,CAACK,IAAD,EAAOM,QAAP,EAAiBE,UAAjB,EAA6BP,OAA7B,EAAsCE,sBAAtC,CAA5B;;AACF,SAAKV,WAAW,CAACkB,WAAjB;AACE,aAAOb,sBAAsB,CAACE,IAAD,EAAOM,QAAP,EAAiBE,UAAjB,EAA6BP,OAA7B,CAA7B;;AACF,SAAKR,WAAW,CAACmB,gBAAjB;AACE,aAAOhB,wBAAwB,CAACI,IAAD,EAAOM,QAAP,EAAiBE,UAAjB,EAA6BP,OAA7B,CAA/B;;AACF,SAAKR,WAAW,CAACoB,kBAAjB;AACE,aAAOhB,0BAA0B,CAACG,IAAD,EAAOM,QAAP,EAAiBE,UAAjB,EAA6BP,OAA7B,CAAjC;;AACF;AACE,YAAM,IAAIa,KAAJ,CAAU,6BAAV,CAAN;AAVJ;AAYD","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {assert} from '@loaders.gl/loader-utils';\n\nimport {encodeComposite3DTile} from './encode-3d-tile-composite';\nimport {encodeBatchedModel3DTile} from './encode-3d-tile-batched-model';\nimport {encodeInstancedModel3DTile} from './encode-3d-tile-instanced-model';\nimport {encodePointCloud3DTile} from './encode-3d-tile-point-cloud';\n\nexport default function encode3DTile(tile, options) {\n  const byteLength = encode3DTileToDataView(tile, null, 0, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  const dataView = new DataView(arrayBuffer);\n  encode3DTileToDataView(tile, dataView, 0, options);\n  return arrayBuffer;\n}\n\nfunction encode3DTileToDataView(tile, dataView, byteOffset, options) {\n  assert(typeof tile.type === 'string');\n\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      return encodeComposite3DTile(tile, dataView, byteOffset, options, encode3DTileToDataView);\n    case TILE3D_TYPE.POINT_CLOUD:\n      return encodePointCloud3DTile(tile, dataView, byteOffset, options);\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return encodeBatchedModel3DTile(tile, dataView, byteOffset, options);\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return encodeInstancedModel3DTile(tile, dataView, byteOffset, options);\n    default:\n      throw new Error('3D Tiles: unknown tile type');\n  }\n}\n"],"file":"encode-3d-tile.js"}