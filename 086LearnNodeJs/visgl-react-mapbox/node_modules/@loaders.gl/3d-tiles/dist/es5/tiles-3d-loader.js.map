{"version":3,"sources":["../../src/tiles-3d-loader.ts"],"names":["IMPLICIT_TILING_EXTENSION_NAME","Tiles3DLoader","id","name","module","version","VERSION","extensions","mimeTypes","tests","parse","options","loadGLTF","decodeQuantizedPositions","isTileset","assetGltfUpAxis","getBaseUri","tileset","path","dirname","url","parseTile","arrayBuffer","context","tile","content","featureIds","byteOffset","parseTileset","data","tilesetJson","JSON","TextDecoder","decode","loader","basePath","hasImplicitTilingExtension","root","type","TILESET_TYPE","TILES3D","lodMetricType","LOD_METRIC_TYPE","GEOMETRIC_ERROR","lodMetricValue","loaderOptions","indexOf","extensionsRequired","includes","extensionsUsed"],"mappings":"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","sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {\n  normalizeTileHeaders,\n  normalizeImplicitTileHeaders\n} from './lib/parsers/parse-3d-tile-header';\n\nconst IMPLICIT_TILING_EXTENSION_NAME = '3DTILES_implicit_tiling';\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\n\nasync function parseTile(arrayBuffer, options, context) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = options.loader || Tiles3DLoader;\n  tilesetJson.url = context.url;\n  // base path that non-absolute paths in tileset are relative to.\n  tilesetJson.basePath = getBaseUri(tilesetJson);\n  tilesetJson.root = hasImplicitTilingExtension(tilesetJson)\n    ? await normalizeImplicitTileHeaders(tilesetJson)\n    : normalizeTileHeaders(tilesetJson);\n\n  tilesetJson.type = TILESET_TYPE.TILES3D;\n\n  tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tilesetJson.lodMetricValue = tilesetJson.root?.lodMetricValue || 0;\n\n  return tilesetJson;\n}\n\nasync function parse(data, options, context) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else {\n    data = await parseTile(data, options, context);\n  }\n\n  return data;\n}\n\nfunction hasImplicitTilingExtension(tilesetJson) {\n  return (\n    tilesetJson?.extensionsRequired?.includes(IMPLICIT_TILING_EXTENSION_NAME) &&\n    tilesetJson?.extensionsUsed?.includes(IMPLICIT_TILING_EXTENSION_NAME)\n  );\n}\n"],"file":"tiles-3d-loader.js"}