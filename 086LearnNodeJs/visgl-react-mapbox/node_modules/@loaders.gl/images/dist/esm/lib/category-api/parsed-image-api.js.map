{"version":3,"sources":["../../../../src/lib/category-api/parsed-image-api.ts"],"names":["isImage","image","Boolean","getImageTypeOrNull","deleteImage","getImageType","close","format","Error","getImageSize","getImageData","canvas","document","createElement","context","getContext","width","height","drawImage","ImageBitmap","Image","data"],"mappings":"AAEA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAA4C;AACjD,SAAOC,OAAO,CAACC,kBAAkB,CAACF,KAAD,CAAnB,CAAd;AACD;AAED,OAAO,SAASG,WAAT,CAAqBH,KAArB,EAA6C;AAClD,UAAQI,YAAY,CAACJ,KAAD,CAApB;AACE,SAAK,aAAL;AACGA,MAAAA,KAAD,CAAuBK,KAAvB;AACA;;AACF;AAJF;AAOD;AAED,OAAO,SAASD,YAAT,CAAsBJ,KAAtB,EAAuD;AAC5D,QAAMM,MAAM,GAAGJ,kBAAkB,CAACF,KAAD,CAAjC;;AACA,MAAI,CAACM,MAAL,EAAa;AACX,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AACD,SAAOD,MAAP;AACD;AAED,OAAO,SAASE,YAAT,CAAsBR,KAAtB,EAAyE;AAC9E,SAAOS,YAAY,CAACT,KAAD,CAAnB;AACD;AAED,OAAO,SAASS,YAAT,CAAsBT,KAAtB,EAAmE;AACxE,UAAQI,YAAY,CAACJ,KAAD,CAApB;AACE,SAAK,MAAL;AACE,aAAOA,KAAP;;AAEF,SAAK,OAAL;AACA,SAAK,aAAL;AAEE,YAAMU,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AAEA,YAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;;AACA,UAAI,CAACD,OAAL,EAAc;AACZ,cAAM,IAAIN,KAAJ,CAAU,cAAV,CAAN;AACD;;AAEDG,MAAAA,MAAM,CAACK,KAAP,GAAef,KAAK,CAACe,KAArB;AAEAL,MAAAA,MAAM,CAACM,MAAP,GAAgBhB,KAAK,CAACgB,MAAtB;AAEAH,MAAAA,OAAO,CAACI,SAAR,CAAkBjB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B;AAEA,aAAOa,OAAO,CAACJ,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BT,KAAK,CAACe,KAAjC,EAAwCf,KAAK,CAACgB,MAA9C,CAAP;;AAEF;AACE,YAAM,IAAIT,KAAJ,CAAU,cAAV,CAAN;AAvBJ;AAyBD;;AAKD,SAASL,kBAAT,CAA4BF,KAA5B,EAAmC;AACjC,MAAI,OAAOkB,WAAP,KAAuB,WAAvB,IAAsClB,KAAK,YAAYkB,WAA3D,EAAwE;AACtE,WAAO,aAAP;AACD;;AACD,MAAI,OAAOC,KAAP,KAAiB,WAAjB,IAAgCnB,KAAK,YAAYmB,KAArD,EAA4D;AAC1D,WAAO,OAAP;AACD;;AACD,MAAInB,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsCA,KAAK,CAACoB,IAA5C,IAAoDpB,KAAK,CAACe,KAA1D,IAAmEf,KAAK,CAACgB,MAA7E,EAAqF;AACnF,WAAO,MAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import type {ImageType, ImageTypeEnum, ImageDataType} from '../../types';\n\nexport function isImage(image: ImageType): boolean {\n  return Boolean(getImageTypeOrNull(image));\n}\n\nexport function deleteImage(image: ImageType): void {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      (image as ImageBitmap).close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\n\nexport function getImageType(image: ImageType): ImageTypeEnum {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\n\nexport function getImageSize(image: ImageType): {width: number; height: number} {\n  return getImageData(image);\n}\n\nexport function getImageData(image: ImageType): ImageDataType | ImageData {\n  switch (getImageType(image)) {\n    case 'data':\n      return image as unknown as ImageData;\n\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\n// PRIVATE\n\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}\n"],"file":"parsed-image-api.js"}