{"version":3,"sources":["../../../src/utils/managed-array.ts"],"names":["ManagedArray","length","Map","_array","Array","_length","index","element","_map","has","delete","set","get","splice","undefined","target"],"mappings":";;;;;;;;;;;;;;;AAGA;;IAWqBA,Y;AAKnB,0BAAwB;AAAA,QAAZC,MAAY,uEAAH,CAAG;AAAA;AAAA,gDAJjB,IAAIC,GAAJ,EAIiB;AAAA;AAAA;AACtB,SAAKC,MAAL,GAAc,IAAIC,KAAJ,CAAUH,MAAV,CAAd;AACA,SAAKI,OAAL,GAAeJ,MAAf;AACD;;;;SASD,eAAa;AACX,aAAO,KAAKI,OAAZ;AACD,K;SAED,aAAWJ,MAAX,EAAmB;AACjB,WAAKI,OAAL,GAAeJ,MAAf;;AACA,UAAIA,MAAM,GAAG,KAAKE,MAAL,CAAYF,MAAzB,EAAiC;AAC/B,aAAKE,MAAL,CAAYF,MAAZ,GAAqBA,MAArB;AACD;AACF;;;SASD,eAAa;AACX,aAAO,KAAKE,MAAZ;AACD;;;WAOD,aAAIG,KAAJ,EAAW;AACT,+BAAOA,KAAK,GAAG,KAAKH,MAAL,CAAYF,MAA3B;AACA,aAAO,KAAKE,MAAL,CAAYG,KAAZ,CAAP;AACD;;;WAQD,aAAIA,KAAJ,EAAWC,OAAX,EAAoB;AAClB,+BAAOD,KAAK,IAAI,CAAhB;;AAEA,UAAIA,KAAK,IAAI,KAAKL,MAAlB,EAA0B;AACxB,aAAKA,MAAL,GAAcK,KAAK,GAAG,CAAtB;AACD;;AAED,UAAI,KAAKE,IAAL,CAAUC,GAAV,CAAc,KAAKN,MAAL,CAAYG,KAAZ,CAAd,CAAJ,EAAuC;AACrC,aAAKE,IAAL,CAAUE,MAAV,CAAiB,KAAKP,MAAL,CAAYG,KAAZ,CAAjB;AACD;;AAED,WAAKH,MAAL,CAAYG,KAAZ,IAAqBC,OAArB;;AACA,WAAKC,IAAL,CAAUG,GAAV,CAAcJ,OAAd,EAAuBD,KAAvB;AACD;;;WAED,iBAAOC,OAAP,EAAgB;AACd,UAAMD,KAAK,GAAG,KAAKE,IAAL,CAAUI,GAAV,CAAcL,OAAd,CAAd;;AACA,UAAID,KAAK,IAAI,CAAb,EAAgB;AACd,aAAKH,MAAL,CAAYU,MAAZ,CAAmBP,KAAnB,EAA0B,CAA1B;;AACA,aAAKE,IAAL,CAAUE,MAAV,CAAiBH,OAAjB;;AACA,aAAKN,MAAL;AACD;AACF;;;WAOD,gBAAO;AACL,aAAO,KAAKE,MAAL,CAAY,KAAKE,OAAL,GAAe,CAA3B,CAAP;AACD;;;WAOD,cAAKE,OAAL,EAAc;AACZ,UAAI,CAAC,KAAKC,IAAL,CAAUC,GAAV,CAAcF,OAAd,CAAL,EAA6B;AAC3B,YAAMD,KAAK,GAAG,KAAKL,MAAL,EAAd;AACA,aAAKE,MAAL,CAAYG,KAAZ,IAAqBC,OAArB;;AACA,aAAKC,IAAL,CAAUG,GAAV,CAAcJ,OAAd,EAAuBD,KAAvB;AACD;AACF;;;WAOD,eAAM;AACJ,UAAMC,OAAO,GAAG,KAAKJ,MAAL,CAAY,EAAE,KAAKF,MAAnB,CAAhB;;AACA,WAAKO,IAAL,CAAUE,MAAV,CAAiBH,OAAjB;;AACA,aAAOA,OAAP;AACD;;;WAOD,iBAAQN,MAAR,EAAgB;AACd,+BAAOA,MAAM,IAAI,CAAjB;;AAEA,UAAIA,MAAM,GAAG,KAAKE,MAAL,CAAYF,MAAzB,EAAiC;AAC/B,aAAKE,MAAL,CAAYF,MAAZ,GAAqBA,MAArB;AACD;AACF;;;WAOD,gBAAOA,MAAP,EAAe;AACb,+BAAOA,MAAM,IAAI,CAAjB;AAEA,WAAKA,MAAL,GAAcA,MAAd;AACD;;;WAOD,cAAKA,MAAL,EAAa;AACX,UAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKa,SAAlC,EAA6C;AAC3Cb,QAAAA,MAAM,GAAG,KAAKA,MAAd;AACD;;AACD,WAAKE,MAAL,CAAYF,MAAZ,GAAqBA,MAArB;AACD;;;WAED,iBAAQ;AACN,WAAKE,MAAL,GAAc,EAAd;AACA,WAAKK,IAAL,GAAY,IAAIN,GAAJ,EAAZ;AACA,WAAKG,OAAL,GAAe,CAAf;AACD;;;WAED,cAAKU,MAAL,EAAa;AACX,aAAO,KAAKP,IAAL,CAAUC,GAAV,CAAcM,MAAd,CAAP;AACD","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport default class ManagedArray {\n  _map = new Map();\n  _array: any[];\n  _length: number;\n\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n"],"file":"managed-array.js"}