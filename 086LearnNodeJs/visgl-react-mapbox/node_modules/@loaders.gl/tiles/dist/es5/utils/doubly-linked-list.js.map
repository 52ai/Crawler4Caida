{"version":3,"sources":["../../../src/utils/doubly-linked-list.ts"],"names":["DoublyLinkedList","_length","item","node","DoublyLinkedListNode","tail","next","head","previous","nextNode","remove","_insert","oldNodeNext"],"mappings":";;;;;;;;;;;;;;;AAGA;;IAOqBA,gB;;;gDACiB,I;gDACA,I;mDAC1B,C;;;;;SAEV,eAAa;AACX,aAAO,KAAKC,OAAZ;AACD;;;WAOD,aAAIC,IAAJ,EAAU;AACR,UAAMC,IAAI,GAAG,IAAIC,6BAAJ,CAAyBF,IAAzB,EAA+B,KAAKG,IAApC,EAA0C,IAA1C,CAAb;;AAEA,UAAI,KAAKA,IAAT,EAAe;AACb,aAAKA,IAAL,CAAUC,IAAV,GAAiBH,IAAjB;AACA,aAAKE,IAAL,GAAYF,IAAZ;AACD,OAHD,MAGO;AACL,aAAKI,IAAL,GAAYJ,IAAZ;AACA,aAAKE,IAAL,GAAYF,IAAZ;AACD;;AAED,QAAE,KAAKF,OAAP;AAEA,aAAOE,IAAP;AACD;;;WAMD,gBAAOA,IAAP,EAAa;AACX,UAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,UAAIA,IAAI,CAACK,QAAL,IAAiBL,IAAI,CAACG,IAA1B,EAAgC;AAC9BH,QAAAA,IAAI,CAACK,QAAL,CAAcF,IAAd,GAAqBH,IAAI,CAACG,IAA1B;AACAH,QAAAA,IAAI,CAACG,IAAL,CAAUE,QAAV,GAAqBL,IAAI,CAACK,QAA1B;AACD,OAHD,MAGO,IAAIL,IAAI,CAACK,QAAT,EAAmB;AAExBL,QAAAA,IAAI,CAACK,QAAL,CAAcF,IAAd,GAAqB,IAArB;AACA,aAAKD,IAAL,GAAYF,IAAI,CAACK,QAAjB;AACD,OAJM,MAIA,IAAIL,IAAI,CAACG,IAAT,EAAe;AAEpBH,QAAAA,IAAI,CAACG,IAAL,CAAUE,QAAV,GAAqB,IAArB;AACA,aAAKD,IAAL,GAAYJ,IAAI,CAACG,IAAjB;AACD,OAJM,MAIA;AAEL,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKF,IAAL,GAAY,IAAZ;AACD;;AAEDF,MAAAA,IAAI,CAACG,IAAL,GAAY,IAAZ;AACAH,MAAAA,IAAI,CAACK,QAAL,GAAgB,IAAhB;AAEA,QAAE,KAAKP,OAAP;AACD;;;WAOD,gBAAOE,IAAP,EAAaM,QAAb,EAAuB;AACrB,UAAIN,IAAI,KAAKM,QAAb,EAAuB;AACrB;AACD;;AAGD,WAAKC,MAAL,CAAYD,QAAZ;;AACA,WAAKE,OAAL,CAAaR,IAAb,EAAmBM,QAAnB;AACD;;;WAED,iBAAQN,IAAR,EAAcM,QAAd,EAAwB;AACtB,UAAMG,WAAW,GAAGT,IAAI,CAACG,IAAzB;AACAH,MAAAA,IAAI,CAACG,IAAL,GAAYG,QAAZ;;AAGA,UAAI,KAAKJ,IAAL,KAAcF,IAAlB,EAAwB;AACtB,aAAKE,IAAL,GAAYI,QAAZ;AACD,OAFD,MAEO;AACLG,QAAAA,WAAW,CAACJ,QAAZ,GAAuBC,QAAvB;AACD;;AAEDA,MAAAA,QAAQ,CAACH,IAAT,GAAgBM,WAAhB;AACAH,MAAAA,QAAQ,CAACD,QAAT,GAAoBL,IAApB;AAEA,QAAE,KAAKF,OAAP;AACD","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport DoublyLinkedListNode from '../utils/doubly-linked-list-node';\n\n/**\n * Doubly linked list\n *\n * @private\n */\nexport default class DoublyLinkedList {\n  head: DoublyLinkedListNode | null = null;\n  tail: DoublyLinkedListNode | null = null;\n  _length = 0;\n\n  get length() {\n    return this._length;\n  }\n\n  /**\n   * Adds the item to the end of the list\n   * @param {*} [item]\n   * @return {DoublyLinkedListNode}\n   */\n  add(item) {\n    const node = new DoublyLinkedListNode(item, this.tail, null);\n\n    if (this.tail) {\n      this.tail.next = node;\n      this.tail = node;\n    } else {\n      this.head = node;\n      this.tail = node;\n    }\n\n    ++this._length;\n\n    return node;\n  }\n\n  /**\n   * Removes the given node from the list\n   * @param {DoublyLinkedListNode} node\n   */\n  remove(node) {\n    if (!node) {\n      return;\n    }\n\n    if (node.previous && node.next) {\n      node.previous.next = node.next;\n      node.next.previous = node.previous;\n    } else if (node.previous) {\n      // Remove last node\n      node.previous.next = null;\n      this.tail = node.previous;\n    } else if (node.next) {\n      // Remove first node\n      node.next.previous = null;\n      this.head = node.next;\n    } else {\n      // Remove last node in the linked list\n      this.head = null;\n      this.tail = null;\n    }\n\n    node.next = null;\n    node.previous = null;\n\n    --this._length;\n  }\n\n  /**\n   * Moves nextNode after node\n   * @param {DoublyLinkedListNode} node\n   * @param {DoublyLinkedListNode} nextNode\n   */\n  splice(node, nextNode) {\n    if (node === nextNode) {\n      return;\n    }\n\n    // Remove nextNode, then insert after node\n    this.remove(nextNode);\n    this._insert(node, nextNode);\n  }\n\n  _insert(node, nextNode) {\n    const oldNodeNext = node.next;\n    node.next = nextNode;\n\n    // nextNode is the new tail\n    if (this.tail === node) {\n      this.tail = nextNode;\n    } else {\n      oldNodeNext.previous = nextNode;\n    }\n\n    nextNode.next = oldNodeNext;\n    nextNode.previous = node;\n\n    ++this._length;\n  }\n}\n"],"file":"doubly-linked-list.js"}