import ManagedArray from '../../utils/managed-array';
import { FrameState } from '../helpers/frame-state';
export declare type TilesetTraverserProps = {
    loadSiblings?: boolean;
    skipLevelOfDetail?: boolean;
    maximumScreenSpaceError?: number;
    onTraversalEnd?: (frameState: any) => any;
    viewportTraversersMap?: {
        [key: string]: any;
    };
    basePath?: string;
};
export declare type Props = {
    loadSiblings: boolean;
    skipLevelOfDetail: boolean;
    updateTransforms: boolean;
    maximumScreenSpaceError: number;
    onTraversalEnd: (frameState: any) => any;
    viewportTraversersMap: {
        [key: string]: any;
    };
    basePath: string;
};
export declare const DEFAULT_PROPS: Props;
export default class TilesetTraverser {
    options: Props;
    root: any;
    requestedTiles: object;
    selectedTiles: object;
    emptyTiles: object;
    protected lastUpdate: number;
    protected readonly updateDebounceTime = 1000;
    protected _traversalStack: ManagedArray;
    protected _emptyTraversalStack: ManagedArray;
    protected _frameNumber: number | null;
    protected traversalFinished(frameState: FrameState): boolean;
    constructor(options: TilesetTraverserProps);
    traverse(root: any, frameState: any, options: any): void;
    reset(): void;
    executeTraversal(root: any, frameState: FrameState): void;
    updateChildTiles(tile: any, frameState: any): boolean;
    updateAndPushChildren(tile: any, frameState: any, stack: any, depth: any): boolean;
    updateTile(tile: any, frameState: any): void;
    selectTile(tile: any, frameState: any): void;
    loadTile(tile: any, frameState: any): void;
    touchTile(tile: any, frameState: any): void;
    canTraverse(tile: any, frameState: any, useParentMetric?: boolean, ignoreVisibility?: boolean): boolean;
    shouldLoadTile(tile: any): any;
    shouldSelectTile(tile: any): any;
    shouldRefine(tile: any, frameState: any, useParentMetric: any): boolean;
    updateTileVisibility(tile: any, frameState: any): void;
    compareDistanceToCamera(b: any, a: any): number;
    anyChildrenVisible(tile: any, frameState: any): boolean;
    executeEmptyTraversal(root: any, frameState: any): boolean;
}
//# sourceMappingURL=tileset-traverser.d.ts.map