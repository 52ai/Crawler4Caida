{"version":3,"sources":["../../../../src/category/mesh/mesh-to-arrow-table.ts"],"names":["convertMeshToArrowTable","mesh","batchSize","vectors","fields","attributeKey","attributes","attribute","value","size","type","vector","listType","FixedSizeList","Field","field","data","Data","length","undefined","listVector","FixedSizeListVector","push","schema","Schema","metadata","Map","recordBatch","RecordBatch","table","Table"],"mappings":";;;;;;;AAAA;;AAUA;;AAEA;;AASO,SAASA,uBAAT,CAAiCC,IAAjC,EAA6CC,SAA7C,EAAwE;AAAA;;AAC7E,MAAMC,OAAyB,GAAG,EAAlC;AACA,MAAMC,MAAe,GAAG,EAAxB;;AACA,OAAK,IAAMC,YAAX,IAA2BJ,IAAI,CAACK,UAAhC,EAA4C;AAC1C,QAAMC,SAAS,GAAGN,IAAI,CAACK,UAAL,CAAgBD,YAAhB,CAAlB;AACA,QAAOG,KAAP,GAA0BD,SAA1B,CAAOC,KAAP;AAAA,0BAA0BD,SAA1B,CAAcE,IAAd;AAAA,QAAcA,IAAd,gCAAqB,CAArB;AACA,QAAMC,IAAI,GAAG,kCAAaF,KAAb,CAAb;AACA,QAAMG,MAAM,GAAG,oCAAeH,KAAf,CAAf;AACA,QAAMI,QAAQ,GAAG,IAAIC,oBAAJ,CAAkBJ,IAAlB,EAAwB,IAAIK,YAAJ,CAAU,OAAV,EAAmBJ,IAAnB,CAAxB,CAAjB;AACA,QAAMK,KAAK,GAAG,IAAID,YAAJ,CAAUT,YAAV,EAAwBO,QAAxB,EAAkC,KAAlC,EAAyC,iDAA0BL,SAA1B,CAAzC,CAAd;AACA,QAAMS,IAAI,GAAG,IAAIC,WAAJ,CAASL,QAAT,EAAmB,CAAnB,EAAsBJ,KAAK,CAACU,MAAN,GAAeT,IAArC,EAA2C,CAA3C,EAA8CU,SAA9C,EAAyD,CAACR,MAAD,CAAzD,CAAb;AACA,QAAMS,UAAU,GAAG,IAAIC,0BAAJ,CAAwBL,IAAxB,CAAnB;AACAb,IAAAA,OAAO,CAACmB,IAAR,CAAaF,UAAb;AACAhB,IAAAA,MAAM,CAACkB,IAAP,CAAYP,KAAZ;AACD;;AACD,MAAMQ,MAAM,GAAG,IAAIC,aAAJ,CAAWpB,MAAX,EAAmB,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEsB,MAAN,8DAAcE,QAAd,KAA0B,IAAIC,GAAJ,EAA7C,CAAf;AACA,MAAMC,WAAW,GAAG,IAAIC,kBAAJ,CAAgBL,MAAhB,EAAwBpB,OAAO,CAAC,CAAD,CAAP,CAAWe,MAAnC,EAA2Cf,OAA3C,CAApB;AACA,MAAM0B,KAAK,GAAG,IAAIC,YAAJ,CAAUP,MAAV,EAAkBI,WAAlB,CAAd;AACA,SAAOE,KAAP;AACD","sourcesContent":["import {\n  Table,\n  Schema,\n  RecordBatch,\n  FixedSizeList,\n  Field,\n  Data,\n  FixedSizeListVector\n} from 'apache-arrow/Arrow.dom';\nimport {AbstractVector} from 'apache-arrow/vector';\nimport {getArrowType, getArrowVector} from '../../lib/arrow/arrow-type-utils';\nimport type {Mesh} from './mesh-types';\nimport {makeMeshAttributeMetadata} from './deduce-mesh-schema';\n\n/**\n * * Convert a loaders.gl Mesh to an Apache Arrow Table\n * @param mesh\n * @param metadata\n * @param batchSize\n * @returns\n */\nexport function convertMeshToArrowTable(mesh: Mesh, batchSize?: number): Table {\n  const vectors: AbstractVector[] = [];\n  const fields: Field[] = [];\n  for (const attributeKey in mesh.attributes) {\n    const attribute = mesh.attributes[attributeKey];\n    const {value, size = 1} = attribute;\n    const type = getArrowType(value);\n    const vector = getArrowVector(value);\n    const listType = new FixedSizeList(size, new Field('value', type));\n    const field = new Field(attributeKey, listType, false, makeMeshAttributeMetadata(attribute));\n    const data = new Data(listType, 0, value.length / size, 0, undefined, [vector]);\n    const listVector = new FixedSizeListVector(data);\n    vectors.push(listVector);\n    fields.push(field);\n  }\n  const schema = new Schema(fields, mesh?.schema?.metadata || new Map<string, string>());\n  const recordBatch = new RecordBatch(schema, vectors[0].length, vectors);\n  const table = new Table(schema, recordBatch);\n  return table;\n}\n"],"file":"mesh-to-arrow-table.js"}