"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getArrowVector = exports.getArrowType = void 0;
const Arrow_dom_1 = require("apache-arrow/Arrow.dom");
function getArrowType(array) {
    switch (array.constructor) {
        case Int8Array:
            return new Arrow_dom_1.Int8();
        case Uint8Array:
            return new Arrow_dom_1.Uint8();
        case Int16Array:
            return new Arrow_dom_1.Int16();
        case Uint16Array:
            return new Arrow_dom_1.Uint16();
        case Int32Array:
            return new Arrow_dom_1.Int32();
        case Uint32Array:
            return new Arrow_dom_1.Uint32();
        case Float32Array:
            return new Arrow_dom_1.Float32();
        case Float64Array:
            return new Arrow_dom_1.Float64();
        default:
            throw new Error('array type not supported');
    }
}
exports.getArrowType = getArrowType;
function getArrowVector(array) {
    switch (array.constructor) {
        case Int8Array:
            return Arrow_dom_1.Int8Vector.from(array);
        case Uint8Array:
            return Arrow_dom_1.Uint8Vector.from(array);
        case Int16Array:
            return Arrow_dom_1.Int16Vector.from(array);
        case Uint16Array:
            return Arrow_dom_1.Uint16Vector.from(array);
        case Int32Array:
            return Arrow_dom_1.Int32Vector.from(array);
        case Uint32Array:
            return Arrow_dom_1.Uint32Vector.from(array);
        case Float32Array:
            return Arrow_dom_1.Float32Vector.from(array);
        case Float64Array:
            return Arrow_dom_1.Float64Vector.from(array);
        default:
            throw new Error('array type not supported');
    }
}
exports.getArrowVector = getArrowVector;
