"use strict";
// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.
Object.defineProperty(exports, "__esModule", { value: true });
exports.join = exports.dirname = exports.filename = void 0;
/**
 * Replacement for Node.js path.filename
 * @param url
 */
function filename(url) {
    const slashIndex = url && url.lastIndexOf('/');
    return slashIndex >= 0 ? url.substr(slashIndex + 1) : '';
}
exports.filename = filename;
/**
 * Replacement for Node.js path.dirname
 * @param url
 */
function dirname(url) {
    const slashIndex = url && url.lastIndexOf('/');
    return slashIndex >= 0 ? url.substr(0, slashIndex) : '';
}
exports.dirname = dirname;
/**
 * Replacement for Node.js path.join
 * @param parts
 */
function join(...parts) {
    const separator = '/';
    parts = parts.map((part, index) => {
        if (index) {
            part = part.replace(new RegExp(`^${separator}`), '');
        }
        if (index !== parts.length - 1) {
            part = part.replace(new RegExp(`${separator}$`), '');
        }
        return part;
    });
    return parts.join(separator);
}
exports.join = join;
