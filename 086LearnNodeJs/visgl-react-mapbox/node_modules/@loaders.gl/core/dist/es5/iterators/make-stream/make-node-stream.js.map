{"version":3,"sources":["../../../../src/iterators/make-stream/make-node-stream.ts"],"names":["makeStream","source","options","iterator","Symbol","asyncIterator","AsyncIterableReadable","it","_iterator","_pulling","_bytesMode","objectMode","size","_pull","error","cb","throw","return","bm","r","readable","next","done","ArrayBuffer","isView","value","byteLength","push","Uint8Array","Readable"],"mappings":"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","sourcesContent":["import {Readable, ReadableOptions} from 'stream';\n\nexport type MakeStreamOptions = ReadableOptions;\n\n/** Builds a node stream from an iterator */\nexport function makeStream<ArrayBuffer>(\n  source: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: ReadableOptions\n): Readable {\n  const iterator = source[Symbol.asyncIterator]\n    ? source[Symbol.asyncIterator]()\n    : source[Symbol.iterator]();\n  return new AsyncIterableReadable(iterator, options);\n}\n\nclass AsyncIterableReadable extends Readable {\n  private _pulling: boolean;\n  private _bytesMode: boolean;\n  private _iterator: AsyncIterator<ArrayBuffer>;\n\n  constructor(it: AsyncIterator<ArrayBuffer>, options?: ReadableOptions) {\n    super(options);\n    this._iterator = it;\n    this._pulling = false;\n    this._bytesMode = !options || !options.objectMode;\n  }\n\n  async _read(size: number): Promise<void> {\n    if (!this._pulling) {\n      this._pulling = true;\n      this._pulling = await this._pull(size, this._iterator);\n    }\n  }\n\n  async _destroy(error: Error | null, cb: (e: Error | null) => void): Promise<void> {\n    if (!this._iterator) {\n      return;\n    }\n    if (error) {\n      await this._iterator?.throw?.(error);\n    } else {\n      await this._iterator?.return?.(error);\n    }\n    cb?.(null);\n  }\n\n  // eslint-disable-next-line complexity\n  private async _pull(size: number, it: AsyncIterator<ArrayBuffer>): Promise<boolean> {\n    const bm = this._bytesMode;\n    let r: IteratorResult<ArrayBuffer> | null = null;\n    // while (this.readable && !(r = await it.next(bm ? size : null)).done) {\n    while (this.readable && !(r = await it.next()).done) {\n      if (size !== null) {\n        size -= bm && ArrayBuffer.isView(r.value) ? r.value.byteLength : 1;\n      }\n      if (!this.push(new Uint8Array(r.value)) || size <= 0) {\n        break;\n      }\n    }\n    if ((r?.done || !this.readable) && (this.push(null) || true)) {\n      it?.return?.();\n    }\n    return !this.readable;\n  }\n}\n"],"file":"make-node-stream.js"}