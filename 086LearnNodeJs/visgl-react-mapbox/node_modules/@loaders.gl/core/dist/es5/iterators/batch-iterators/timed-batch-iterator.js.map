{"version":3,"sources":["../../../../src/iterators/batch-iterators/timed-batch-iterator.ts"],"names":["timedBatchIterator","batchIterator","timeout","start","Date","now","batches","batch","push"],"mappings":";;;;;;;;;;;;;;;;;SAGuBA,kB;;;;;oFAAhB,iBAA0CC,aAA1C,EAA+EC,OAA/E;AAAA;;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,KADC,GACOC,IAAI,CAACC,GAAL,EADP;AAEDC,YAAAA,OAFC,GAEkB,EAFlB;AAAA;AAAA;AAAA;AAAA,qDAGqBL,aAHrB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAGYM,YAAAA,KAHZ;AAIHD,YAAAA,OAAO,CAACE,IAAR,CAAaD,KAAb;;AAJG,kBAKCH,IAAI,CAACC,GAAL,KAAaF,KAAb,GAAqBD,OALtB;AAAA;AAAA;AAAA;;AAAA;AAMD,mBAAMI,OAAN;;AANC;AAODH,YAAAA,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAR;AACAC,YAAAA,OAAO,GAAG,EAAV;;AARC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,iBAYDA,OAZC;AAAA;AAAA;AAAA;;AAAA;AAaH,mBAAMA,OAAN;;AAbG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * \"Debounces\" batches and returns them in groups\n */\nexport async function* timedBatchIterator<Batch>(batchIterator: AsyncIterable<Batch>, timeout) {\n  let start = Date.now();\n  let batches: Batch[] = [];\n  for await (const batch of batchIterator) {\n    batches.push(batch);\n    if (Date.now() - start > timeout) {\n      yield batches;\n      start = Date.now();\n      batches = [];\n    }\n  }\n\n  if (batches) {\n    yield batches;\n  }\n}\n"],"file":"timed-batch-iterator.js"}