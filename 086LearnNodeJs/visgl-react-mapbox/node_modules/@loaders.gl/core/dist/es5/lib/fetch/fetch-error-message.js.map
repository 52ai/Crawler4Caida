{"version":3,"sources":["../../../../src/lib/fetch/fetch-error-message.ts"],"names":["getErrorMessageFromResponseSync","response","url","status","statusText","getErrorMessageFromResponse","message","contentType","headers","get","includes","text"],"mappings":";;;;;;;;;;;;;;AAAO,SAASA,+BAAT,CAAyCC,QAAzC,EAAqE;AAC1E,4CAAmCA,QAAQ,CAACC,GAA5C,cAAmDD,QAAQ,CAACE,MAA5D,gBAAwEF,QAAQ,CAACG,UAAjF;AACD;;SAEqBC,2B;;;;;2FAAf,iBAA2CJ,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AACDK,YAAAA,OADC,sCACqCL,QAAQ,CAACC,GAD9C,eACsDD,QAAQ,CAACE,MAD/D;AAAA;AAGGI,YAAAA,WAHH,GAGiBN,QAAQ,CAACO,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,KAAwC,EAHzD;;AAAA,iBAICF,WAAW,CAACG,QAAZ,CAAqB,kBAArB,CAJD;AAAA;AAAA;AAAA;;AAAA,0BAKDJ,OALC;AAAA;AAAA,mBAKgBL,QAAQ,CAACU,IAAT,EALhB;;AAAA;AAKDL,YAAAA,OALC;AAAA;AAAA;;AAAA;AAODA,YAAAA,OAAO,IAAIL,QAAQ,CAACG,UAApB;;AAPC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAWIE,OAXJ;;AAAA;AAAA,6CAaEA,OAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export function getErrorMessageFromResponseSync(response: Response): string {\n  return `Failed to fetch resource ${response.url}(${response.status}): ${response.statusText} `;\n}\n\nexport async function getErrorMessageFromResponse(response: Response): Promise<string> {\n  let message = `Failed to fetch resource ${response.url} (${response.status}): `;\n  try {\n    const contentType = response.headers.get('Content-Type') || '';\n    if (contentType.includes('application/json')) {\n      message += await response.text();\n    } else {\n      message += response.statusText;\n    }\n  } catch (error) {\n    // eslint forbids return in finally statement\n    return message;\n  }\n  return message;\n}\n"],"file":"fetch-error-message.js"}