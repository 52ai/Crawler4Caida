{"version":3,"sources":["../../../../src/lib/loader-utils/check-errors.ts"],"names":["checkFetchResponseStatus","response","ok","errorMessage","status","statusText","text","getErrorText","Error","checkFetchResponseStatusSync","matches","match","slice"],"mappings":";;;;;;;;;;;;;;SAAsBA,wB;;;;;wFAAf,iBAAwCC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACAA,QAAQ,CAACC,EADT;AAAA;AAAA;AAAA;;AAECC,YAAAA,YAFD,0BAEgCF,QAAQ,CAACG,MAFzC,cAEmDH,QAAQ,CAACI,UAF5D;AAAA;AAAA;AAAA,mBAIkBJ,QAAQ,CAACK,IAAT,EAJlB;;AAAA;AAIKA,YAAAA,IAJL;;AAKD,gBAAIA,IAAJ,EAAU;AACRH,cAAAA,YAAY,gBAASI,YAAY,CAACD,IAAD,CAArB,CAAZ;AACD;;AAPA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAWG,IAAIE,KAAJ,CAAUL,YAAV,CAXH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,SAASM,4BAAT,CAAsCR,QAAtC,EAAgD;AACrD,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAM,IAAIM,KAAJ,wBAA0BP,QAAQ,CAACG,MAAnC,EAAN;AACD;AACF;;AAED,SAASG,YAAT,CAAsBD,IAAtB,EAA4B;AAE1B,MAAMI,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAW,iBAAX,CAAhB;AACA,SAAOD,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAV,cAAoBJ,IAAI,CAACM,KAAL,CAAW,CAAX,EAAc,EAAd,CAApB,QAAd;AACD","sourcesContent":["export async function checkFetchResponseStatus(response) {\n  if (!response.ok) {\n    let errorMessage = `fetch failed ${response.status} ${response.statusText}`;\n    try {\n      const text = await response.text();\n      if (text) {\n        errorMessage += `: ${getErrorText(text)}`;\n      }\n    } catch (error) {\n      // ignore error\n    }\n    throw new Error(errorMessage);\n  }\n}\n\nexport function checkFetchResponseStatusSync(response) {\n  if (!response.ok) {\n    throw new Error(`fetch failed ${response.status}`);\n  }\n}\n\nfunction getErrorText(text) {\n  // Look for HTML error texts\n  const matches = text.match('<pre>(.*)</pre>');\n  return matches ? matches[1] : ` ${text.slice(0, 10)}...`;\n}\n"],"file":"check-errors.js"}