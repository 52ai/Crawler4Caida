{"version":3,"sources":["../../src/index.ts"],"names":["COORDINATE_SYSTEM","OPERATION","UNIT","Deck","Layer","CompositeLayer","View","MapView","FirstPersonView","OrbitView","OrthographicView","_GlobeView","Viewport","WebMercatorViewport","_GlobeViewport","OrbitViewport","OrthographicViewport","FirstPersonViewport","Controller","MapController","OrbitController","FirstPersonController","OrthographicController","_GlobeController","AttributeManager","picking","project","project32","gouraudLighting","phongLighting","shadow","LayerManager","DeckRenderer","log","assert","TRANSITION_EVENTS","TransitionInterpolator","LinearInterpolator","FlyToInterpolator","LightingEffect","PostProcessEffect","AmbientLight","PointLight","DirectionalLight","LayerExtension","Tesselator","fp64LowPart","createIterable","ArcLayer","BitmapLayer","IconLayer","LineLayer","PointCloudLayer","ScatterplotLayer","GridCellLayer","ColumnLayer","PathLayer","PolygonLayer","SolidPolygonLayer","GeoJsonLayer","TextLayer","ScreenGridLayer","CPUGridLayer","HexagonLayer","ContourLayer","GridLayer","GPUGridLayer","AGGREGATION_OPERATION","HeatmapLayer","GreatCircleLayer","S2Layer","QuadkeyLayer","H3ClusterLayer","H3HexagonLayer","TileLayer","_Tileset2D","TripsLayer","Tile3DLayer","TerrainLayer","MVTLayer","GeohashLayer","SimpleMeshLayer","ScenegraphLayer","default","DeckGL"],"mappings":"AAyBA,SAEEA,iBAFF,EAGEC,SAHF,EAIEC,IAJF,EAMEC,IANF,EAQEC,KARF,EASEC,cATF,EAWEC,IAXF,EAYEC,OAZF,EAaEC,eAbF,EAcEC,SAdF,EAeEC,gBAfF,EAgBEC,UAhBF,EAkBEC,QAlBF,EAmBEC,mBAnBF,EAoBEC,cApBF,EAqBEC,aArBF,EAsBEC,oBAtBF,EAuBEC,mBAvBF,EAyBEC,UAzBF,EA0BEC,aA1BF,EA2BEC,eA3BF,EA4BEC,qBA5BF,EA6BEC,sBA7BF,EA8BEC,gBA9BF,EAgCEC,gBAhCF,EAkCEC,OAlCF,EAmCEC,OAnCF,EAoCEC,SApCF,EAqCEC,eArCF,EAsCEC,aAtCF,EAuCEC,MAvCF,EAyCEC,YAzCF,EA0CEC,YA1CF,EA4CEC,GA5CF,EA6CEC,MA7CF,EA+CEC,iBA/CF,EAgDEC,sBAhDF,EAiDEC,kBAjDF,EAkDEC,iBAlDF,EAoDEC,cApDF,EAqDEC,iBArDF,EAuDEC,YAvDF,EAwDEC,UAxDF,EAyDEC,gBAzDF,EA2DEC,cA3DF,EA6DEC,UA7DF,EA8DEC,WA9DF,EA+DEC,cA/DF,QAgEO,eAhEP;AAsEA,SACEC,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,eALF,EAMEC,gBANF,EAOEC,aAPF,EAQEC,WARF,EASEC,SATF,EAUEC,YAVF,EAWEC,iBAXF,EAYEC,YAZF,EAaEC,SAbF,QAcO,iBAdP;AAgBA,SACEC,eADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,SALF,EAMEC,YANF,EAOEC,qBAPF,EAQEC,YARF,QASO,6BATP;AAWA,SACEC,gBADF,EAEEC,OAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,SANF,EAOEC,UAPF,EAQEC,UARF,EASEC,WATF,EAUEC,YAVF,EAWEC,QAXF,EAYEC,YAZF,QAaO,qBAbP;AAeA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,sBAA/C;AAMA,SAAQC,OAAR,EAAiBC,MAAjB,QAA8B,gBAA9B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\n//\n// CORE LIBRARY\n//\n\nexport {\n  // CONSTANTS\n  COORDINATE_SYSTEM,\n  OPERATION,\n  UNIT,\n  // Main class\n  Deck,\n  // Base Layers\n  Layer,\n  CompositeLayer,\n  // Views\n  View,\n  MapView,\n  FirstPersonView,\n  OrbitView,\n  OrthographicView,\n  _GlobeView,\n  // Viewports\n  Viewport,\n  WebMercatorViewport,\n  _GlobeViewport,\n  OrbitViewport,\n  OrthographicViewport,\n  FirstPersonViewport,\n  // Controllers\n  Controller,\n  MapController,\n  OrbitController,\n  FirstPersonController,\n  OrthographicController,\n  _GlobeController,\n  // For custom layers\n  AttributeManager,\n  // Shader modules\n  picking,\n  project,\n  project32,\n  gouraudLighting,\n  phongLighting,\n  shadow,\n  // Internal classes\n  LayerManager,\n  DeckRenderer,\n  // Logging\n  log,\n  assert,\n  // Transition bindings\n  TRANSITION_EVENTS,\n  TransitionInterpolator,\n  LinearInterpolator,\n  FlyToInterpolator,\n  // Effects\n  LightingEffect,\n  PostProcessEffect,\n  // Lights\n  AmbientLight,\n  PointLight,\n  DirectionalLight,\n  // Extension\n  LayerExtension,\n  // Utilities\n  Tesselator,\n  fp64LowPart,\n  createIterable\n} from '@deck.gl/core';\n\n//\n// LAYERS PACKAGES\n//\n\nexport {\n  ArcLayer,\n  BitmapLayer,\n  IconLayer,\n  LineLayer,\n  PointCloudLayer,\n  ScatterplotLayer,\n  GridCellLayer,\n  ColumnLayer,\n  PathLayer,\n  PolygonLayer,\n  SolidPolygonLayer,\n  GeoJsonLayer,\n  TextLayer\n} from '@deck.gl/layers';\n\nexport {\n  ScreenGridLayer,\n  CPUGridLayer,\n  HexagonLayer,\n  ContourLayer,\n  GridLayer,\n  GPUGridLayer,\n  AGGREGATION_OPERATION,\n  HeatmapLayer\n} from '@deck.gl/aggregation-layers';\n\nexport {\n  GreatCircleLayer,\n  S2Layer,\n  QuadkeyLayer,\n  H3ClusterLayer,\n  H3HexagonLayer,\n  TileLayer,\n  _Tileset2D,\n  TripsLayer,\n  Tile3DLayer,\n  TerrainLayer,\n  MVTLayer,\n  GeohashLayer\n} from '@deck.gl/geo-layers';\n\nexport {SimpleMeshLayer, ScenegraphLayer} from '@deck.gl/mesh-layers';\n\n//\n// REACT BINDINGS PACKAGE\n//\n\nexport {default, DeckGL} from '@deck.gl/react';\n\n/* Types */\n\nexport type {\n  MapViewState,\n  FirstPersonViewState,\n  OrbitViewState,\n  OrthographicViewState,\n  GlobeViewState,\n  CoordinateSystem,\n  ChangeFlags,\n  LayersList,\n  LayerContext,\n  UpdateParameters,\n  DeckProps,\n  LayerProps,\n  CompositeLayerProps,\n  Accessor,\n  AccessorFunction,\n  LayerData,\n  Unit,\n  Position,\n  Color,\n  Texture,\n  PickingInfo,\n  GetPickingInfoParams,\n  BinaryAttribute,\n  Effect\n} from '@deck.gl/core';\n\nexport type {\n  ArcLayerProps,\n  BitmapLayerProps,\n  ColumnLayerProps,\n  ScatterplotLayerProps,\n  IconLayerProps,\n  LineLayerProps,\n  PolygonLayerProps,\n  GeoJsonLayerProps,\n  GridCellLayerProps,\n  TextLayerProps,\n  MultiIconLayerProps,\n  PointCloudLayerProps,\n  TextBackgroundLayerProps,\n  PathLayerProps,\n  SolidPolygonLayerProps\n} from '@deck.gl/layers';\n\nexport type {\n  ContourLayerProps,\n  CPUGridLayerProps,\n  GridLayerProps,\n  GPUGridLayerProps,\n  HeatmapLayerProps,\n  HexagonLayerProps,\n  ScreenGridLayerProps\n} from '@deck.gl/aggregation-layers';\n\nexport type {MVTLayerProps, QuadkeyLayerProps, TileLayerProps} from '@deck.gl/geo-layers';\n\nexport type {DeckGLProps, DeckGLRef, DeckGLContextValue} from '@deck.gl/react';\n"],"file":"index.js"}