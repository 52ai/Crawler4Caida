{"version":3,"file":"polyfill-context.js","names":["polyfillVertexArrayObject","assert","WEBGL2_CONTEXT_POLYFILLS","WEBGL2_CONTEXT_OVERRIDES","polyfillContext","gl","luma","polyfilled","initializeExtensions","installPolyfills","installOverrides","target","target2","globalThis","extensions","EXTENSIONS","getSupportedExtensions","extension","getExtension","Object","keys","forEach","key","originalFunc","bind","polyfill","polyfills","getOwnPropertyNames","polyfillExtension","defaults","meta","suffix","ext","extKey"],"sources":["../../../src/polyfill/polyfill-context.js"],"sourcesContent":["// WebGL1/WebGL2 extension polyfill support\n//\n// Provides a function that creates polyfills for WebGL2 functions based\n// on available extensions and installs them on a supplied target (could be\n// the WebGLContext or its prototype, or a separate object).\n//\n// This is intended to be a stand-alone file with minimal dependencies,\n// easy to reuse or repurpose in other projects.\n\n/** @typedef {import('./polyfill-context')} types */\n\nimport {polyfillVertexArrayObject} from './polyfill-vertex-array-object';\nimport {assert} from '../utils/assert';\n\nimport {WEBGL2_CONTEXT_POLYFILLS, WEBGL2_CONTEXT_OVERRIDES} from './polyfill-table';\n\n/** @type {types['polyfillContext']} */\nexport function polyfillContext(gl) {\n  // @ts-ignore\n  gl.luma = gl.luma || {};\n  // @ts-ignore\n  const {luma} = gl;\n\n  if (!luma.polyfilled) {\n    polyfillVertexArrayObject(gl);\n    initializeExtensions(gl);\n    installPolyfills(gl, WEBGL2_CONTEXT_POLYFILLS);\n    installOverrides(gl, {target: luma, target2: gl});\n    luma.polyfilled = true;\n  }\n\n  // TODO - only supporting a few members\n  /** @type {WebGL2RenderingContext} */\n  // @ts-ignore\n  return gl;\n}\n\n// TODO - is this still required?\n// @ts-ignore\nglobalThis.polyfillContext = polyfillContext;\n\nfunction initializeExtensions(gl) {\n  gl.luma.extensions = {};\n  // `getSupportedExtensions` can return null when context is lost.\n  const EXTENSIONS = gl.getSupportedExtensions() || [];\n  for (const extension of EXTENSIONS) {\n    gl.luma[extension] = gl.getExtension(extension);\n  }\n}\n\n// Install simple overrides (mostly get* functions)\nfunction installOverrides(gl, {target, target2}) {\n  Object.keys(WEBGL2_CONTEXT_OVERRIDES).forEach(key => {\n    if (typeof WEBGL2_CONTEXT_OVERRIDES[key] === 'function') {\n      // install an override, if no implementation was detected\n      const originalFunc = gl[key] ? gl[key].bind(gl) : () => {};\n      const polyfill = WEBGL2_CONTEXT_OVERRIDES[key].bind(null, gl, originalFunc);\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  });\n}\n\nfunction installPolyfills(gl, polyfills) {\n  for (const extension of Object.getOwnPropertyNames(polyfills)) {\n    if (extension !== 'overrides') {\n      polyfillExtension(gl, {extension, target: gl.luma, target2: gl});\n    }\n  }\n}\n\n// Polyfills a single WebGL extension into the `target` object\nfunction polyfillExtension(gl, {extension, target, target2}) {\n  const defaults = WEBGL2_CONTEXT_POLYFILLS[extension];\n  assert(defaults);\n\n  const {meta = {}} = defaults;\n  const {suffix = ''} = meta;\n\n  const ext = gl.getExtension(extension);\n\n  for (const key of Object.keys(defaults)) {\n    const extKey = `${key}${suffix}`;\n\n    let polyfill = null;\n    if (key === 'meta') {\n      // ignore\n    } else if (typeof gl[key] === 'function') {\n      // WebGL2 implementation is already\n    } else if (ext && typeof ext[extKey] === 'function') {\n      // pick extension implemenentation,if available\n      polyfill = (...args) => ext[extKey](...args);\n    } else if (typeof defaults[key] === 'function') {\n      // pick the mock implementation, if no implementation was detected\n      polyfill = defaults[key].bind(target);\n    }\n\n    if (polyfill) {\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  }\n}\n"],"mappings":"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"}