{"version":3,"file":"polyfill-table.js","names":["assert","isWebGL2","getParameterPolyfill","OES_vertex_array_object","ANGLE_instanced_arrays","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_texture_filter_anisotropic","ERR_VAO_NOT_SUPPORTED","getExtensionData","gl","extension","webgl2","ext","getExtension","WEBGL2_CONTEXT_POLYFILLS","meta","suffix","createVertexArray","deleteVertexArray","bindVertexArray","isVertexArray","vertexAttribDivisor","location","divisor","drawElementsInstanced","drawArraysInstanced","drawBuffers","createQuery","deleteQuery","beginQuery","endQuery","getQuery","handle","pname","getQueryObject","getQueryParameter","WEBGL2_CONTEXT_OVERRIDES","readBuffer","originalFunc","attachment","getVertexAttrib","result","undefined","getProgramParameter","program","getInternalformatParameter","target","format","Int32Array","getTexParameter","extensions","luma","TEXTURE_MAX_ANISOTROPY_EXT","getParameter","hint","value"],"sources":["../../../src/polyfill/polyfill-table.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {assert} from '../utils/assert';\nimport {isWebGL2} from '../utils/webgl-checks';\n\nimport {getParameterPolyfill} from './get-parameter-polyfill';\n\nconst OES_vertex_array_object = 'OES_vertex_array_object';\nconst ANGLE_instanced_arrays = 'ANGLE_instanced_arrays';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\n\nconst ERR_VAO_NOT_SUPPORTED = 'VertexArray requires WebGL2 or OES_vertex_array_object extension';\n\n// Return object with webgl2 flag and an extension\nfunction getExtensionData(gl, extension) {\n  return {\n    webgl2: isWebGL2(gl),\n    ext: gl.getExtension(extension)\n  };\n}\n\n// function mapExtensionConstant(gl, constant) {\n//   switch (constant) {\n//   case ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES: return GL.FRAGMENT_SHADER_DERIVATIVE_HINT;\n//   }\n// }\n\nexport const WEBGL2_CONTEXT_POLYFILLS = {\n  // POLYFILL TABLE\n  [OES_vertex_array_object]: {\n    meta: {suffix: 'OES'},\n    // NEW METHODS\n    createVertexArray: () => {\n      assert(false, ERR_VAO_NOT_SUPPORTED);\n    },\n    deleteVertexArray: () => {},\n    bindVertexArray: () => {},\n    isVertexArray: () => false\n  },\n  [ANGLE_instanced_arrays]: {\n    meta: {\n      suffix: 'ANGLE'\n      // constants: {\n      //   VERTEX_ATTRIB_ARRAY_DIVISOR: 'VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE'\n      // }\n    },\n    vertexAttribDivisor(location, divisor) {\n      // Accept divisor 0 even if instancing is not supported (0 = no instancing)\n      assert(divisor === 0, 'WebGL instanced rendering not supported');\n    },\n    drawElementsInstanced: () => {},\n    drawArraysInstanced: () => {}\n  },\n  [WEBGL_draw_buffers]: {\n    meta: {\n      suffix: 'WEBGL'\n    },\n    drawBuffers: () => {\n      assert(false);\n    }\n  },\n  [EXT_disjoint_timer_query]: {\n    meta: {suffix: 'EXT'},\n    // WebGL1: Polyfills the WebGL2 Query API\n    createQuery: () => {\n      assert(false);\n    },\n    deleteQuery: () => {\n      assert(false);\n    },\n    beginQuery: () => {\n      assert(false);\n    },\n    endQuery: () => {},\n    getQuery(handle, pname) {\n      // @ts-ignore\n      return this.getQueryObject(handle, pname);\n    },\n    // The WebGL1 extension uses getQueryObject rather then getQueryParameter\n    getQueryParameter(handle, pname) {\n      // @ts-ignore\n      return this.getQueryObject(handle, pname);\n    },\n    getQueryObject: () => {}\n  }\n};\n\nexport const WEBGL2_CONTEXT_OVERRIDES = {\n  // Ensure readBuffer is a no-op\n  readBuffer: (gl, originalFunc, attachment) => {\n    if (isWebGL2(gl)) {\n      originalFunc(attachment);\n    } else {\n      // assert(attachment !== GL_COLOR_ATTACHMENT0 && attachment !== GL_FRONT);\n    }\n  },\n  // Override for getVertexAttrib that returns sane values for non-WebGL1 constants\n  getVertexAttrib: (gl, originalFunc, location, pname) => {\n    // const gl = this; // eslint-disable-line\n    const {webgl2, ext} = getExtensionData(gl, ANGLE_instanced_arrays);\n\n    let result;\n    switch (pname) {\n      // WebGL1 attributes will never be integer\n      case GL.VERTEX_ATTRIB_ARRAY_INTEGER:\n        result = !webgl2 ? false : undefined;\n        break;\n      // if instancing is not available, return 0 meaning divisor has not been set\n      case GL.VERTEX_ATTRIB_ARRAY_DIVISOR:\n        result = !webgl2 && !ext ? 0 : undefined;\n        break;\n      default:\n    }\n\n    return result !== undefined ? result : originalFunc(location, pname);\n  },\n  // Handle transform feedback and uniform block queries in WebGL1\n  getProgramParameter: (gl, originalFunc, program, pname) => {\n    if (!isWebGL2(gl)) {\n      switch (pname) {\n        case GL.TRANSFORM_FEEDBACK_BUFFER_MODE:\n          return GL.SEPARATE_ATTRIBS;\n        case GL.TRANSFORM_FEEDBACK_VARYINGS:\n          return 0;\n        case GL.ACTIVE_UNIFORM_BLOCKS:\n          return 0;\n        default:\n      }\n    }\n    return originalFunc(program, pname);\n  },\n  getInternalformatParameter: (gl, originalFunc, target, format, pname) => {\n    if (!isWebGL2(gl)) {\n      switch (pname) {\n        case GL.SAMPLES:\n          return new Int32Array([0]);\n        default:\n      }\n    }\n    return gl.getInternalformatParameter(target, format, pname);\n  },\n  getTexParameter(gl, originalFunc, target, pname) {\n    switch (pname) {\n      case GL.TEXTURE_MAX_ANISOTROPY_EXT:\n        const {extensions} = gl.luma;\n        const ext = extensions[EXT_texture_filter_anisotropic];\n        pname = (ext && ext.TEXTURE_MAX_ANISOTROPY_EXT) || GL.TEXTURE_MAX_ANISOTROPY_EXT;\n        break;\n      default:\n    }\n    return originalFunc(target, pname);\n  },\n  getParameter: getParameterPolyfill,\n  hint(gl, originalFunc, pname, value) {\n    // TODO - handle GL.FRAGMENT_SHADER_DERIVATIVE_HINT:\n    // switch (pname) {\n    // case GL.FRAGMENT_SHADER_DERIVATIVE_HINT:\n    // }\n    return originalFunc(pname, value);\n  }\n};\n"],"mappings":"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"}