{"version":3,"file":"dirlight.js","names":["DEFAULT_LIGHT_DIRECTION","Float32Array","DEFAULT_MODULE_OPTIONS","lightDirection","getUniforms","opts","uniforms","dirlight_uLightDirection","vs","fs","dirlight","name","dependencies","project"],"sources":["../../../../src/modules/dirlight/dirlight.js"],"sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\n// Cheap lighting - single directional light, single dot product, one uniform\n\nimport {project} from '../project/project';\n\n/* eslint-disable camelcase */\nconst DEFAULT_LIGHT_DIRECTION = new Float32Array([1, 1, 2]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  lightDirection: DEFAULT_LIGHT_DIRECTION\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.lightDirection) {\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\n\n// TODO - reuse normal from geometry module\nconst vs = null;\n\nconst fs = `\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n\nexport const dirlight = {\n  name: 'dirlight',\n  vs,\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n"],"mappings":";;;;;;;AAIA;;AAGA,IAAMA,uBAAuB,GAAG,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB,CAAhC;AAEA,IAAMC,sBAAsB,GAAG;EAC7BC,cAAc,EAAEH;AADa,CAA/B;;AAIA,SAASI,WAAT,GAAoD;EAAA,IAA/BC,IAA+B,uEAAxBH,sBAAwB;EAClD,IAAMI,QAAQ,GAAG,EAAjB;;EACA,IAAID,IAAI,CAACF,cAAT,EAAyB;IACvBG,QAAQ,CAACC,wBAAT,GAAoCF,IAAI,CAACF,cAAzC;EACD;;EACD,OAAOG,QAAP;AACD;;AAGD,IAAME,EAAE,GAAG,IAAX;AAEA,IAAMC,EAAE,4PAAR;AAaO,IAAMC,QAAQ,GAAG;EACtBC,IAAI,EAAE,UADgB;EAEtBH,EAAE,EAAFA,EAFsB;EAGtBC,EAAE,EAAFA,EAHsB;EAItBL,WAAW,EAAXA,WAJsB;EAKtBQ,YAAY,EAAE,CAACC,gBAAD;AALQ,CAAjB"}