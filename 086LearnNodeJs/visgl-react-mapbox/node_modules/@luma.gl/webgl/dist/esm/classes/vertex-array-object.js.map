{"version":3,"file":"vertex-array-object.js","names":["Resource","Buffer","isWebGL2","getScratchArray","fillArray","assert","getBrowser","ERR_ELEMENTS","VertexArrayObject","Symbol","toStringTag","isSupported","gl","options","constantAttributeZero","getDefaultArray","luma","defaultVertexArray","handle","isDefaultArray","getMaxAttributes","MAX_ATTRIBUTES","getParameter","setConstant","location","array","constructor","Float32Array","_setConstantFloatArray","Int32Array","_setConstantIntArray","Uint32Array","_setConstantUintArray","opts","id","program","Object","assign","buffer","bufferValue","gl2","initialize","seal","delete","props","setProps","setElementBuffer","elementBuffer","target","bind","bindBuffer","setBuffer","accessor","size","type","stride","offset","normalized","integer","divisor","Number","vertexAttribIPointer","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","enable","disablingAttributeZero","disableVertexAttribArray","getConstantBuffer","elementCount","value","constantValue","_normalizeConstantArrayValue","byteLength","length","updateNeeded","reallocate","_compareConstantArrayValues","typedArray","source","start","count","subData","arrayValue","Array","isArray","v1","v2","i","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttribI1iv","vertexAttribI2iv","vertexAttribI3iv","vertexAttribI4iv","vertexAttribI1uiv","vertexAttribI2uiv","vertexAttribI3uiv","vertexAttribI4uiv","_createHandle","createVertexArray","_deleteHandle","deleteVertexArray","elements","_bindHandle","bindVertexArray","_getParameter","pname","isFinite","getVertexAttribOffset","getVertexAttrib"],"sources":["../../../src/classes/vertex-array-object.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport {isWebGL2} from '@luma.gl/gltools';\nimport {getScratchArray, fillArray} from '../utils/array-utils-flat';\nimport {assert} from '../utils/assert';\nimport {getBrowser} from '@probe.gl/env';\n\nconst ERR_ELEMENTS = 'elements must be GL.ELEMENT_ARRAY_BUFFER';\n\nexport default class VertexArrayObject extends Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'VertexArrayObject';\n  }\n  static isSupported(gl, options = {}) {\n    // Attribute 0 can not be disable on most desktop OpenGL based browsers\n    // and on iOS Safari browser.\n    if (options.constantAttributeZero) {\n      return isWebGL2(gl) || getBrowser() === 'Chrome';\n    }\n\n    // Whether additional objects can be created\n    return true;\n  }\n\n  // Returns the global (null) vertex array object. Exists even when no extension available\n  // TODO(Tarek): VAOs are now polyfilled. Deprecate this in 9.0\n  static getDefaultArray(gl) {\n    gl.luma = gl.luma || {};\n    if (!gl.luma.defaultVertexArray) {\n      gl.luma.defaultVertexArray = new VertexArrayObject(gl, {handle: null, isDefaultArray: true});\n    }\n    return gl.luma.defaultVertexArray;\n  }\n\n  static getMaxAttributes(gl) {\n    // TODO - should be cached per context\n    // @ts-ignore\n    VertexArrayObject.MAX_ATTRIBUTES =\n      // @ts-ignore\n      VertexArrayObject.MAX_ATTRIBUTES || gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    // @ts-ignore\n    return VertexArrayObject.MAX_ATTRIBUTES;\n  }\n\n  // Note: Constants are stored globally on the WebGL context, not the VAO\n  // So they need to be updated before every render\n  // TODO - use known type (in configuration or passed in) to allow non-typed arrays?\n  // TODO - remember/cache values to avoid setting them unnecessarily?\n  static setConstant(gl, location, array) {\n    switch (array.constructor) {\n      case Float32Array:\n        VertexArrayObject._setConstantFloatArray(gl, location, array);\n        break;\n      case Int32Array:\n        VertexArrayObject._setConstantIntArray(gl, location, array);\n        break;\n      case Uint32Array:\n        VertexArrayObject._setConstantUintArray(gl, location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  // Create a VertexArray\n  constructor(gl, opts = {}) {\n    // Use program's id if program but no id is supplied\n    const id = opts.id || (opts.program && opts.program.id);\n    super(gl, Object.assign({}, opts, {id}));\n\n    this.buffer = null;\n    this.bufferValue = null;\n    this.isDefaultArray = opts.isDefaultArray || false;\n\n    /** @type {WebGL2RenderingContext} */\n    this.gl2 = gl;\n\n    this.initialize(opts);\n\n    Object.seal(this);\n  }\n\n  delete() {\n    super.delete();\n    if (this.buffer) {\n      this.buffer.delete();\n    }\n    return this;\n  }\n\n  get MAX_ATTRIBUTES() {\n    return VertexArrayObject.getMaxAttributes(this.gl);\n  }\n\n  initialize(props = {}) {\n    return this.setProps(props);\n  }\n\n  setProps(props) {\n    // TODO: decide which props should be supported\n    return this;\n  }\n\n  // Set (bind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER. Constants not supported\n  setElementBuffer(elementBuffer = null, opts = {}) {\n    assert(!elementBuffer || elementBuffer.target === GL.ELEMENT_ARRAY_BUFFER, ERR_ELEMENTS);\n\n    // The GL.ELEMENT_ARRAY_BUFFER_BINDING is stored on the VertexArrayObject...\n    this.bind(() => {\n      this.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, elementBuffer ? elementBuffer.handle : null);\n    });\n\n    return this;\n  }\n\n  // Set a location in vertex attributes array to a bufferk, enables the location, sets divisor\n  setBuffer(location, buffer, accessor) {\n    // Check target\n    if (buffer.target === GL.ELEMENT_ARRAY_BUFFER) {\n      return this.setElementBuffer(buffer, accessor);\n    }\n\n    const {size, type, stride, offset, normalized, integer, divisor} = accessor;\n\n    const {gl, gl2} = this;\n    location = Number(location);\n\n    this.bind(() => {\n      // A non-zero buffer object must be bound to the GL_ARRAY_BUFFER target\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer.handle);\n\n      // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n      if (integer) {\n        assert(isWebGL2(gl));\n        gl2.vertexAttribIPointer(location, size, type, stride, offset);\n      } else {\n        // Attaches ARRAY_BUFFER with specified buffer format to location\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n      }\n      gl.enableVertexAttribArray(location);\n      gl2.vertexAttribDivisor(location, divisor || 0);\n\n      // NOTE We don't unbind buffer here, typically another buffer will be bound just after\n    });\n\n    return this;\n  }\n\n  // Enabling an attribute location makes it reference the currently bound buffer\n  // Disabling an attribute location makes it reference the global constant value\n  // TODO - handle single values for size 1 attributes?\n  // TODO - convert classic arrays based on known type?\n  enable(location, enable = true) {\n    // Attribute 0 cannot be disabled in most desktop OpenGL based browsers\n    const disablingAttributeZero =\n      !enable &&\n      location === 0 &&\n      !VertexArrayObject.isSupported(this.gl, {constantAttributeZero: true});\n\n    if (!disablingAttributeZero) {\n      location = Number(location);\n      this.bind(\n        () =>\n          enable\n            ? this.gl.enableVertexAttribArray(location)\n            : this.gl.disableVertexAttribArray(location)\n      );\n    }\n    return this;\n  }\n\n  // Provide a means to create a buffer that is equivalent to a constant.\n  // NOTE: Desktop OpenGL cannot disable attribute 0.\n  // https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-\n  // this-has-significant-performance-penalt\n  getConstantBuffer(elementCount, value) {\n    // Create buffer only when needed, and reuse it (avoids inflating buffer creation statistics)\n\n    const constantValue = this._normalizeConstantArrayValue(value);\n\n    const byteLength = constantValue.byteLength * elementCount;\n    const length = constantValue.length * elementCount;\n\n    let updateNeeded = !this.buffer;\n\n    this.buffer = this.buffer || new Buffer(this.gl, byteLength);\n    updateNeeded = updateNeeded || this.buffer.reallocate(byteLength);\n\n    // Reallocate and update contents if needed\n    updateNeeded =\n      updateNeeded || !this._compareConstantArrayValues(constantValue, this.bufferValue);\n\n    if (updateNeeded) {\n      // Create a typed array that is big enough, and fill it with the required data\n      const typedArray = getScratchArray(value.constructor, length);\n      fillArray({target: typedArray, source: constantValue, start: 0, count: length});\n      this.buffer.subData(typedArray);\n      this.bufferValue = value;\n    }\n\n    return this.buffer;\n  }\n\n  // PRIVATE\n\n  // TODO - convert Arrays based on known type? (read type from accessor, don't assume Float32Array)\n  // TODO - handle single values for size 1 attributes?\n  _normalizeConstantArrayValue(arrayValue) {\n    if (Array.isArray(arrayValue)) {\n      return new Float32Array(arrayValue);\n    }\n    return arrayValue;\n  }\n\n  _compareConstantArrayValues(v1, v2) {\n    if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n      return false;\n    }\n    for (let i = 0; i < v1.length; ++i) {\n      if (v1[i] !== v2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static _setConstantFloatArray(gl, location, array) {\n    switch (array.length) {\n      case 1:\n        gl.vertexAttrib1fv(location, array);\n        break;\n      case 2:\n        gl.vertexAttrib2fv(location, array);\n        break;\n      case 3:\n        gl.vertexAttrib3fv(location, array);\n        break;\n      case 4:\n        gl.vertexAttrib4fv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  static _setConstantIntArray(gl, location, array) {\n    assert(isWebGL2(gl));\n    switch (array.length) {\n      case 1:\n        gl.vertexAttribI1iv(location, array);\n        break;\n      case 2:\n        gl.vertexAttribI2iv(location, array);\n        break;\n      case 3:\n        gl.vertexAttribI3iv(location, array);\n        break;\n      case 4:\n        gl.vertexAttribI4iv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  static _setConstantUintArray(gl, location, array) {\n    assert(isWebGL2(gl));\n    switch (array.length) {\n      case 1:\n        gl.vertexAttribI1uiv(location, array);\n        break;\n      case 2:\n        gl.vertexAttribI2uiv(location, array);\n        break;\n      case 3:\n        gl.vertexAttribI3uiv(location, array);\n        break;\n      case 4:\n        gl.vertexAttribI4uiv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  // RESOURCE IMPLEMENTATION\n\n  _createHandle() {\n    /** @type {WebGL2RenderingContext} */\n    // @ts-ignore\n    const gl2 = this.gl;\n    return gl2.createVertexArray();\n  }\n\n  _deleteHandle(handle) {\n    this.gl2.deleteVertexArray(handle);\n    // @ts-ignore\n    return [this.elements];\n    // return [this.elements, ...this.buffers];\n  }\n\n  _bindHandle(handle) {\n    this.gl2.bindVertexArray(handle);\n  }\n\n  // Generic getter for information about a vertex attribute at a given position\n  _getParameter(pname, {location}) {\n    assert(Number.isFinite(location));\n    return this.bind(() => {\n      switch (pname) {\n        case GL.VERTEX_ATTRIB_ARRAY_POINTER:\n          return this.gl.getVertexAttribOffset(location, pname);\n        default:\n          return this.gl.getVertexAttrib(location, pname);\n      }\n    });\n  }\n}\n"],"mappings":"AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,eAAR,EAAyBC,SAAzB,QAAyC,2BAAzC;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,UAAR,QAAyB,eAAzB;AAEA,MAAMC,YAAY,GAAG,0CAArB;AAEA,eAAe,MAAMC,iBAAN,SAAgCR,QAAhC,CAAyC;EAE/B,KAAlBS,MAAM,CAACC,WAAW,IAAI;IACzB,OAAO,mBAAP;EACD;;EACiB,OAAXC,WAAW,CAACC,EAAD,EAAmB;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAGnC,IAAIA,OAAO,CAACC,qBAAZ,EAAmC;MACjC,OAAOZ,QAAQ,CAACU,EAAD,CAAR,IAAgBN,UAAU,OAAO,QAAxC;IACD;;IAGD,OAAO,IAAP;EACD;;EAIqB,OAAfS,eAAe,CAACH,EAAD,EAAK;IACzBA,EAAE,CAACI,IAAH,GAAUJ,EAAE,CAACI,IAAH,IAAW,EAArB;;IACA,IAAI,CAACJ,EAAE,CAACI,IAAH,CAAQC,kBAAb,EAAiC;MAC/BL,EAAE,CAACI,IAAH,CAAQC,kBAAR,GAA6B,IAAIT,iBAAJ,CAAsBI,EAAtB,EAA0B;QAACM,MAAM,EAAE,IAAT;QAAeC,cAAc,EAAE;MAA/B,CAA1B,CAA7B;IACD;;IACD,OAAOP,EAAE,CAACI,IAAH,CAAQC,kBAAf;EACD;;EAEsB,OAAhBG,gBAAgB,CAACR,EAAD,EAAK;IAG1BJ,iBAAiB,CAACa,cAAlB,GAEEb,iBAAiB,CAACa,cAAlB,IAAoCT,EAAE,CAACU,YAAH,OAFtC;IAIA,OAAOd,iBAAiB,CAACa,cAAzB;EACD;;EAMiB,OAAXE,WAAW,CAACX,EAAD,EAAKY,QAAL,EAAeC,KAAf,EAAsB;IACtC,QAAQA,KAAK,CAACC,WAAd;MACE,KAAKC,YAAL;QACEnB,iBAAiB,CAACoB,sBAAlB,CAAyChB,EAAzC,EAA6CY,QAA7C,EAAuDC,KAAvD;;QACA;;MACF,KAAKI,UAAL;QACErB,iBAAiB,CAACsB,oBAAlB,CAAuClB,EAAvC,EAA2CY,QAA3C,EAAqDC,KAArD;;QACA;;MACF,KAAKM,WAAL;QACEvB,iBAAiB,CAACwB,qBAAlB,CAAwCpB,EAAxC,EAA4CY,QAA5C,EAAsDC,KAAtD;;QACA;;MACF;QACEpB,MAAM,CAAC,KAAD,CAAN;IAXJ;EAaD;;EAGDqB,WAAW,CAACd,EAAD,EAAgB;IAAA,IAAXqB,IAAW,uEAAJ,EAAI;IAEzB,MAAMC,EAAE,GAAGD,IAAI,CAACC,EAAL,IAAYD,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACE,OAAL,CAAaD,EAApD;IACA,MAAMtB,EAAN,EAAUwB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;MAACC;IAAD,CAAxB,CAAV;IAEA,KAAKI,MAAL,GAAc,IAAd;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKpB,cAAL,GAAsBc,IAAI,CAACd,cAAL,IAAuB,KAA7C;IAGA,KAAKqB,GAAL,GAAW5B,EAAX;IAEA,KAAK6B,UAAL,CAAgBR,IAAhB;IAEAG,MAAM,CAACM,IAAP,CAAY,IAAZ;EACD;;EAEDC,MAAM,GAAG;IACP,MAAMA,MAAN;;IACA,IAAI,KAAKL,MAAT,EAAiB;MACf,KAAKA,MAAL,CAAYK,MAAZ;IACD;;IACD,OAAO,IAAP;EACD;;EAEiB,IAAdtB,cAAc,GAAG;IACnB,OAAOb,iBAAiB,CAACY,gBAAlB,CAAmC,KAAKR,EAAxC,CAAP;EACD;;EAED6B,UAAU,GAAa;IAAA,IAAZG,KAAY,uEAAJ,EAAI;IACrB,OAAO,KAAKC,QAAL,CAAcD,KAAd,CAAP;EACD;;EAEDC,QAAQ,CAACD,KAAD,EAAQ;IAEd,OAAO,IAAP;EACD;;EAIDE,gBAAgB,GAAkC;IAAA,IAAjCC,aAAiC,uEAAjB,IAAiB;IAAA,IAAXd,IAAW,uEAAJ,EAAI;IAChD5B,MAAM,CAAC,CAAC0C,aAAD,IAAkBA,aAAa,CAACC,MAAd,UAAnB,EAAqEzC,YAArE,CAAN;IAGA,KAAK0C,IAAL,CAAU,MAAM;MACd,KAAKrC,EAAL,CAAQsC,UAAR,QAA4CH,aAAa,GAAGA,aAAa,CAAC7B,MAAjB,GAA0B,IAAnF;IACD,CAFD;IAIA,OAAO,IAAP;EACD;;EAGDiC,SAAS,CAAC3B,QAAD,EAAWc,MAAX,EAAmBc,QAAnB,EAA6B;IAEpC,IAAId,MAAM,CAACU,MAAP,UAAJ,EAA+C;MAC7C,OAAO,KAAKF,gBAAL,CAAsBR,MAAtB,EAA8Bc,QAA9B,CAAP;IACD;;IAED,MAAM;MAACC,IAAD;MAAOC,IAAP;MAAaC,MAAb;MAAqBC,MAArB;MAA6BC,UAA7B;MAAyCC,OAAzC;MAAkDC;IAAlD,IAA6DP,QAAnE;IAEA,MAAM;MAACxC,EAAD;MAAK4B;IAAL,IAAY,IAAlB;IACAhB,QAAQ,GAAGoC,MAAM,CAACpC,QAAD,CAAjB;IAEA,KAAKyB,IAAL,CAAU,MAAM;MAEdrC,EAAE,CAACsC,UAAH,QAA+BZ,MAAM,CAACpB,MAAtC;;MAGA,IAAIwC,OAAJ,EAAa;QACXrD,MAAM,CAACH,QAAQ,CAACU,EAAD,CAAT,CAAN;QACA4B,GAAG,CAACqB,oBAAJ,CAAyBrC,QAAzB,EAAmC6B,IAAnC,EAAyCC,IAAzC,EAA+CC,MAA/C,EAAuDC,MAAvD;MACD,CAHD,MAGO;QAEL5C,EAAE,CAACkD,mBAAH,CAAuBtC,QAAvB,EAAiC6B,IAAjC,EAAuCC,IAAvC,EAA6CG,UAA7C,EAAyDF,MAAzD,EAAiEC,MAAjE;MACD;;MACD5C,EAAE,CAACmD,uBAAH,CAA2BvC,QAA3B;MACAgB,GAAG,CAACwB,mBAAJ,CAAwBxC,QAAxB,EAAkCmC,OAAO,IAAI,CAA7C;IAGD,CAhBD;IAkBA,OAAO,IAAP;EACD;;EAMDM,MAAM,CAACzC,QAAD,EAA0B;IAAA,IAAfyC,MAAe,uEAAN,IAAM;IAE9B,MAAMC,sBAAsB,GAC1B,CAACD,MAAD,IACAzC,QAAQ,KAAK,CADb,IAEA,CAAChB,iBAAiB,CAACG,WAAlB,CAA8B,KAAKC,EAAnC,EAAuC;MAACE,qBAAqB,EAAE;IAAxB,CAAvC,CAHH;;IAKA,IAAI,CAACoD,sBAAL,EAA6B;MAC3B1C,QAAQ,GAAGoC,MAAM,CAACpC,QAAD,CAAjB;MACA,KAAKyB,IAAL,CACE,MACEgB,MAAM,GACF,KAAKrD,EAAL,CAAQmD,uBAAR,CAAgCvC,QAAhC,CADE,GAEF,KAAKZ,EAAL,CAAQuD,wBAAR,CAAiC3C,QAAjC,CAJR;IAMD;;IACD,OAAO,IAAP;EACD;;EAMD4C,iBAAiB,CAACC,YAAD,EAAeC,KAAf,EAAsB;IAGrC,MAAMC,aAAa,GAAG,KAAKC,4BAAL,CAAkCF,KAAlC,CAAtB;;IAEA,MAAMG,UAAU,GAAGF,aAAa,CAACE,UAAd,GAA2BJ,YAA9C;IACA,MAAMK,MAAM,GAAGH,aAAa,CAACG,MAAd,GAAuBL,YAAtC;IAEA,IAAIM,YAAY,GAAG,CAAC,KAAKrC,MAAzB;IAEA,KAAKA,MAAL,GAAc,KAAKA,MAAL,IAAe,IAAIrC,MAAJ,CAAW,KAAKW,EAAhB,EAAoB6D,UAApB,CAA7B;IACAE,YAAY,GAAGA,YAAY,IAAI,KAAKrC,MAAL,CAAYsC,UAAZ,CAAuBH,UAAvB,CAA/B;IAGAE,YAAY,GACVA,YAAY,IAAI,CAAC,KAAKE,2BAAL,CAAiCN,aAAjC,EAAgD,KAAKhC,WAArD,CADnB;;IAGA,IAAIoC,YAAJ,EAAkB;MAEhB,MAAMG,UAAU,GAAG3E,eAAe,CAACmE,KAAK,CAAC5C,WAAP,EAAoBgD,MAApB,CAAlC;MACAtE,SAAS,CAAC;QAAC4C,MAAM,EAAE8B,UAAT;QAAqBC,MAAM,EAAER,aAA7B;QAA4CS,KAAK,EAAE,CAAnD;QAAsDC,KAAK,EAAEP;MAA7D,CAAD,CAAT;MACA,KAAKpC,MAAL,CAAY4C,OAAZ,CAAoBJ,UAApB;MACA,KAAKvC,WAAL,GAAmB+B,KAAnB;IACD;;IAED,OAAO,KAAKhC,MAAZ;EACD;;EAMDkC,4BAA4B,CAACW,UAAD,EAAa;IACvC,IAAIC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAJ,EAA+B;MAC7B,OAAO,IAAIxD,YAAJ,CAAiBwD,UAAjB,CAAP;IACD;;IACD,OAAOA,UAAP;EACD;;EAEDN,2BAA2B,CAACS,EAAD,EAAKC,EAAL,EAAS;IAClC,IAAI,CAACD,EAAD,IAAO,CAACC,EAAR,IAAcD,EAAE,CAACZ,MAAH,KAAca,EAAE,CAACb,MAA/B,IAAyCY,EAAE,CAAC5D,WAAH,KAAmB6D,EAAE,CAAC7D,WAAnE,EAAgF;MAC9E,OAAO,KAAP;IACD;;IACD,KAAK,IAAI8D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACZ,MAAvB,EAA+B,EAAEc,CAAjC,EAAoC;MAClC,IAAIF,EAAE,CAACE,CAAD,CAAF,KAAUD,EAAE,CAACC,CAAD,CAAhB,EAAqB;QACnB,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EAE4B,OAAtB5D,sBAAsB,CAAChB,EAAD,EAAKY,QAAL,EAAeC,KAAf,EAAsB;IACjD,QAAQA,KAAK,CAACiD,MAAd;MACE,KAAK,CAAL;QACE9D,EAAE,CAAC6E,eAAH,CAAmBjE,QAAnB,EAA6BC,KAA7B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAAC8E,eAAH,CAAmBlE,QAAnB,EAA6BC,KAA7B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAAC+E,eAAH,CAAmBnE,QAAnB,EAA6BC,KAA7B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACgF,eAAH,CAAmBpE,QAAnB,EAA6BC,KAA7B;QACA;;MACF;QACEpB,MAAM,CAAC,KAAD,CAAN;IAdJ;EAgBD;;EAE0B,OAApByB,oBAAoB,CAAClB,EAAD,EAAKY,QAAL,EAAeC,KAAf,EAAsB;IAC/CpB,MAAM,CAACH,QAAQ,CAACU,EAAD,CAAT,CAAN;;IACA,QAAQa,KAAK,CAACiD,MAAd;MACE,KAAK,CAAL;QACE9D,EAAE,CAACiF,gBAAH,CAAoBrE,QAApB,EAA8BC,KAA9B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACkF,gBAAH,CAAoBtE,QAApB,EAA8BC,KAA9B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACmF,gBAAH,CAAoBvE,QAApB,EAA8BC,KAA9B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACoF,gBAAH,CAAoBxE,QAApB,EAA8BC,KAA9B;QACA;;MACF;QACEpB,MAAM,CAAC,KAAD,CAAN;IAdJ;EAgBD;;EAE2B,OAArB2B,qBAAqB,CAACpB,EAAD,EAAKY,QAAL,EAAeC,KAAf,EAAsB;IAChDpB,MAAM,CAACH,QAAQ,CAACU,EAAD,CAAT,CAAN;;IACA,QAAQa,KAAK,CAACiD,MAAd;MACE,KAAK,CAAL;QACE9D,EAAE,CAACqF,iBAAH,CAAqBzE,QAArB,EAA+BC,KAA/B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACsF,iBAAH,CAAqB1E,QAArB,EAA+BC,KAA/B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACuF,iBAAH,CAAqB3E,QAArB,EAA+BC,KAA/B;QACA;;MACF,KAAK,CAAL;QACEb,EAAE,CAACwF,iBAAH,CAAqB5E,QAArB,EAA+BC,KAA/B;QACA;;MACF;QACEpB,MAAM,CAAC,KAAD,CAAN;IAdJ;EAgBD;;EAIDgG,aAAa,GAAG;IAGd,MAAM7D,GAAG,GAAG,KAAK5B,EAAjB;IACA,OAAO4B,GAAG,CAAC8D,iBAAJ,EAAP;EACD;;EAEDC,aAAa,CAACrF,MAAD,EAAS;IACpB,KAAKsB,GAAL,CAASgE,iBAAT,CAA2BtF,MAA3B;IAEA,OAAO,CAAC,KAAKuF,QAAN,CAAP;EAED;;EAEDC,WAAW,CAACxF,MAAD,EAAS;IAClB,KAAKsB,GAAL,CAASmE,eAAT,CAAyBzF,MAAzB;EACD;;EAGD0F,aAAa,CAACC,KAAD,QAAoB;IAAA,IAAZ;MAACrF;IAAD,CAAY;IAC/BnB,MAAM,CAACuD,MAAM,CAACkD,QAAP,CAAgBtF,QAAhB,CAAD,CAAN;IACA,OAAO,KAAKyB,IAAL,CAAU,MAAM;MACrB,QAAQ4D,KAAR;QACE;UACE,OAAO,KAAKjG,EAAL,CAAQmG,qBAAR,CAA8BvF,QAA9B,EAAwCqF,KAAxC,CAAP;;QACF;UACE,OAAO,KAAKjG,EAAL,CAAQoG,eAAR,CAAwBxF,QAAxB,EAAkCqF,KAAlC,CAAP;MAJJ;IAMD,CAPM,CAAP;EAQD;;AArTqD"}