{"version":3,"file":"vertex-array.js","names":["ERR_ATTRIBUTE_TYPE","MULTI_LOCATION_ATTRIBUTE_REGEXP","DEPRECATIONS_V6","VertexArray","gl","opts","id","program","configuration","elements","elementsAccessor","values","accessors","unused","drawParams","buffer","attributes","vertexArrayObject","VertexArrayObject","stubRemovedMethods","initialize","Object","seal","delete","props","reset","bindOnUse","setProps","MAX_ATTRIBUTES","Array","fill","setAttributes","setElementBuffer","_updateDrawParams","assign","bind","locationOrName","value","_setAttribute","bindBuffer","elementBuffer","accessor","clearDrawParams","appAccessor","target","_resolveLocationAndAccessor","location","setBuffer","arrayValue","size","length","_normalizeConstantArrayValue","enable","Buffer","disableVertexAttribArray","handle","vertexAttribPointer","vertexCount","instanceCount","func","_setConstantAttributes","valueAccessor","INVALID_RESULT","_getAttributeIndex","name","Number","isFinite","log","once","accessInfo","_getAttributeInfo","currentAccessor","Accessor","resolve","type","assert","attributeName","getAttributeInfo","multiLocation","exec","locationOffset","getAttributeLocation","isArray","ArrayBuffer","isView","constant","setConstant","Error","elementCount","Math","max","_setConstantAttributeZero","_setConstantAttribute","isSupported","constantAttributeZero","getConstantBuffer","isIndexed","isInstanced","indexCount","Infinity","_updateDrawParamsForLocation","getElementCount","indexType","indexOffset","offset","divisor","getVertexCount","min","deprecated"],"sources":["../../../src/classes/vertex-array.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {log} from '@luma.gl/gltools';\nimport Accessor from './accessor';\nimport Buffer from './buffer';\nimport VertexArrayObject from './vertex-array-object';\nimport {assert} from '../utils/assert';\nimport {stubRemovedMethods} from '../utils/stub-methods';\n\nconst ERR_ATTRIBUTE_TYPE =\n  'VertexArray: attributes must be Buffers or constants (i.e. typed array)';\n\n// This is done to support mat type attributes.\n// See section \"Notes about setting mat type attributes\"\n// in vertex-array.md\nconst MULTI_LOCATION_ATTRIBUTE_REGEXP = /^(.+)__LOCATION_([0-9]+)$/;\n\nconst DEPRECATIONS_V6 = [\n  'setBuffers',\n  'setGeneric',\n  'clearBindings',\n  'setLocations',\n  'setGenericValues',\n  'setDivisor',\n  'enable',\n  'disable'\n];\n\nexport default class VertexArray {\n  constructor(gl, opts = {}) {\n    // Use program's id if program is supplied but no id is supplied\n    const id = opts.id || (opts.program && opts.program.id);\n    // super(gl, Object.assign({}, opts, {id}));\n\n    this.id = id;\n    this.gl = gl;\n    this.configuration = null;\n\n    // Extracted information\n    this.elements = null;\n    this.elementsAccessor = null;\n    this.values = null;\n    this.accessors = null;\n    this.unused = null;\n    this.drawParams = null;\n    this.buffer = null; // For attribute 0 on desktops, and created when unbinding buffers\n\n    this.attributes = {};\n\n    this.vertexArrayObject = new VertexArrayObject(gl);\n\n    // Issue errors when using removed methods\n    stubRemovedMethods(this, 'VertexArray', 'v6.0', DEPRECATIONS_V6);\n\n    this.initialize(opts);\n    Object.seal(this);\n  }\n\n  delete() {\n    if (this.buffer) {\n      this.buffer.delete();\n    }\n\n    this.vertexArrayObject.delete();\n  }\n\n  initialize(props = {}) {\n    this.reset();\n    this.configuration = null;\n    this.bindOnUse = false;\n    return this.setProps(props);\n  }\n\n  // Resets all attributes (to default valued constants)\n  reset() {\n    // this.vertexArrayObject.reset();\n\n    this.elements = null;\n    this.elementsAccessor = null;\n    const {MAX_ATTRIBUTES} = this.vertexArrayObject;\n    this.values = new Array(MAX_ATTRIBUTES).fill(null);\n    this.accessors = new Array(MAX_ATTRIBUTES).fill(null);\n    this.unused = {};\n\n    // Auto detects draw params\n    this.drawParams = null;\n\n    return this;\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('attributes' in props) {\n      this.setAttributes(props.attributes);\n    }\n    if ('elements' in props) {\n      this.setElementBuffer(props.elements);\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    return this;\n  }\n\n  // Automatically called if buffers changed through VertexArray API\n  clearDrawParams() {\n    this.drawParams = null;\n  }\n\n  getDrawParams() {\n    // Auto deduced draw parameters\n    this.drawParams = this.drawParams || this._updateDrawParams();\n\n    return this.drawParams;\n  }\n\n  // Set (bind) an array or map of vertex array buffers, either in numbered or named locations.\n  // For names that are not present in `location`, the supplied buffers will be ignored.\n  // if a single buffer of type GL.ELEMENT_ARRAY_BUFFER is present, it will be set as elements\n  //   Signatures:\n  //     {attributeName: buffer}\n  //     {attributeName: [buffer, accessor]}\n  //     {attributeName: (typed) array} => constant\n  setAttributes(attributes) {\n    Object.assign(this.attributes, attributes);\n    this.vertexArrayObject.bind(() => {\n      for (const locationOrName in attributes) {\n        const value = attributes[locationOrName];\n        this._setAttribute(locationOrName, value);\n      }\n      // Make sure we don't leave any bindings\n      this.gl.bindBuffer(GL.ARRAY_BUFFER, null);\n    });\n\n    return this;\n  }\n\n  // Set (bind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER. Constants not supported\n  setElementBuffer(elementBuffer = null, accessor = {}) {\n    this.elements = elementBuffer; // Save value for debugging\n    this.elementsAccessor = accessor;\n    this.clearDrawParams();\n    this.vertexArrayObject.setElementBuffer(elementBuffer, accessor);\n\n    return this;\n  }\n\n  // Set a location in vertex attributes array to a buffer\n  setBuffer(locationOrName, buffer, appAccessor = {}) {\n    // Check target\n    if (buffer.target === GL.ELEMENT_ARRAY_BUFFER) {\n      return this.setElementBuffer(buffer, appAccessor);\n    }\n\n    const {location, accessor} = this._resolveLocationAndAccessor(\n      locationOrName,\n      buffer,\n      buffer.accessor,\n      appAccessor\n    );\n\n    if (location >= 0) {\n      this.values[location] = buffer;\n      this.accessors[location] = accessor;\n      this.clearDrawParams();\n      this.vertexArrayObject.setBuffer(location, buffer, accessor);\n    }\n\n    return this;\n  }\n\n  // Set attribute to constant value (small typed array corresponding to one vertex' worth of data)\n  setConstant(locationOrName, arrayValue, appAccessor = {}) {\n    const {location, accessor} = this._resolveLocationAndAccessor(\n      locationOrName,\n      arrayValue,\n      // Ensure that size isn't taken from program for multi-column\n      // attributes\n      Object.assign({size: arrayValue.length}, appAccessor)\n    );\n\n    if (location >= 0) {\n      arrayValue = this.vertexArrayObject._normalizeConstantArrayValue(arrayValue);\n\n      this.values[location] = arrayValue;\n      this.accessors[location] = accessor;\n      this.clearDrawParams();\n\n      // NOTE: We set the actual constant value later on bind. We can't set the value now since\n      // constants are global and affect all other VertexArrays that have disabled attributes\n      // in the same location.\n      // We do disable the attribute which makes it use the global constant value at that location\n      this.vertexArrayObject.enable(location, false);\n    }\n\n    return this;\n  }\n\n  // Workaround for Chrome TransformFeedback binding issue\n  // If required, unbind temporarily to avoid conflicting with TransformFeedback\n  unbindBuffers() {\n    this.vertexArrayObject.bind(() => {\n      if (this.elements) {\n        this.vertexArrayObject.setElementBuffer(null);\n      }\n\n      // Chrome does not like buffers that are bound to several binding points,\n      // so we need to offer and unbind facility\n      // WebGL offers disabling, but no clear way to set a VertexArray buffer to `null`\n      // So we just bind all the attributes to the dummy \"attribute zero\" buffer\n      this.buffer = this.buffer || new Buffer(this.gl, {accessor: {size: 4}});\n\n      for (let location = 0; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++) {\n        if (this.values[location] instanceof Buffer) {\n          this.gl.disableVertexAttribArray(location);\n          this.gl.bindBuffer(GL.ARRAY_BUFFER, this.buffer.handle);\n          this.gl.vertexAttribPointer(location, 1, GL.FLOAT, false, 0, 0);\n        }\n      }\n    });\n    return this;\n  }\n\n  // Workaround for Chrome TransformFeedback binding issue\n  // If required, rebind rebind after temporary unbind\n  bindBuffers() {\n    this.vertexArrayObject.bind(() => {\n      if (this.elements) {\n        this.setElementBuffer(this.elements);\n      }\n\n      for (let location = 0; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++) {\n        const buffer = this.values[location];\n        if (buffer instanceof Buffer) {\n          this.setBuffer(location, buffer);\n        }\n      }\n    });\n    return this;\n  }\n\n  // Bind for use\n  // When a vertex array is about to be used, we must:\n  // - Set constant attributes (since these are stored on the context and reset on bind)\n  // - Check if we need to initialize the buffer\n  bindForDraw(vertexCount, instanceCount, func) {\n    let value;\n\n    this.vertexArrayObject.bind(() => {\n      // Make sure that any constant attributes are updated (stored on the context, not the VAO)\n      // Also handles attribute 0\n      this._setConstantAttributes(vertexCount, instanceCount);\n\n      value = func();\n    });\n\n    return value;\n  }\n\n  // PRIVATE\n\n  // Resolve locations and accessors\n  _resolveLocationAndAccessor(locationOrName, value, valueAccessor, appAccessor) {\n    const INVALID_RESULT = {\n      location: -1,\n      accessor: null\n    };\n\n    const {location, name} = this._getAttributeIndex(locationOrName);\n    if (!Number.isFinite(location) || location < 0) {\n      this.unused[locationOrName] = value;\n      log.once(3, () => `unused value ${locationOrName} in ${this.id}`)();\n      return INVALID_RESULT;\n    }\n\n    const accessInfo = this._getAttributeInfo(name || location);\n\n    // Attribute location wasn't directly found.\n    // Likely due to multi-location attributes (e.g. matrix)\n    if (!accessInfo) {\n      return INVALID_RESULT;\n    }\n\n    // Resolve the partial accessors into a final accessor\n    const currentAccessor = this.accessors[location] || {};\n    const accessor = Accessor.resolve(\n      accessInfo.accessor,\n      currentAccessor,\n      valueAccessor,\n      appAccessor\n    );\n\n    const {size, type} = accessor;\n    assert(Number.isFinite(size) && Number.isFinite(type));\n\n    return {location, accessor};\n  }\n\n  _getAttributeInfo(attributeName) {\n    return this.configuration && this.configuration.getAttributeInfo(attributeName);\n  }\n\n  _getAttributeIndex(locationOrName) {\n    const location = Number(locationOrName);\n    if (Number.isFinite(location)) {\n      return {location};\n    }\n\n    const multiLocation = MULTI_LOCATION_ATTRIBUTE_REGEXP.exec(locationOrName);\n    const name = multiLocation ? multiLocation[1] : locationOrName;\n    const locationOffset = multiLocation ? Number(multiLocation[2]) : 0;\n\n    if (this.configuration) {\n      return {\n        location: this.configuration.getAttributeLocation(name) + locationOffset,\n        name\n      };\n    }\n\n    return {location: -1};\n  }\n\n  _setAttribute(locationOrName, value) {\n    if (value instanceof Buffer) {\n      //  Signature: {attributeName: Buffer}\n      this.setBuffer(locationOrName, value);\n    } else if (Array.isArray(value) && value.length && value[0] instanceof Buffer) {\n      // Signature: {attributeName: [buffer, accessor]}\n      const buffer = value[0];\n      const accessor = value[1];\n      this.setBuffer(locationOrName, buffer, accessor);\n    } else if (ArrayBuffer.isView(value) || Array.isArray(value)) {\n      // Signature: {attributeName: constant}, constant == short (typed) array\n      const constant = value;\n      this.setConstant(locationOrName, constant);\n    } else if (value.buffer instanceof Buffer) {\n      // luma.gl v7: Support accessor objects with 'buffer' field\n      // for interleaved data\n      // Signature: {attributeName: {...accessor, buffer}}\n      const accessor = value;\n      this.setBuffer(locationOrName, accessor.buffer, accessor);\n    } else {\n      throw new Error(ERR_ATTRIBUTE_TYPE);\n    }\n  }\n\n  // Updates all constant attribute values (constants are used when vertex attributes are disabled).\n  // This needs to be done repeatedly since in contrast to buffer bindings,\n  // constants are stored on the WebGL context, not the VAO\n  _setConstantAttributes(vertexCount, instanceCount) {\n    // TODO - use accessor to determine what length to use\n    const elementCount = Math.max(vertexCount | 0, instanceCount | 0);\n    let constant = this.values[0];\n    if (ArrayBuffer.isView(constant)) {\n      this._setConstantAttributeZero(constant, elementCount);\n    }\n\n    for (let location = 1; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++) {\n      constant = this.values[location];\n      if (ArrayBuffer.isView(constant)) {\n        this._setConstantAttribute(location, constant);\n      }\n    }\n  }\n\n  _setConstantAttributeZero(constant, elementCount) {\n    if (VertexArrayObject.isSupported(this.gl, {constantAttributeZero: true})) {\n      this._setConstantAttribute(0, constant);\n      return;\n    }\n\n    // Get a dummy buffer populated with repeated constants\n    const buffer = this.vertexArrayObject.getConstantBuffer(elementCount, constant);\n\n    // Set the buffer on location 0\n    this.vertexArrayObject.setBuffer(0, buffer, this.accessors[0]);\n  }\n\n  _setConstantAttribute(location, constant) {\n    VertexArrayObject.setConstant(this.gl, location, constant);\n  }\n\n  // Walks the buffers and updates draw parameters\n  _updateDrawParams() {\n    const drawParams = {\n      isIndexed: false,\n      isInstanced: false,\n      indexCount: Infinity,\n      vertexCount: Infinity,\n      instanceCount: Infinity\n    };\n\n    for (let location = 0; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++) {\n      this._updateDrawParamsForLocation(drawParams, location);\n    }\n\n    if (this.elements) {\n      // indexing is autodetected - buffer with target GL.ELEMENT_ARRAY_BUFFER\n      // index type is saved for drawElement calls\n      drawParams.elementCount = this.elements.getElementCount(this.elements.accessor);\n      drawParams.isIndexed = true;\n      drawParams.indexType = this.elementsAccessor.type || this.elements.accessor.type;\n      drawParams.indexOffset = this.elementsAccessor.offset || 0;\n    }\n\n    // Post-calculation checks\n    if (drawParams.indexCount === Infinity) {\n      drawParams.indexCount = 0;\n    }\n    if (drawParams.vertexCount === Infinity) {\n      drawParams.vertexCount = 0;\n    }\n    if (drawParams.instanceCount === Infinity) {\n      drawParams.instanceCount = 0;\n    }\n\n    return drawParams;\n  }\n\n  _updateDrawParamsForLocation(drawParams, location) {\n    const value = this.values[location];\n    const accessor = this.accessors[location];\n\n    if (!value) {\n      return;\n    }\n\n    // Check if instanced (whether buffer or constant)\n    const {divisor} = accessor;\n    const isInstanced = divisor > 0;\n    drawParams.isInstanced = drawParams.isInstanced || isInstanced;\n\n    if (value instanceof Buffer) {\n      const buffer = value;\n\n      if (isInstanced) {\n        // instance attribute\n        const instanceCount = buffer.getVertexCount(accessor);\n        drawParams.instanceCount = Math.min(drawParams.instanceCount, instanceCount);\n      } else {\n        // normal attribute\n        const vertexCount = buffer.getVertexCount(accessor);\n        drawParams.vertexCount = Math.min(drawParams.vertexCount, vertexCount);\n      }\n    }\n  }\n\n  // DEPRECATED in v6.x - but not warnings not properly implemented\n\n  setElements(elementBuffer = null, accessor = {}) {\n    log.deprecated('setElements', 'setElementBuffer')();\n    return this.setElementBuffer(elementBuffer, accessor);\n  }\n}\n"],"mappings":"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"}