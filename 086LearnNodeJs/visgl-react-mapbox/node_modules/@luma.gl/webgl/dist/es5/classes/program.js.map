{"version":3,"file":"program.js","names":["LOG_PROGRAM_PERF_PRIORITY","GL_SEPARATE_ATTRIBS","V6_DEPRECATED_METHODS","Program","gl","props","stubRemovedMethods","_isCached","initialize","Object","seal","_setId","id","hash","vs","fs","varyings","bufferMode","VertexShader","source","FragmentShader","assert","uniforms","_textureUniforms","length","assertWebGL2Context","gl2","transformFeedbackVaryings","handle","_compileAndLink","_readUniformLocationsFromLinkedProgram","configuration","ProgramConfiguration","setProps","options","setUniforms","logPriority","drawMode","vertexCount","offset","start","end","isIndexed","indexType","instanceCount","isInstanced","vertexArray","transformFeedback","framebuffer","parameters","samplers","log","deprecated","priority","fb","message","getKey","useProgram","_areTexturesRenderable","bindForDraw","undefined","assign","primitiveMode","getPrimitiveDrawMode","begin","_bindTextures","withParameters","drawElementsInstanced","isWebGL2","isNaN","drawRangeElements","drawElements","drawArraysInstanced","drawArrays","checkUniformValues","_uniformSetters","uniformName","uniform","uniformSetter","value","textureUpdate","Framebuffer","texture","Texture","textureIndex","_textureIndexCounter","bind","copyUniform","texturesRenderable","update","loaded","createProgram","deleteProgram","shaderHandles","getAttachedShaders","opts","shaderHandle","type","getShaderParameter","pname","getProgramParameter","programName","_getName","uid","getName","replace","attachShader","time","linkProgram","timeEnd","debug","level","linked","Error","getProgramInfoLog","validateProgram","validated","_uniformCount","_getParameter","i","info","getActiveUniform","parseUniformName","name","location","getUniformLocation","getUniformSetter","size","l","uniformIndices","getActiveUniforms","blockName","getUniformBlockIndex","blockIndex","getActiveUniformBlockParameter","blockBinding","uniformBlockBinding","Resource","Symbol","toStringTag"],"sources":["../../../src/classes/program.js"],"sourcesContent":["import GL from '@luma.gl/constants';\n\nimport Resource from './resource';\nimport Texture from './texture';\nimport Framebuffer from './framebuffer';\nimport {parseUniformName, getUniformSetter} from './uniforms';\nimport {VertexShader, FragmentShader} from './shader';\nimport ProgramConfiguration from './program-configuration';\nimport {copyUniform, checkUniformValues} from './uniforms';\n\nimport {isWebGL2, assertWebGL2Context, withParameters, log} from '@luma.gl/gltools';\nimport {getKey} from '../webgl-utils/constants-to-keys';\nimport {getPrimitiveDrawMode} from '../webgl-utils/attribute-utils';\nimport {assert} from '../utils/assert';\nimport {uid} from '../utils/utils';\n\nconst LOG_PROGRAM_PERF_PRIORITY = 4;\n\nconst GL_SEPARATE_ATTRIBS = 0x8c8d;\n\nconst V6_DEPRECATED_METHODS = [\n  'setVertexArray',\n  'setAttributes',\n  'setBuffers',\n  'unsetBuffers',\n\n  'use',\n  'getUniformCount',\n  'getUniformInfo',\n  'getUniformLocation',\n  'getUniformValue',\n\n  'getVarying',\n  'getFragDataLocation',\n  'getAttachedShaders',\n  'getAttributeCount',\n  'getAttributeLocation',\n  'getAttributeInfo'\n];\n\nexport default class Program extends Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Program';\n  }\n  constructor(gl, props = {}) {\n    super(gl, props);\n\n    this.stubRemovedMethods('Program', 'v6.0', V6_DEPRECATED_METHODS);\n\n    // Experimental flag to avoid deleting Program object while it is cached\n    this._isCached = false;\n\n    this.initialize(props);\n\n    Object.seal(this);\n\n    this._setId(props.id);\n  }\n\n  initialize(props = {}) {\n    const {hash, vs, fs, varyings, bufferMode = GL_SEPARATE_ATTRIBS} = props;\n\n    this.hash = hash || ''; // Used by ProgramManager\n\n    // Create shaders if needed\n    this.vs =\n      typeof vs === 'string' ? new VertexShader(this.gl, {id: `${props.id}-vs`, source: vs}) : vs;\n    this.fs =\n      typeof fs === 'string' ? new FragmentShader(this.gl, {id: `${props.id}-fs`, source: fs}) : fs;\n    assert(this.vs instanceof VertexShader);\n    assert(this.fs instanceof FragmentShader);\n\n    // uniforms\n    this.uniforms = {};\n\n    this._textureUniforms = {};\n\n    // Setup varyings if supplied\n    if (varyings && varyings.length > 0) {\n      assertWebGL2Context(this.gl);\n      this.varyings = varyings;\n      this.gl2.transformFeedbackVaryings(this.handle, varyings, bufferMode);\n    }\n\n    this._compileAndLink();\n    this._readUniformLocationsFromLinkedProgram();\n    this.configuration = new ProgramConfiguration(this);\n\n    return this.setProps(props);\n  }\n\n  delete(options = {}) {\n    if (this._isCached) {\n      // This object is cached, do not delete\n      return this;\n    }\n    return super.delete(options);\n  }\n\n  setProps(props) {\n    if ('uniforms' in props) {\n      this.setUniforms(props.uniforms);\n    }\n    return this;\n  }\n\n  // A good thing about the WebGL API is that there are so many ways to draw things ;)\n  // This function unifies those ways into a single call using common parameters with sane defaults\n  draw({\n    logPriority, // Probe log priority, enables Model to do more integrated logging\n\n    drawMode = GL.TRIANGLES,\n    vertexCount,\n    offset = 0,\n    start,\n    end,\n    isIndexed = false,\n    indexType = GL.UNSIGNED_SHORT,\n    instanceCount = 0,\n    isInstanced = instanceCount > 0,\n\n    vertexArray = null,\n    transformFeedback,\n    framebuffer,\n    parameters = {},\n\n    // Deprecated\n    uniforms,\n    samplers\n  }) {\n    if (uniforms || samplers) {\n      // DEPRECATED: v7.0 (deprecated earlier but warning not properly implemented)\n      log.deprecated('Program.draw({uniforms})', 'Program.setUniforms(uniforms)')();\n      this.setUniforms(uniforms || {});\n    }\n\n    if (log.priority >= logPriority) {\n      const fb = framebuffer ? framebuffer.id : 'default';\n      const message =\n        `mode=${getKey(this.gl, drawMode)} verts=${vertexCount} ` +\n        `instances=${instanceCount} indexType=${getKey(this.gl, indexType)} ` +\n        `isInstanced=${isInstanced} isIndexed=${isIndexed} ` +\n        `Framebuffer=${fb}`;\n      log.log(logPriority, message)();\n    }\n\n    // TODO - move vertex array binding and transform feedback binding to withParameters?\n    assert(vertexArray);\n\n    this.gl.useProgram(this.handle);\n\n    if (\n      // Note: async textures set as uniforms might still be loading.\n      // Now that all uniforms have been updated, check if any texture\n      // in the uniforms is not yet initialized, then we don't draw\n      !this._areTexturesRenderable() ||\n      // Avoid WebGL draw call when not rendering any data\n      vertexCount === 0 ||\n      (isInstanced && instanceCount === 0)\n    ) {\n      return false;\n    }\n\n    vertexArray.bindForDraw(vertexCount, instanceCount, () => {\n      if (framebuffer !== undefined) {\n        parameters = Object.assign({}, parameters, {framebuffer});\n      }\n\n      if (transformFeedback) {\n        const primitiveMode = getPrimitiveDrawMode(drawMode);\n        transformFeedback.begin(primitiveMode);\n      }\n\n      this._bindTextures();\n\n      withParameters(this.gl, parameters, () => {\n        // TODO - Use polyfilled WebGL2RenderingContext instead of ANGLE extension\n        if (isIndexed && isInstanced) {\n          this.gl2.drawElementsInstanced(drawMode, vertexCount, indexType, offset, instanceCount);\n        } else if (isIndexed && isWebGL2(this.gl) && !isNaN(start) && !isNaN(end)) {\n          this.gl2.drawRangeElements(drawMode, start, end, vertexCount, indexType, offset);\n        } else if (isIndexed) {\n          this.gl.drawElements(drawMode, vertexCount, indexType, offset);\n        } else if (isInstanced) {\n          this.gl2.drawArraysInstanced(drawMode, offset, vertexCount, instanceCount);\n        } else {\n          this.gl.drawArrays(drawMode, offset, vertexCount);\n        }\n      });\n\n      if (transformFeedback) {\n        transformFeedback.end();\n      }\n    });\n\n    return true;\n  }\n\n  setUniforms(uniforms = {}) {\n    if (log.priority >= 2) {\n      checkUniformValues(uniforms, this.id, this._uniformSetters);\n    }\n\n    this.gl.useProgram(this.handle);\n\n    for (const uniformName in uniforms) {\n      const uniform = uniforms[uniformName];\n      const uniformSetter = this._uniformSetters[uniformName];\n\n      if (uniformSetter) {\n        let value = uniform;\n        let textureUpdate = false;\n\n        if (value instanceof Framebuffer) {\n          value = value.texture;\n        }\n        if (value instanceof Texture) {\n          textureUpdate = this.uniforms[uniformName] !== uniform;\n\n          if (textureUpdate) {\n            // eslint-disable-next-line max-depth\n            if (uniformSetter.textureIndex === undefined) {\n              uniformSetter.textureIndex = this._textureIndexCounter++;\n            }\n\n            // Bind texture to index\n            const texture = value;\n            const {textureIndex} = uniformSetter;\n\n            texture.bind(textureIndex);\n            value = textureIndex;\n\n            this._textureUniforms[uniformName] = texture;\n          } else {\n            value = uniformSetter.textureIndex;\n          }\n        } else if (this._textureUniforms[uniformName]) {\n          delete this._textureUniforms[uniformName];\n        }\n\n        // NOTE(Tarek): uniformSetter returns whether\n        //   value had to be updated or not.\n        if (uniformSetter(value) || textureUpdate) {\n          copyUniform(this.uniforms, uniformName, uniform);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  // Checks if all texture-values uniforms are renderable (i.e. loaded)\n  // Update a texture if needed (e.g. from video)\n  // Note: This is currently done before every draw call\n  _areTexturesRenderable() {\n    let texturesRenderable = true;\n\n    for (const uniformName in this._textureUniforms) {\n      const texture = this._textureUniforms[uniformName];\n      texture.update();\n      texturesRenderable = texturesRenderable && texture.loaded;\n    }\n\n    return texturesRenderable;\n  }\n\n  // Binds textures\n  // Note: This is currently done before every draw call\n  _bindTextures() {\n    for (const uniformName in this._textureUniforms) {\n      const textureIndex = this._uniformSetters[uniformName].textureIndex;\n      this._textureUniforms[uniformName].bind(textureIndex);\n    }\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createProgram();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteProgram(this.handle);\n  }\n\n  // Extract opts needed to initialize a `Program` from an independently created WebGLProgram handle\n  _getOptionsFromHandle(handle) {\n    const shaderHandles = this.gl.getAttachedShaders(handle);\n    const opts = {};\n    for (const shaderHandle of shaderHandles) {\n      const type = this.gl.getShaderParameter(this.handle, GL.SHADER_TYPE);\n      switch (type) {\n        case GL.VERTEX_SHADER:\n          // @ts-ignore\n          opts.vs = new VertexShader({handle: shaderHandle});\n          break;\n        case GL.FRAGMENT_SHADER:\n          // @ts-ignore\n          opts.fs = new FragmentShader({handle: shaderHandle});\n          break;\n        default:\n      }\n    }\n    return opts;\n  }\n\n  _getParameter(pname) {\n    return this.gl.getProgramParameter(this.handle, pname);\n  }\n\n  // If program is not named, name it after shader names\n  // TODO - this.id will already have been initialized\n  _setId(id) {\n    if (!id) {\n      const programName = this._getName();\n      this.id = uid(programName);\n    }\n  }\n\n  // Generate a default name for the program based on names of the shaders\n  _getName() {\n    let programName = this.vs.getName() || this.fs.getName();\n    programName = programName.replace(/shader/i, '');\n    programName = programName ? `${programName}-program` : 'program';\n    return programName;\n  }\n\n  _compileAndLink() {\n    const {gl} = this;\n    gl.attachShader(this.handle, this.vs.handle);\n    gl.attachShader(this.handle, this.fs.handle);\n    log.time(LOG_PROGRAM_PERF_PRIORITY, `linkProgram for ${this._getName()}`)();\n    gl.linkProgram(this.handle);\n    log.timeEnd(LOG_PROGRAM_PERF_PRIORITY, `linkProgram for ${this._getName()}`)();\n\n    // Avoid checking program linking error in production\n    // @ts-ignore\n    if (gl.debug || log.level > 0) {\n      const linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);\n      if (!linked) {\n        throw new Error(`Error linking: ${gl.getProgramInfoLog(this.handle)}`);\n      }\n\n      gl.validateProgram(this.handle);\n      const validated = gl.getProgramParameter(this.handle, gl.VALIDATE_STATUS);\n      if (!validated) {\n        throw new Error(`Error validating: ${gl.getProgramInfoLog(this.handle)}`);\n      }\n    }\n  }\n\n  // query uniform locations and build name to setter map.\n  // TODO - This overlaps with ProgramConfiguration?\n  _readUniformLocationsFromLinkedProgram() {\n    const {gl} = this;\n    this._uniformSetters = {};\n    this._uniformCount = this._getParameter(GL.ACTIVE_UNIFORMS);\n    for (let i = 0; i < this._uniformCount; i++) {\n      const info = this.gl.getActiveUniform(this.handle, i);\n      const {name} = parseUniformName(info.name);\n      let location = gl.getUniformLocation(this.handle, name);\n      this._uniformSetters[name] = getUniformSetter(gl, location, info);\n      if (info.size > 1) {\n        for (let l = 0; l < info.size; l++) {\n          location = gl.getUniformLocation(this.handle, `${name}[${l}]`);\n          this._uniformSetters[`${name}[${l}]`] = getUniformSetter(gl, location, info);\n        }\n      }\n    }\n    this._textureIndexCounter = 0;\n  }\n\n  // TO BE REMOVED in v7?\n\n  // Rretrieves information about active uniforms identifed by their indices (`uniformIndices`)\n  // https://\n  // developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/getActiveUniforms\n  getActiveUniforms(uniformIndices, pname) {\n    return this.gl2.getActiveUniforms(this.handle, uniformIndices, pname);\n  }\n\n  // Retrieves the index of a uniform block\n  getUniformBlockIndex(blockName) {\n    return this.gl2.getUniformBlockIndex(this.handle, blockName);\n  }\n\n  // Retrieves information about an active uniform block (`blockIndex`)\n  // https://\n  // developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockParameter\n  getActiveUniformBlockParameter(blockIndex, pname) {\n    return this.gl2.getActiveUniformBlockParameter(this.handle, blockIndex, pname);\n  }\n\n  // Binds a uniform block (`blockIndex`) to a specific binding point (`blockBinding`)\n  uniformBlockBinding(blockIndex, blockBinding) {\n    this.gl2.uniformBlockBinding(this.handle, blockIndex, blockBinding);\n  }\n}\n"],"mappings":"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"}