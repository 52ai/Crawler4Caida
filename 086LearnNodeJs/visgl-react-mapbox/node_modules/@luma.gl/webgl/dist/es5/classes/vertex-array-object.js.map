{"version":3,"file":"vertex-array-object.js","names":["ERR_ELEMENTS","VertexArrayObject","gl","opts","id","program","Object","assign","buffer","bufferValue","isDefaultArray","gl2","initialize","seal","delete","getMaxAttributes","props","setProps","elementBuffer","assert","target","bind","bindBuffer","handle","location","accessor","setElementBuffer","size","type","stride","offset","normalized","integer","divisor","Number","isWebGL2","vertexAttribIPointer","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","enable","disablingAttributeZero","isSupported","constantAttributeZero","disableVertexAttribArray","elementCount","value","constantValue","_normalizeConstantArrayValue","byteLength","length","updateNeeded","Buffer","reallocate","_compareConstantArrayValues","typedArray","getScratchArray","constructor","fillArray","source","start","count","subData","arrayValue","Array","isArray","Float32Array","v1","v2","i","createVertexArray","deleteVertexArray","elements","bindVertexArray","pname","isFinite","getVertexAttribOffset","getVertexAttrib","options","getBrowser","luma","defaultVertexArray","MAX_ATTRIBUTES","getParameter","array","_setConstantFloatArray","Int32Array","_setConstantIntArray","Uint32Array","_setConstantUintArray","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttribI1iv","vertexAttribI2iv","vertexAttribI3iv","vertexAttribI4iv","vertexAttribI1uiv","vertexAttribI2uiv","vertexAttribI3uiv","vertexAttribI4uiv","Resource","Symbol","toStringTag"],"sources":["../../../src/classes/vertex-array-object.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport {isWebGL2} from '@luma.gl/gltools';\nimport {getScratchArray, fillArray} from '../utils/array-utils-flat';\nimport {assert} from '../utils/assert';\nimport {getBrowser} from '@probe.gl/env';\n\nconst ERR_ELEMENTS = 'elements must be GL.ELEMENT_ARRAY_BUFFER';\n\nexport default class VertexArrayObject extends Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'VertexArrayObject';\n  }\n  static isSupported(gl, options = {}) {\n    // Attribute 0 can not be disable on most desktop OpenGL based browsers\n    // and on iOS Safari browser.\n    if (options.constantAttributeZero) {\n      return isWebGL2(gl) || getBrowser() === 'Chrome';\n    }\n\n    // Whether additional objects can be created\n    return true;\n  }\n\n  // Returns the global (null) vertex array object. Exists even when no extension available\n  // TODO(Tarek): VAOs are now polyfilled. Deprecate this in 9.0\n  static getDefaultArray(gl) {\n    gl.luma = gl.luma || {};\n    if (!gl.luma.defaultVertexArray) {\n      gl.luma.defaultVertexArray = new VertexArrayObject(gl, {handle: null, isDefaultArray: true});\n    }\n    return gl.luma.defaultVertexArray;\n  }\n\n  static getMaxAttributes(gl) {\n    // TODO - should be cached per context\n    // @ts-ignore\n    VertexArrayObject.MAX_ATTRIBUTES =\n      // @ts-ignore\n      VertexArrayObject.MAX_ATTRIBUTES || gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    // @ts-ignore\n    return VertexArrayObject.MAX_ATTRIBUTES;\n  }\n\n  // Note: Constants are stored globally on the WebGL context, not the VAO\n  // So they need to be updated before every render\n  // TODO - use known type (in configuration or passed in) to allow non-typed arrays?\n  // TODO - remember/cache values to avoid setting them unnecessarily?\n  static setConstant(gl, location, array) {\n    switch (array.constructor) {\n      case Float32Array:\n        VertexArrayObject._setConstantFloatArray(gl, location, array);\n        break;\n      case Int32Array:\n        VertexArrayObject._setConstantIntArray(gl, location, array);\n        break;\n      case Uint32Array:\n        VertexArrayObject._setConstantUintArray(gl, location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  // Create a VertexArray\n  constructor(gl, opts = {}) {\n    // Use program's id if program but no id is supplied\n    const id = opts.id || (opts.program && opts.program.id);\n    super(gl, Object.assign({}, opts, {id}));\n\n    this.buffer = null;\n    this.bufferValue = null;\n    this.isDefaultArray = opts.isDefaultArray || false;\n\n    /** @type {WebGL2RenderingContext} */\n    this.gl2 = gl;\n\n    this.initialize(opts);\n\n    Object.seal(this);\n  }\n\n  delete() {\n    super.delete();\n    if (this.buffer) {\n      this.buffer.delete();\n    }\n    return this;\n  }\n\n  get MAX_ATTRIBUTES() {\n    return VertexArrayObject.getMaxAttributes(this.gl);\n  }\n\n  initialize(props = {}) {\n    return this.setProps(props);\n  }\n\n  setProps(props) {\n    // TODO: decide which props should be supported\n    return this;\n  }\n\n  // Set (bind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER. Constants not supported\n  setElementBuffer(elementBuffer = null, opts = {}) {\n    assert(!elementBuffer || elementBuffer.target === GL.ELEMENT_ARRAY_BUFFER, ERR_ELEMENTS);\n\n    // The GL.ELEMENT_ARRAY_BUFFER_BINDING is stored on the VertexArrayObject...\n    this.bind(() => {\n      this.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, elementBuffer ? elementBuffer.handle : null);\n    });\n\n    return this;\n  }\n\n  // Set a location in vertex attributes array to a bufferk, enables the location, sets divisor\n  setBuffer(location, buffer, accessor) {\n    // Check target\n    if (buffer.target === GL.ELEMENT_ARRAY_BUFFER) {\n      return this.setElementBuffer(buffer, accessor);\n    }\n\n    const {size, type, stride, offset, normalized, integer, divisor} = accessor;\n\n    const {gl, gl2} = this;\n    location = Number(location);\n\n    this.bind(() => {\n      // A non-zero buffer object must be bound to the GL_ARRAY_BUFFER target\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer.handle);\n\n      // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n      if (integer) {\n        assert(isWebGL2(gl));\n        gl2.vertexAttribIPointer(location, size, type, stride, offset);\n      } else {\n        // Attaches ARRAY_BUFFER with specified buffer format to location\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n      }\n      gl.enableVertexAttribArray(location);\n      gl2.vertexAttribDivisor(location, divisor || 0);\n\n      // NOTE We don't unbind buffer here, typically another buffer will be bound just after\n    });\n\n    return this;\n  }\n\n  // Enabling an attribute location makes it reference the currently bound buffer\n  // Disabling an attribute location makes it reference the global constant value\n  // TODO - handle single values for size 1 attributes?\n  // TODO - convert classic arrays based on known type?\n  enable(location, enable = true) {\n    // Attribute 0 cannot be disabled in most desktop OpenGL based browsers\n    const disablingAttributeZero =\n      !enable &&\n      location === 0 &&\n      !VertexArrayObject.isSupported(this.gl, {constantAttributeZero: true});\n\n    if (!disablingAttributeZero) {\n      location = Number(location);\n      this.bind(\n        () =>\n          enable\n            ? this.gl.enableVertexAttribArray(location)\n            : this.gl.disableVertexAttribArray(location)\n      );\n    }\n    return this;\n  }\n\n  // Provide a means to create a buffer that is equivalent to a constant.\n  // NOTE: Desktop OpenGL cannot disable attribute 0.\n  // https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-\n  // this-has-significant-performance-penalt\n  getConstantBuffer(elementCount, value) {\n    // Create buffer only when needed, and reuse it (avoids inflating buffer creation statistics)\n\n    const constantValue = this._normalizeConstantArrayValue(value);\n\n    const byteLength = constantValue.byteLength * elementCount;\n    const length = constantValue.length * elementCount;\n\n    let updateNeeded = !this.buffer;\n\n    this.buffer = this.buffer || new Buffer(this.gl, byteLength);\n    updateNeeded = updateNeeded || this.buffer.reallocate(byteLength);\n\n    // Reallocate and update contents if needed\n    updateNeeded =\n      updateNeeded || !this._compareConstantArrayValues(constantValue, this.bufferValue);\n\n    if (updateNeeded) {\n      // Create a typed array that is big enough, and fill it with the required data\n      const typedArray = getScratchArray(value.constructor, length);\n      fillArray({target: typedArray, source: constantValue, start: 0, count: length});\n      this.buffer.subData(typedArray);\n      this.bufferValue = value;\n    }\n\n    return this.buffer;\n  }\n\n  // PRIVATE\n\n  // TODO - convert Arrays based on known type? (read type from accessor, don't assume Float32Array)\n  // TODO - handle single values for size 1 attributes?\n  _normalizeConstantArrayValue(arrayValue) {\n    if (Array.isArray(arrayValue)) {\n      return new Float32Array(arrayValue);\n    }\n    return arrayValue;\n  }\n\n  _compareConstantArrayValues(v1, v2) {\n    if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n      return false;\n    }\n    for (let i = 0; i < v1.length; ++i) {\n      if (v1[i] !== v2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static _setConstantFloatArray(gl, location, array) {\n    switch (array.length) {\n      case 1:\n        gl.vertexAttrib1fv(location, array);\n        break;\n      case 2:\n        gl.vertexAttrib2fv(location, array);\n        break;\n      case 3:\n        gl.vertexAttrib3fv(location, array);\n        break;\n      case 4:\n        gl.vertexAttrib4fv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  static _setConstantIntArray(gl, location, array) {\n    assert(isWebGL2(gl));\n    switch (array.length) {\n      case 1:\n        gl.vertexAttribI1iv(location, array);\n        break;\n      case 2:\n        gl.vertexAttribI2iv(location, array);\n        break;\n      case 3:\n        gl.vertexAttribI3iv(location, array);\n        break;\n      case 4:\n        gl.vertexAttribI4iv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  static _setConstantUintArray(gl, location, array) {\n    assert(isWebGL2(gl));\n    switch (array.length) {\n      case 1:\n        gl.vertexAttribI1uiv(location, array);\n        break;\n      case 2:\n        gl.vertexAttribI2uiv(location, array);\n        break;\n      case 3:\n        gl.vertexAttribI3uiv(location, array);\n        break;\n      case 4:\n        gl.vertexAttribI4uiv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  // RESOURCE IMPLEMENTATION\n\n  _createHandle() {\n    /** @type {WebGL2RenderingContext} */\n    // @ts-ignore\n    const gl2 = this.gl;\n    return gl2.createVertexArray();\n  }\n\n  _deleteHandle(handle) {\n    this.gl2.deleteVertexArray(handle);\n    // @ts-ignore\n    return [this.elements];\n    // return [this.elements, ...this.buffers];\n  }\n\n  _bindHandle(handle) {\n    this.gl2.bindVertexArray(handle);\n  }\n\n  // Generic getter for information about a vertex attribute at a given position\n  _getParameter(pname, {location}) {\n    assert(Number.isFinite(location));\n    return this.bind(() => {\n      switch (pname) {\n        case GL.VERTEX_ATTRIB_ARRAY_POINTER:\n          return this.gl.getVertexAttribOffset(location, pname);\n        default:\n          return this.gl.getVertexAttrib(location, pname);\n      }\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG,0CAArB;;IAEqBC,iB;;;;;EAyDnB,2BAAYC,EAAZ,EAA2B;IAAA;;IAAA,IAAXC,IAAW,uEAAJ,EAAI;IAAA;IAEzB,IAAMC,EAAE,GAAGD,IAAI,CAACC,EAAL,IAAYD,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACE,OAAL,CAAaD,EAApD;IACA,0BAAMF,EAAN,EAAUI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;MAACC,EAAE,EAAFA;IAAD,CAAxB,CAAV;IAEA,MAAKI,MAAL,GAAc,IAAd;IACA,MAAKC,WAAL,GAAmB,IAAnB;IACA,MAAKC,cAAL,GAAsBP,IAAI,CAACO,cAAL,IAAuB,KAA7C;IAGA,MAAKC,GAAL,GAAWT,EAAX;;IAEA,MAAKU,UAAL,CAAgBT,IAAhB;;IAEAG,MAAM,CAACO,IAAP;IAdyB;EAe1B;;;;SAtED,eAA2B;MACzB,OAAO,mBAAP;IACD;;;WAsED,mBAAS;MACP;;MACA,IAAI,KAAKL,MAAT,EAAiB;QACf,KAAKA,MAAL,CAAYM,MAAZ;MACD;;MACD,OAAO,IAAP;IACD;;;SAED,eAAqB;MACnB,OAAOb,iBAAiB,CAACc,gBAAlB,CAAmC,KAAKb,EAAxC,CAAP;IACD;;;WAED,sBAAuB;MAAA,IAAZc,KAAY,uEAAJ,EAAI;MACrB,OAAO,KAAKC,QAAL,CAAcD,KAAd,CAAP;IACD;;;WAED,kBAASA,KAAT,EAAgB;MAEd,OAAO,IAAP;IACD;;;WAID,4BAAkD;MAAA;;MAAA,IAAjCE,aAAiC,uEAAjB,IAAiB;MAAA,IAAXf,IAAW,uEAAJ,EAAI;MAChD,IAAAgB,cAAA,EAAO,CAACD,aAAD,IAAkBA,aAAa,CAACE,MAAd,UAAzB,EAA2EpB,YAA3E;MAGA,KAAKqB,IAAL,CAAU,YAAM;QACd,MAAI,CAACnB,EAAL,CAAQoB,UAAR,QAA4CJ,aAAa,GAAGA,aAAa,CAACK,MAAjB,GAA0B,IAAnF;MACD,CAFD;MAIA,OAAO,IAAP;IACD;;;WAGD,mBAAUC,QAAV,EAAoBhB,MAApB,EAA4BiB,QAA5B,EAAsC;MAEpC,IAAIjB,MAAM,CAACY,MAAP,UAAJ,EAA+C;QAC7C,OAAO,KAAKM,gBAAL,CAAsBlB,MAAtB,EAA8BiB,QAA9B,CAAP;MACD;;MAED,IAAOE,IAAP,GAAmEF,QAAnE,CAAOE,IAAP;MAAA,IAAaC,IAAb,GAAmEH,QAAnE,CAAaG,IAAb;MAAA,IAAmBC,MAAnB,GAAmEJ,QAAnE,CAAmBI,MAAnB;MAAA,IAA2BC,MAA3B,GAAmEL,QAAnE,CAA2BK,MAA3B;MAAA,IAAmCC,UAAnC,GAAmEN,QAAnE,CAAmCM,UAAnC;MAAA,IAA+CC,OAA/C,GAAmEP,QAAnE,CAA+CO,OAA/C;MAAA,IAAwDC,OAAxD,GAAmER,QAAnE,CAAwDQ,OAAxD;MAEA,IAAO/B,EAAP,GAAkB,IAAlB,CAAOA,EAAP;MAAA,IAAWS,GAAX,GAAkB,IAAlB,CAAWA,GAAX;MACAa,QAAQ,GAAGU,MAAM,CAACV,QAAD,CAAjB;MAEA,KAAKH,IAAL,CAAU,YAAM;QAEdnB,EAAE,CAACoB,UAAH,QAA+Bd,MAAM,CAACe,MAAtC;;QAGA,IAAIS,OAAJ,EAAa;UACX,IAAAb,cAAA,EAAO,IAAAgB,iBAAA,EAASjC,EAAT,CAAP;UACAS,GAAG,CAACyB,oBAAJ,CAAyBZ,QAAzB,EAAmCG,IAAnC,EAAyCC,IAAzC,EAA+CC,MAA/C,EAAuDC,MAAvD;QACD,CAHD,MAGO;UAEL5B,EAAE,CAACmC,mBAAH,CAAuBb,QAAvB,EAAiCG,IAAjC,EAAuCC,IAAvC,EAA6CG,UAA7C,EAAyDF,MAAzD,EAAiEC,MAAjE;QACD;;QACD5B,EAAE,CAACoC,uBAAH,CAA2Bd,QAA3B;QACAb,GAAG,CAAC4B,mBAAJ,CAAwBf,QAAxB,EAAkCS,OAAO,IAAI,CAA7C;MAGD,CAhBD;MAkBA,OAAO,IAAP;IACD;;;WAMD,gBAAOT,QAAP,EAAgC;MAAA;;MAAA,IAAfgB,OAAe,uEAAN,IAAM;;MAE9B,IAAMC,sBAAsB,GAC1B,CAACD,OAAD,IACAhB,QAAQ,KAAK,CADb,IAEA,CAACvB,iBAAiB,CAACyC,WAAlB,CAA8B,KAAKxC,EAAnC,EAAuC;QAACyC,qBAAqB,EAAE;MAAxB,CAAvC,CAHH;;MAKA,IAAI,CAACF,sBAAL,EAA6B;QAC3BjB,QAAQ,GAAGU,MAAM,CAACV,QAAD,CAAjB;QACA,KAAKH,IAAL,CACE;UAAA,OACEmB,OAAM,GACF,MAAI,CAACtC,EAAL,CAAQoC,uBAAR,CAAgCd,QAAhC,CADE,GAEF,MAAI,CAACtB,EAAL,CAAQ0C,wBAAR,CAAiCpB,QAAjC,CAHN;QAAA,CADF;MAMD;;MACD,OAAO,IAAP;IACD;;;WAMD,2BAAkBqB,YAAlB,EAAgCC,KAAhC,EAAuC;MAGrC,IAAMC,aAAa,GAAG,KAAKC,4BAAL,CAAkCF,KAAlC,CAAtB;;MAEA,IAAMG,UAAU,GAAGF,aAAa,CAACE,UAAd,GAA2BJ,YAA9C;MACA,IAAMK,MAAM,GAAGH,aAAa,CAACG,MAAd,GAAuBL,YAAtC;MAEA,IAAIM,YAAY,GAAG,CAAC,KAAK3C,MAAzB;MAEA,KAAKA,MAAL,GAAc,KAAKA,MAAL,IAAe,IAAI4C,eAAJ,CAAW,KAAKlD,EAAhB,EAAoB+C,UAApB,CAA7B;MACAE,YAAY,GAAGA,YAAY,IAAI,KAAK3C,MAAL,CAAY6C,UAAZ,CAAuBJ,UAAvB,CAA/B;MAGAE,YAAY,GACVA,YAAY,IAAI,CAAC,KAAKG,2BAAL,CAAiCP,aAAjC,EAAgD,KAAKtC,WAArD,CADnB;;MAGA,IAAI0C,YAAJ,EAAkB;QAEhB,IAAMI,UAAU,GAAG,IAAAC,+BAAA,EAAgBV,KAAK,CAACW,WAAtB,EAAmCP,MAAnC,CAAnB;QACA,IAAAQ,yBAAA,EAAU;UAACtC,MAAM,EAAEmC,UAAT;UAAqBI,MAAM,EAAEZ,aAA7B;UAA4Ca,KAAK,EAAE,CAAnD;UAAsDC,KAAK,EAAEX;QAA7D,CAAV;QACA,KAAK1C,MAAL,CAAYsD,OAAZ,CAAoBP,UAApB;QACA,KAAK9C,WAAL,GAAmBqC,KAAnB;MACD;;MAED,OAAO,KAAKtC,MAAZ;IACD;;;WAMD,sCAA6BuD,UAA7B,EAAyC;MACvC,IAAIC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAJ,EAA+B;QAC7B,OAAO,IAAIG,YAAJ,CAAiBH,UAAjB,CAAP;MACD;;MACD,OAAOA,UAAP;IACD;;;WAED,qCAA4BI,EAA5B,EAAgCC,EAAhC,EAAoC;MAClC,IAAI,CAACD,EAAD,IAAO,CAACC,EAAR,IAAcD,EAAE,CAACjB,MAAH,KAAckB,EAAE,CAAClB,MAA/B,IAAyCiB,EAAE,CAACV,WAAH,KAAmBW,EAAE,CAACX,WAAnE,EAAgF;QAC9E,OAAO,KAAP;MACD;;MACD,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACjB,MAAvB,EAA+B,EAAEmB,CAAjC,EAAoC;QAClC,IAAIF,EAAE,CAACE,CAAD,CAAF,KAAUD,EAAE,CAACC,CAAD,CAAhB,EAAqB;UACnB,OAAO,KAAP;QACD;MACF;;MACD,OAAO,IAAP;IACD;;;WA+DD,yBAAgB;MAGd,IAAM1D,GAAG,GAAG,KAAKT,EAAjB;MACA,OAAOS,GAAG,CAAC2D,iBAAJ,EAAP;IACD;;;WAED,uBAAc/C,MAAd,EAAsB;MACpB,KAAKZ,GAAL,CAAS4D,iBAAT,CAA2BhD,MAA3B;MAEA,OAAO,CAAC,KAAKiD,QAAN,CAAP;IAED;;;WAED,qBAAYjD,MAAZ,EAAoB;MAClB,KAAKZ,GAAL,CAAS8D,eAAT,CAAyBlD,MAAzB;IACD;;;WAGD,uBAAcmD,KAAd,QAAiC;MAAA;;MAAA,IAAXlD,QAAW,QAAXA,QAAW;MAC/B,IAAAL,cAAA,EAAOe,MAAM,CAACyC,QAAP,CAAgBnD,QAAhB,CAAP;MACA,OAAO,KAAKH,IAAL,CAAU,YAAM;QACrB,QAAQqD,KAAR;UACE;YACE,OAAO,MAAI,CAACxE,EAAL,CAAQ0E,qBAAR,CAA8BpD,QAA9B,EAAwCkD,KAAxC,CAAP;;UACF;YACE,OAAO,MAAI,CAACxE,EAAL,CAAQ2E,eAAR,CAAwBrD,QAAxB,EAAkCkD,KAAlC,CAAP;QAJJ;MAMD,CAPM,CAAP;IAQD;;;WAhTD,qBAAmBxE,EAAnB,EAAqC;MAAA,IAAd4E,OAAc,uEAAJ,EAAI;;MAGnC,IAAIA,OAAO,CAACnC,qBAAZ,EAAmC;QACjC,OAAO,IAAAR,iBAAA,EAASjC,EAAT,KAAgB,IAAA6E,eAAA,QAAiB,QAAxC;MACD;;MAGD,OAAO,IAAP;IACD;;;WAID,yBAAuB7E,EAAvB,EAA2B;MACzBA,EAAE,CAAC8E,IAAH,GAAU9E,EAAE,CAAC8E,IAAH,IAAW,EAArB;;MACA,IAAI,CAAC9E,EAAE,CAAC8E,IAAH,CAAQC,kBAAb,EAAiC;QAC/B/E,EAAE,CAAC8E,IAAH,CAAQC,kBAAR,GAA6B,IAAIhF,iBAAJ,CAAsBC,EAAtB,EAA0B;UAACqB,MAAM,EAAE,IAAT;UAAeb,cAAc,EAAE;QAA/B,CAA1B,CAA7B;MACD;;MACD,OAAOR,EAAE,CAAC8E,IAAH,CAAQC,kBAAf;IACD;;;WAED,0BAAwB/E,EAAxB,EAA4B;MAG1BD,iBAAiB,CAACiF,cAAlB,GAEEjF,iBAAiB,CAACiF,cAAlB,IAAoChF,EAAE,CAACiF,YAAH,OAFtC;MAIA,OAAOlF,iBAAiB,CAACiF,cAAzB;IACD;;;WAMD,qBAAmBhF,EAAnB,EAAuBsB,QAAvB,EAAiC4D,KAAjC,EAAwC;MACtC,QAAQA,KAAK,CAAC3B,WAAd;QACE,KAAKS,YAAL;UACEjE,iBAAiB,CAACoF,sBAAlB,CAAyCnF,EAAzC,EAA6CsB,QAA7C,EAAuD4D,KAAvD;;UACA;;QACF,KAAKE,UAAL;UACErF,iBAAiB,CAACsF,oBAAlB,CAAuCrF,EAAvC,EAA2CsB,QAA3C,EAAqD4D,KAArD;;UACA;;QACF,KAAKI,WAAL;UACEvF,iBAAiB,CAACwF,qBAAlB,CAAwCvF,EAAxC,EAA4CsB,QAA5C,EAAsD4D,KAAtD;;UACA;;QACF;UACE,IAAAjE,cAAA,EAAO,KAAP;MAXJ;IAaD;;;WAqKD,gCAA8BjB,EAA9B,EAAkCsB,QAAlC,EAA4C4D,KAA5C,EAAmD;MACjD,QAAQA,KAAK,CAAClC,MAAd;QACE,KAAK,CAAL;UACEhD,EAAE,CAACwF,eAAH,CAAmBlE,QAAnB,EAA6B4D,KAA7B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAACyF,eAAH,CAAmBnE,QAAnB,EAA6B4D,KAA7B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAAC0F,eAAH,CAAmBpE,QAAnB,EAA6B4D,KAA7B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAAC2F,eAAH,CAAmBrE,QAAnB,EAA6B4D,KAA7B;UACA;;QACF;UACE,IAAAjE,cAAA,EAAO,KAAP;MAdJ;IAgBD;;;WAED,8BAA4BjB,EAA5B,EAAgCsB,QAAhC,EAA0C4D,KAA1C,EAAiD;MAC/C,IAAAjE,cAAA,EAAO,IAAAgB,iBAAA,EAASjC,EAAT,CAAP;;MACA,QAAQkF,KAAK,CAAClC,MAAd;QACE,KAAK,CAAL;UACEhD,EAAE,CAAC4F,gBAAH,CAAoBtE,QAApB,EAA8B4D,KAA9B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAAC6F,gBAAH,CAAoBvE,QAApB,EAA8B4D,KAA9B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAAC8F,gBAAH,CAAoBxE,QAApB,EAA8B4D,KAA9B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAAC+F,gBAAH,CAAoBzE,QAApB,EAA8B4D,KAA9B;UACA;;QACF;UACE,IAAAjE,cAAA,EAAO,KAAP;MAdJ;IAgBD;;;WAED,+BAA6BjB,EAA7B,EAAiCsB,QAAjC,EAA2C4D,KAA3C,EAAkD;MAChD,IAAAjE,cAAA,EAAO,IAAAgB,iBAAA,EAASjC,EAAT,CAAP;;MACA,QAAQkF,KAAK,CAAClC,MAAd;QACE,KAAK,CAAL;UACEhD,EAAE,CAACgG,iBAAH,CAAqB1E,QAArB,EAA+B4D,KAA/B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAACiG,iBAAH,CAAqB3E,QAArB,EAA+B4D,KAA/B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAACkG,iBAAH,CAAqB5E,QAArB,EAA+B4D,KAA/B;UACA;;QACF,KAAK,CAAL;UACElF,EAAE,CAACmG,iBAAH,CAAqB7E,QAArB,EAA+B4D,KAA/B;UACA;;QACF;UACE,IAAAjE,cAAA,EAAO,KAAP;MAdJ;IAgBD;;;EApR4CmF,iB,EAExCC,MAAM,CAACC,W"}