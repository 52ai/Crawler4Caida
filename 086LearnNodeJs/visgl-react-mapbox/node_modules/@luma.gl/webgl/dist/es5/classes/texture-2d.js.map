{"version":3,"file":"texture-2d.js","names":["Texture2D","gl","props","assertWebGLContext","Promise","data","Object","assign","loadImage","target","initialize","seal","opts","Texture","isSupported","Symbol","toStringTag"],"sources":["../../../src/classes/texture-2d.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {assertWebGLContext} from '@luma.gl/gltools';\nimport Texture from './texture';\nimport {loadImage} from '../utils/load-file';\n\nexport default class Texture2D extends Texture {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Texture2D';\n  }\n\n  static isSupported(gl, opts) {\n    return Texture.isSupported(gl, opts);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGLContext(gl);\n\n    // Signature: new Texture2D(gl, url | Promise)\n    if (props instanceof Promise || typeof props === 'string') {\n      props = {data: props};\n    }\n\n    // Signature: new Texture2D(gl, {data: url})\n    if (typeof props.data === 'string') {\n      props = Object.assign({}, props, {data: loadImage(props.data)});\n    }\n\n    super(gl, Object.assign({}, props, {target: GL.TEXTURE_2D}));\n\n    this.initialize(props);\n\n    Object.seal(this);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;;;IAEqBA,S;;;;;EAUnB,mBAAYC,EAAZ,EAA4B;IAAA;;IAAA,IAAZC,KAAY,uEAAJ,EAAI;IAAA;IAC1B,IAAAC,2BAAA,EAAmBF,EAAnB;;IAGA,IAAIC,KAAK,YAAYE,OAAjB,IAA4B,OAAOF,KAAP,KAAiB,QAAjD,EAA2D;MACzDA,KAAK,GAAG;QAACG,IAAI,EAAEH;MAAP,CAAR;IACD;;IAGD,IAAI,OAAOA,KAAK,CAACG,IAAb,KAAsB,QAA1B,EAAoC;MAClCH,KAAK,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;QAACG,IAAI,EAAE,IAAAG,mBAAA,EAAUN,KAAK,CAACG,IAAhB;MAAP,CAAzB,CAAR;IACD;;IAED,0BAAMJ,EAAN,EAAUK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;MAACO,MAAM;IAAP,CAAzB,CAAV;;IAEA,MAAKC,UAAL,CAAgBR,KAAhB;;IAEAI,MAAM,CAACK,IAAP;IAjB0B;EAkB3B;;;;SA1BD,eAA2B;MACzB,OAAO,WAAP;IACD;;;WAED,qBAAmBV,EAAnB,EAAuBW,IAAvB,EAA6B;MAC3B,OAAOC,gBAAA,CAAQC,WAAR,CAAoBb,EAApB,EAAwBW,IAAxB,CAAP;IACD;;;EARoCC,gB,EAEhCE,MAAM,CAACC,W"}