{"version":3,"file":"utils.js","names":["uidCounters","uid","id","count","isPowerOfTwo","n","assert","isObjectEmpty","obj","isEmpty","key"],"sources":["../../../src/utils/utils.js"],"sourcesContent":["import {assert} from './assert';\n\nconst uidCounters = {};\n\n/**\n * Returns a UID.\n * @param {string} id= - Identifier base name\n * @return {string} uid\n **/\nexport function uid(id = 'id') {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n\n/**\n * Verifies if a given number is power of two or not.\n * @param {object} n - The number to check.\n * @return {boolean} Returns true if the given number is power of 2, false otherwise.\n **/\nexport function isPowerOfTwo(n) {\n  assert(typeof n === 'number', 'Input must be a number');\n  return n && (n & (n - 1)) === 0;\n}\n\n// Returns true if given object is empty, false otherwise.\nexport function isObjectEmpty(obj) {\n  let isEmpty = true;\n  /* eslint-disable no-unused-vars  */\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n  /* eslint-enable no-unused-vars  */\n  return isEmpty;\n}\n"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,WAAW,GAAG,EAApB;;AAOO,SAASC,GAAT,GAAwB;EAAA,IAAXC,EAAW,uEAAN,IAAM;EAC7BF,WAAW,CAACE,EAAD,CAAX,GAAkBF,WAAW,CAACE,EAAD,CAAX,IAAmB,CAArC;EACA,IAAMC,KAAK,GAAGH,WAAW,CAACE,EAAD,CAAX,EAAd;EACA,iBAAUA,EAAV,cAAgBC,KAAhB;AACD;;AAOM,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;EAC9B,IAAAC,cAAA,EAAO,OAAOD,CAAP,KAAa,QAApB,EAA8B,wBAA9B;EACA,OAAOA,CAAC,IAAI,CAACA,CAAC,GAAIA,CAAC,GAAG,CAAV,MAAkB,CAA9B;AACD;;AAGM,SAASE,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,IAAIC,OAAO,GAAG,IAAd;;EAEA,KAAK,IAAMC,GAAX,IAAkBF,GAAlB,EAAuB;IACrBC,OAAO,GAAG,KAAV;IACA;EACD;;EAED,OAAOA,OAAP;AACD"}