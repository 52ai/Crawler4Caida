{"version":3,"file":"gltf-environment.js","names":["GLTFEnvironment","gl","brdfLutUrl","getTexUrl","specularMipLevels","id","getTextureForFace","parameters","pixels","TextureCube","FACES","forEach","face","mipmaps","_DiffuseEnvSampler","makeCube","dir","loadImage","_SpecularEnvSampler","imageArray","lod","push","_BrdfTexture","Texture2D","data","delete"],"sources":["../../../src/gltf/gltf-environment.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {Texture2D, TextureCube} from '@luma.gl/webgl';\nimport {loadImage} from '@loaders.gl/images';\n\nexport default class GLTFEnvironment {\n  constructor(gl, {brdfLutUrl, getTexUrl, specularMipLevels = 10}) {\n    this.gl = gl;\n    this.brdfLutUrl = brdfLutUrl;\n    this.getTexUrl = getTexUrl;\n    this.specularMipLevels = specularMipLevels;\n  }\n\n  makeCube({id, getTextureForFace, parameters}) {\n    const pixels = {};\n    TextureCube.FACES.forEach(face => {\n      pixels[face] = getTextureForFace(face);\n    });\n    return new TextureCube(this.gl, {\n      id,\n      mipmaps: false,\n      parameters,\n      pixels\n    });\n  }\n\n  getDiffuseEnvSampler() {\n    if (!this._DiffuseEnvSampler) {\n      this._DiffuseEnvSampler = this.makeCube({\n        id: 'DiffuseEnvSampler',\n        getTextureForFace: dir => loadImage(this.getTexUrl('diffuse', dir, 0)),\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        }\n      });\n    }\n\n    return this._DiffuseEnvSampler;\n  }\n\n  getSpecularEnvSampler() {\n    if (!this._SpecularEnvSampler) {\n      this._SpecularEnvSampler = this.makeCube({\n        id: 'SpecularEnvSampler',\n        getTextureForFace: dir => {\n          const imageArray = [];\n          for (let lod = 0; lod <= this.specularMipLevels - 1; lod++) {\n            imageArray.push(loadImage(this.getTexUrl('specular', dir, lod)));\n          }\n          return imageArray;\n        },\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        }\n      });\n    }\n\n    return this._SpecularEnvSampler;\n  }\n\n  getBrdfTexture() {\n    if (!this._BrdfTexture) {\n      this._BrdfTexture = new Texture2D(this.gl, {\n        id: 'brdfLUT',\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        },\n        // Texture2D accepts a promise that returns an image as data (Async Textures)\n        data: loadImage(this.brdfLutUrl)\n      });\n    }\n\n    return this._BrdfTexture;\n  }\n\n  delete() {\n    if (this._DiffuseEnvSampler) {\n      this._DiffuseEnvSampler.delete();\n      this._DiffuseEnvSampler = null;\n    }\n\n    if (this._SpecularEnvSampler) {\n      this._SpecularEnvSampler.delete();\n      this._SpecularEnvSampler = null;\n    }\n\n    if (this._BrdfTexture) {\n      this._BrdfTexture.delete();\n      this._BrdfTexture = null;\n    }\n  }\n}\n"],"mappings":"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"}