{"version":3,"file":"scenegraph-node.js","names":["ScenegraphNode","props","id","uid","constructor","name","display","position","Vector3","rotation","scale","matrix","Matrix4","userData","_setScenegraphNodeProps","assert","length","copyMatrix","copy","update","setPosition","setRotation","setScale","updateMatrix","pos","rot","identity","translate","rotateXYZ","options","viewMatrix","modelMatrix","worldMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","setMatrix","Object","assign"],"sources":["../../../src/scenegraph/scenegraph-node.js"],"sourcesContent":["import {Vector3, Matrix4} from '@math.gl/core';\nimport {assert, uid} from '@luma.gl/webgl';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update(options = {}) {\n    const {position, rotation, scale} = options;\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n"],"mappings":"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"}