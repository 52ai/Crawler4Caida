{"version":3,"file":"scenegraph-node.js","names":["Vector3","Matrix4","assert","uid","ScenegraphNode","constructor","props","id","name","display","position","rotation","scale","matrix","userData","_setScenegraphNodeProps","delete","setProps","toString","setPosition","length","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","options","getCoordinateUniforms","viewMatrix","modelMatrix","worldMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","Object","assign"],"sources":["../../../src/scenegraph/scenegraph-node.js"],"sourcesContent":["import {Vector3, Matrix4} from '@math.gl/core';\nimport {assert, uid} from '@luma.gl/webgl';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update(options = {}) {\n    const {position, rotation, scale} = options;\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n"],"mappings":"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"}