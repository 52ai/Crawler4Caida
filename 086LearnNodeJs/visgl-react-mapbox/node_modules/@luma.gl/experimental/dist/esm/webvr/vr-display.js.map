{"version":3,"file":"vr-display.js","names":["log","Display","createEnterVRButton","VRDisplay","isSupported","navigator","window","constructor","props","_vrSupported","vrFrameData","VRFrameData","vrPresenting","vrFrame","addEventListener","_vrDisplayPresentChange","bind","delete","_removeVRButton","getViews","options","_addVRButton","vrDisplay","getFrameData","leftProjectionMatrix","leftViewMatrix","rightProjectionMatrix","rightViewMatrix","width","height","displayEye","projectionMatrix","viewMatrix","params","viewport","scissor","scissorTest","submitFrame","requestAnimationFrame","renderFrame","vrButton","canvas","_getCanvas","displays","getVRDisplays","length","info","title","displayName","onclick","_startDisplay","animationLoop","gl","requestPresent","source","isPresenting","style","display"],"sources":["../../../src/webvr/vr-display.js"],"sourcesContent":["import {log} from '@luma.gl/webgl';\nimport Display from './display';\nimport {createEnterVRButton} from './vr-button';\n\nexport default class VRDisplay extends Display {\n  static isSupported() {\n    return (\n      typeof navigator !== 'undefined' && 'getVRDisplays' in navigator && 'VRFrameData' in window\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._vrSupported = VRDisplay.isSupported();\n    if (this._vrSupported) {\n      // @ts-expect-error\n      this.vrFrameData = new window.VRFrameData();\n      this.vrPresenting = false;\n      this.vrFrame = false;\n      window.addEventListener('vrdisplaypresentchange', this._vrDisplayPresentChange.bind(this));\n    }\n  }\n\n  delete() {\n    super.delete();\n    this._removeVRButton();\n  }\n\n  getViews(options) {\n    if (this._vrSupported) {\n      this._addVRButton();\n    }\n\n    // Need both vrPresenting and vrFrame\n    // to avoid race conditions when we exit VR\n    // after we schedule an animation frame\n    if (this.vrPresenting && this.vrFrame) {\n      this.vrDisplay.getFrameData(this.vrFrameData);\n\n      const {\n        leftProjectionMatrix,\n        leftViewMatrix,\n        rightProjectionMatrix,\n        rightViewMatrix\n      } = this.vrFrameData;\n\n      const {width, height} = options;\n\n      return [\n        {\n          displayEye: 'left',\n          projectionMatrix: leftProjectionMatrix,\n          viewMatrix: leftViewMatrix,\n          params: {\n            viewport: [0, 0, width * 0.5, height],\n            scissor: [0, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        },\n        {\n          displayEye: 'right',\n          projectionMatrix: rightProjectionMatrix,\n          viewMatrix: rightViewMatrix,\n          params: {\n            viewport: [width * 0.5, 0, width * 0.5, height],\n            scissor: [width * 0.5, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        }\n      ];\n    }\n\n    return super.getViews(options);\n  }\n\n  submitFrame() {\n    if (this.vrPresenting && this.vrFrame) {\n      this.vrDisplay.submitFrame();\n      return true;\n    }\n\n    return false;\n  }\n\n  requestAnimationFrame(renderFrame) {\n    if (this.vrPresenting) {\n      this.vrDisplay.requestAnimationFrame(() => {\n        this.vrFrame = true;\n        renderFrame();\n        this.vrFrame = false;\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  // PRIVATE\n\n  // TODO: Consider resizing canvas to match vrDisplay.getEyeParameters()\n  // TODO: Maybe allow to select display?\n  async _addVRButton() {\n    if (this.vrButton) {\n      return;\n    }\n\n    const canvas = this._getCanvas();\n    if (!canvas) {\n      return;\n    }\n\n    // @ts-expect-error\n    const displays = await navigator.getVRDisplays();\n    if (displays && displays.length) {\n      log.info(2, 'Found VR Displays', displays)();\n\n      this.vrDisplay = displays[0];\n      this.vrButton = createEnterVRButton({\n        canvas,\n        title: `Enter VR (${this.vrDisplay.displayName})`\n      });\n      this.vrButton.onclick = () => this._startDisplay();\n    }\n  }\n\n  _getCanvas() {\n    return this.animationLoop.canvas || (this.animationLoop.gl && this.animationLoop.gl.canvas);\n  }\n\n  _removeVRButton() {\n    if (this.vrButton) {\n      // TODO\n    }\n  }\n\n  _startDisplay() {\n    // @ts-ignore\n    this.vrDisplay.requestPresent([\n      {\n        source: this._getCanvas()\n      }\n    ]);\n  }\n\n  _vrDisplayPresentChange() {\n    if (this.vrDisplay.isPresenting) {\n      log.info(2, 'Entering VR')();\n\n      this.vrPresenting = true;\n      this.vrButton.style.display = 'none';\n    } else {\n      log.info(2, 'Exiting VR')();\n\n      this.vrPresenting = false;\n      this.vrButton.style.display = 'block';\n    }\n  }\n}\n"],"mappings":"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"}