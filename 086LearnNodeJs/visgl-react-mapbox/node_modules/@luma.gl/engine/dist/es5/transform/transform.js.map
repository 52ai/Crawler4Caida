{"version":3,"file":"transform.js","names":["Transform","gl","props","model","elementCount","bufferTransform","textureTransform","elementIDBuffer","_initialize","Object","seal","delete","opts","clearRenderTarget","updatedOpts","_updateDrawOptions","framebuffer","clear","color","transform","swapped","resourceTransforms","filter","Boolean","resourceTransform","swap","assert","varyingName","getBuffer","data","getData","getFramebuffer","setVertexCount","update","_buildResourceTransforms","_updateModelProps","Model","assign","fs","getPassthroughFS","version","getShaderVersion","vs","id","drawMode","vertexCount","setupResources","updatedProps","updateModelProps","canCreateBufferTransform","BufferTransform","canCreateTextureTransform","TextureTransform","getDrawOptions","isWebGL2","isObjectEmpty","feedbackBuffers","feedbackMap","varyings","length","_sourceTextures","_targetTexture","_targetTextureVarying"],"sources":["../../../src/transform/transform.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {getPassthroughFS} from '@luma.gl/shadertools';\nimport BufferTransform from './buffer-transform';\nimport TextureTransform from './texture-transform';\n\nimport {isWebGL2} from '@luma.gl/gltools';\nimport {assert, isObjectEmpty, getShaderVersion} from '@luma.gl/webgl';\nimport Model from '../lib/model';\n\n// takes source and target buffers/textures and setsup the pipeline\nexport default class Transform {\n  static isSupported(gl) {\n    // TODO : differentiate writting to buffer vs not\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    this.gl = gl;\n    this.model = null;\n    this.elementCount = 0;\n    this.bufferTransform = null;\n    this.textureTransform = null;\n    this.elementIDBuffer = null;\n    this._initialize(props);\n    Object.seal(this);\n  }\n\n  // Delete owned resources.\n  delete() {\n    const {model, bufferTransform, textureTransform} = this;\n    if (model) {\n      model.delete();\n    }\n    if (bufferTransform) {\n      bufferTransform.delete();\n    }\n    if (textureTransform) {\n      textureTransform.delete();\n    }\n  }\n\n  // Run one transform loop.\n  run(opts = {}) {\n    const {clearRenderTarget = true} = opts;\n\n    const updatedOpts = this._updateDrawOptions(opts);\n\n    if (clearRenderTarget && updatedOpts.framebuffer) {\n      updatedOpts.framebuffer.clear({color: true});\n    }\n\n    this.model.transform(updatedOpts);\n  }\n\n  // swap resources if a map is provided\n  swap() {\n    let swapped = false;\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      swapped = swapped || resourceTransform.swap();\n    }\n    assert(swapped, 'Nothing to swap');\n  }\n\n  // Return Buffer object for given varying name.\n  getBuffer(varyingName = null) {\n    return this.bufferTransform && this.bufferTransform.getBuffer(varyingName);\n  }\n\n  // Return data either from Buffer or from Texture\n  getData(opts = {}) {\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      // @ts-ignore\n      const data = resourceTransform.getData(opts);\n      if (data) {\n        return data;\n      }\n    }\n    return null;\n  }\n\n  // Return framebuffer object if rendering to textures\n  getFramebuffer() {\n    return this.textureTransform && this.textureTransform.getFramebuffer();\n  }\n\n  // Update some or all buffer/texture bindings.\n  update(opts = {}) {\n    if ('elementCount' in opts) {\n      // @ts-ignore TODO\n      this.model.setVertexCount(opts.elementCount);\n    }\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      resourceTransform.update(opts);\n    }\n  }\n\n  // Private\n\n  _initialize(props = {}) {\n    const {gl} = this;\n    this._buildResourceTransforms(gl, props);\n\n    props = this._updateModelProps(props);\n    this.model = new Model(\n      gl,\n      Object.assign({}, props, {\n        fs: props.fs || getPassthroughFS({version: getShaderVersion(props.vs)}),\n        id: props.id || 'transform-model',\n        drawMode: props.drawMode || GL.POINTS,\n        vertexCount: props.elementCount\n      })\n    );\n\n    /* eslint-disable no-unused-expressions */\n    this.bufferTransform && this.bufferTransform.setupResources({model: this.model});\n    /* eslint-enable no-unused-expressions */\n  }\n\n  _updateModelProps(props) {\n    let updatedProps = Object.assign({}, props);\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      updatedProps = resourceTransform.updateModelProps(updatedProps);\n    }\n    return updatedProps;\n  }\n\n  _buildResourceTransforms(gl, props) {\n    if (canCreateBufferTransform(props)) {\n      this.bufferTransform = new BufferTransform(gl, props);\n    }\n    if (canCreateTextureTransform(props)) {\n      this.textureTransform = new TextureTransform(gl, props);\n    }\n    assert(\n      this.bufferTransform || this.textureTransform,\n      'must provide source/feedback buffers or source/target textures'\n    );\n  }\n\n  _updateDrawOptions(opts) {\n    let updatedOpts = Object.assign({}, opts);\n    const resourceTransforms = [this.bufferTransform, this.textureTransform].filter(Boolean);\n    for (const resourceTransform of resourceTransforms) {\n      updatedOpts = Object.assign(updatedOpts, resourceTransform.getDrawOptions(updatedOpts));\n    }\n    return updatedOpts;\n  }\n}\n\n// Helper Methods\n\nfunction canCreateBufferTransform(props) {\n  if (\n    !isObjectEmpty(props.feedbackBuffers) ||\n    !isObjectEmpty(props.feedbackMap) ||\n    (props.varyings && props.varyings.length > 0)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction canCreateTextureTransform(props) {\n  if (\n    !isObjectEmpty(props._sourceTextures) ||\n    props._targetTexture ||\n    props._targetTextureVarying\n  ) {\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"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"}