{"version":3,"file":"plane-geometry.js","names":["PlaneGeometry","props","id","uid","tesselatePlane","indices","attributes","Geometry","type","offset","flipCull","unpack","coords","split","c1len","c2len","subdivisions1","subdivisions2","numVertices","positions","Float32Array","normals","texCoords","i2","i3","z","x","u","v","Error","numVertsAcross","Uint16Array","index","geometry","size","value","POSITION","NORMAL","TEXCOORD_0","unpackIndexedGeometry"],"sources":["../../../src/geometries/plane-geometry.js"],"sourcesContent":["import Geometry from '../geometry/geometry';\nimport {unpackIndexedGeometry} from '../geometry/geometry-utils';\nimport {uid} from '@luma.gl/webgl';\n\nexport default class PlaneGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('plane-geometry')} = props;\n\n    const {indices, attributes} = tesselatePlane(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\n/* eslint-disable complexity, max-statements */\nfunction tesselatePlane(props) {\n  const {type = 'x,y', offset = 0, flipCull = false, unpack = false} = props;\n\n  const coords = type.split(',');\n  // width, height\n  let c1len = props[`${coords[0]}len`] || 1;\n  const c2len = props[`${coords[1]}len`] || 1;\n  // subdivisionsWidth, subdivisionsDepth\n  const subdivisions1 = props[`n${coords[0]}`] || 1;\n  const subdivisions2 = props[`n${coords[1]}`] || 1;\n  const numVertices = (subdivisions1 + 1) * (subdivisions2 + 1);\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n\n  if (flipCull) {\n    c1len = -c1len;\n  }\n\n  let i2 = 0;\n  let i3 = 0;\n  for (let z = 0; z <= subdivisions2; z++) {\n    for (let x = 0; x <= subdivisions1; x++) {\n      const u = x / subdivisions1;\n      const v = z / subdivisions2;\n      texCoords[i2 + 0] = flipCull ? 1 - u : u;\n      texCoords[i2 + 1] = v;\n\n      switch (type) {\n        case 'x,y':\n          positions[i3 + 0] = c1len * u - c1len * 0.5;\n          positions[i3 + 1] = c2len * v - c2len * 0.5;\n          positions[i3 + 2] = offset;\n\n          normals[i3 + 0] = 0;\n          normals[i3 + 1] = 0;\n          normals[i3 + 2] = flipCull ? 1 : -1;\n          break;\n\n        case 'x,z':\n          positions[i3 + 0] = c1len * u - c1len * 0.5;\n          positions[i3 + 1] = offset;\n          positions[i3 + 2] = c2len * v - c2len * 0.5;\n\n          normals[i3 + 0] = 0;\n          normals[i3 + 1] = flipCull ? 1 : -1;\n          normals[i3 + 2] = 0;\n          break;\n\n        case 'y,z':\n          positions[i3 + 0] = offset;\n          positions[i3 + 1] = c1len * u - c1len * 0.5;\n          positions[i3 + 2] = c2len * v - c2len * 0.5;\n\n          normals[i3 + 0] = flipCull ? 1 : -1;\n          normals[i3 + 1] = 0;\n          normals[i3 + 2] = 0;\n          break;\n\n        default:\n          throw new Error('PlaneGeometry: unknown type');\n      }\n\n      i2 += 2;\n      i3 += 3;\n    }\n  }\n\n  const numVertsAcross = subdivisions1 + 1;\n  const indices = new Uint16Array(subdivisions1 * subdivisions2 * 6);\n\n  for (let z = 0; z < subdivisions2; z++) {\n    for (let x = 0; x < subdivisions1; x++) {\n      const index = (z * subdivisions1 + x) * 6;\n      // Make triangle 1 of quad.\n      indices[index + 0] = (z + 0) * numVertsAcross + x;\n      indices[index + 1] = (z + 1) * numVertsAcross + x;\n      indices[index + 2] = (z + 0) * numVertsAcross + x + 1;\n\n      // Make triangle 2 of quad.\n      indices[index + 3] = (z + 1) * numVertsAcross + x;\n      indices[index + 4] = (z + 1) * numVertsAcross + x + 1;\n      indices[index + 5] = (z + 0) * numVertsAcross + x + 1;\n    }\n  }\n\n  const geometry = {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n\n  // Optionally, unpack indexed geometry\n  return unpack ? unpackIndexedGeometry(geometry) : geometry;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEqBA,a;;;;;EACnB,yBAAwB;IAAA,IAAZC,KAAY,uEAAJ,EAAI;IAAA;IACtB,gBAAqCA,KAArC,CAAOC,EAAP;IAAA,IAAOA,EAAP,0BAAY,IAAAC,UAAA,EAAI,gBAAJ,CAAZ;;IAEA,sBAA8BC,cAAc,CAACH,KAAD,CAA5C;IAAA,IAAOI,OAAP,mBAAOA,OAAP;IAAA,IAAgBC,UAAhB,mBAAgBA,UAAhB;;IAHsB,yDAKjBL,KALiB;MAMpBC,EAAE,EAAFA,EANoB;MAOpBG,OAAO,EAAPA,OAPoB;MAQpBC,UAAU,kCAAMA,UAAN,GAAqBL,KAAK,CAACK,UAA3B;IARU;EAUvB;;;EAXwCC,iB;;;;AAmB3C,SAASH,cAAT,CAAwBH,KAAxB,EAA+B;EAC7B,kBAAqEA,KAArE,CAAOO,IAAP;EAAA,IAAOA,IAAP,4BAAc,KAAd;EAAA,oBAAqEP,KAArE,CAAqBQ,MAArB;EAAA,IAAqBA,MAArB,8BAA8B,CAA9B;EAAA,sBAAqER,KAArE,CAAiCS,QAAjC;EAAA,IAAiCA,QAAjC,gCAA4C,KAA5C;EAAA,oBAAqET,KAArE,CAAmDU,MAAnD;EAAA,IAAmDA,MAAnD,8BAA4D,KAA5D;EAEA,IAAMC,MAAM,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,CAAf;EAEA,IAAIC,KAAK,GAAGb,KAAK,WAAIW,MAAM,CAAC,CAAD,CAAV,SAAL,IAA4B,CAAxC;EACA,IAAMG,KAAK,GAAGd,KAAK,WAAIW,MAAM,CAAC,CAAD,CAAV,SAAL,IAA4B,CAA1C;EAEA,IAAMI,aAAa,GAAGf,KAAK,YAAKW,MAAM,CAAC,CAAD,CAAX,EAAL,IAA0B,CAAhD;EACA,IAAMK,aAAa,GAAGhB,KAAK,YAAKW,MAAM,CAAC,CAAD,CAAX,EAAL,IAA0B,CAAhD;EACA,IAAMM,WAAW,GAAG,CAACF,aAAa,GAAG,CAAjB,KAAuBC,aAAa,GAAG,CAAvC,CAApB;EAEA,IAAME,SAAS,GAAG,IAAIC,YAAJ,CAAiBF,WAAW,GAAG,CAA/B,CAAlB;EACA,IAAMG,OAAO,GAAG,IAAID,YAAJ,CAAiBF,WAAW,GAAG,CAA/B,CAAhB;EACA,IAAMI,SAAS,GAAG,IAAIF,YAAJ,CAAiBF,WAAW,GAAG,CAA/B,CAAlB;;EAEA,IAAIR,QAAJ,EAAc;IACZI,KAAK,GAAG,CAACA,KAAT;EACD;;EAED,IAAIS,EAAE,GAAG,CAAT;EACA,IAAIC,EAAE,GAAG,CAAT;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,aAArB,EAAoCQ,CAAC,EAArC,EAAyC;IACvC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,aAArB,EAAoCU,CAAC,EAArC,EAAyC;MACvC,IAAMC,CAAC,GAAGD,CAAC,GAAGV,aAAd;MACA,IAAMY,CAAC,GAAGH,CAAC,GAAGR,aAAd;MACAK,SAAS,CAACC,EAAE,GAAG,CAAN,CAAT,GAAoBb,QAAQ,GAAG,IAAIiB,CAAP,GAAWA,CAAvC;MACAL,SAAS,CAACC,EAAE,GAAG,CAAN,CAAT,GAAoBK,CAApB;;MAEA,QAAQpB,IAAR;QACE,KAAK,KAAL;UACEW,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBV,KAAK,GAAGa,CAAR,GAAYb,KAAK,GAAG,GAAxC;UACAK,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBT,KAAK,GAAGa,CAAR,GAAYb,KAAK,GAAG,GAAxC;UACAI,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBf,MAApB;UAEAY,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAlB;UACAH,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAlB;UACAH,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkBd,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAlC;UACA;;QAEF,KAAK,KAAL;UACES,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBV,KAAK,GAAGa,CAAR,GAAYb,KAAK,GAAG,GAAxC;UACAK,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBf,MAApB;UACAU,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBT,KAAK,GAAGa,CAAR,GAAYb,KAAK,GAAG,GAAxC;UAEAM,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAlB;UACAH,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkBd,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAlC;UACAW,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAlB;UACA;;QAEF,KAAK,KAAL;UACEL,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBf,MAApB;UACAU,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBV,KAAK,GAAGa,CAAR,GAAYb,KAAK,GAAG,GAAxC;UACAK,SAAS,CAACK,EAAE,GAAG,CAAN,CAAT,GAAoBT,KAAK,GAAGa,CAAR,GAAYb,KAAK,GAAG,GAAxC;UAEAM,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkBd,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAlC;UACAW,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAlB;UACAH,OAAO,CAACG,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAlB;UACA;;QAEF;UACE,MAAM,IAAIK,KAAJ,CAAU,6BAAV,CAAN;MAhCJ;;MAmCAN,EAAE,IAAI,CAAN;MACAC,EAAE,IAAI,CAAN;IACD;EACF;;EAED,IAAMM,cAAc,GAAGd,aAAa,GAAG,CAAvC;EACA,IAAMX,OAAO,GAAG,IAAI0B,WAAJ,CAAgBf,aAAa,GAAGC,aAAhB,GAAgC,CAAhD,CAAhB;;EAEA,KAAK,IAAIQ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGR,aAApB,EAAmCQ,EAAC,EAApC,EAAwC;IACtC,KAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGV,aAApB,EAAmCU,EAAC,EAApC,EAAwC;MACtC,IAAMM,KAAK,GAAG,CAACP,EAAC,GAAGT,aAAJ,GAAoBU,EAArB,IAA0B,CAAxC;MAEArB,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,GAAqB,CAACP,EAAC,GAAG,CAAL,IAAUK,cAAV,GAA2BJ,EAAhD;MACArB,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,GAAqB,CAACP,EAAC,GAAG,CAAL,IAAUK,cAAV,GAA2BJ,EAAhD;MACArB,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,GAAqB,CAACP,EAAC,GAAG,CAAL,IAAUK,cAAV,GAA2BJ,EAA3B,GAA+B,CAApD;MAGArB,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,GAAqB,CAACP,EAAC,GAAG,CAAL,IAAUK,cAAV,GAA2BJ,EAAhD;MACArB,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,GAAqB,CAACP,EAAC,GAAG,CAAL,IAAUK,cAAV,GAA2BJ,EAA3B,GAA+B,CAApD;MACArB,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,GAAqB,CAACP,EAAC,GAAG,CAAL,IAAUK,cAAV,GAA2BJ,EAA3B,GAA+B,CAApD;IACD;EACF;;EAED,IAAMO,QAAQ,GAAG;IACf5B,OAAO,EAAE;MAAC6B,IAAI,EAAE,CAAP;MAAUC,KAAK,EAAE9B;IAAjB,CADM;IAEfC,UAAU,EAAE;MACV8B,QAAQ,EAAE;QAACF,IAAI,EAAE,CAAP;QAAUC,KAAK,EAAEhB;MAAjB,CADA;MAEVkB,MAAM,EAAE;QAACH,IAAI,EAAE,CAAP;QAAUC,KAAK,EAAEd;MAAjB,CAFE;MAGViB,UAAU,EAAE;QAACJ,IAAI,EAAE,CAAP;QAAUC,KAAK,EAAEb;MAAjB;IAHF;EAFG,CAAjB;EAUA,OAAOX,MAAM,GAAG,IAAA4B,oCAAA,EAAsBN,QAAtB,CAAH,GAAqCA,QAAlD;AACD"}