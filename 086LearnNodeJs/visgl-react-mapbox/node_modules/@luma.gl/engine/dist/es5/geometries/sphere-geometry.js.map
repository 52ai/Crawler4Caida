{"version":3,"file":"sphere-geometry.js","names":["SphereGeometry","props","id","uid","tesselateSphere","indices","attributes","Geometry","nlat","nlong","radius","startLat","endLat","Math","PI","latRange","startLong","endLong","longRange","numVertices","value","n1","n2","n3","u","v","positions","Float32Array","normals","texCoords","IndexType","Uint32Array","Uint16Array","y","x","index","i2","i3","theta","phi","sinTheta","sin","cosTheta","cos","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","size","POSITION","NORMAL","TEXCOORD_0"],"sources":["../../../src/geometries/sphere-geometry.js"],"sourcesContent":["import Geometry from '../geometry/geometry';\nimport {uid} from '@luma.gl/webgl';\n\nexport default class SphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props) {\n  const {nlat = 10, nlong = 10} = props;\n  let {radius = 1} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    const value = radius;\n    radius = (n1, n2, n3, u, v) => value;\n  }\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n\n  const IndexType = numVertices > 0xffff ? Uint32Array : Uint16Array;\n  const indices = new IndexType(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlong + 1;\n  for (let x = 0; x < nlong; x++) {\n    for (let y = 0; y < nlat; y++) {\n      const index = (x * nlat + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n"],"mappings":"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"}