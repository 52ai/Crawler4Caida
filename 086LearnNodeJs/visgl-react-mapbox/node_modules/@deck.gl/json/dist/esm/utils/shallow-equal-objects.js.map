{"version":3,"sources":["../../../src/utils/shallow-equal-objects.js"],"names":["shallowEqualObjects","a","b","Object","keys","length","key"],"mappings":"AAKA,OAAO,SAASA,mBAAT,CAA6BC,CAA7B,EAAgCC,CAAhC,EAAmC;AACxC,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAI,OAAOD,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAA/B,IAAuC,OAAOC,CAAP,KAAa,QAApD,IAAgEA,CAAC,KAAK,IAA1E,EAAgF;AAC9E,WAAO,KAAP;AACD;;AAED,MAAIC,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAeI,MAAf,KAA0BF,MAAM,CAACC,IAAP,CAAYF,CAAZ,EAAeG,MAA7C,EAAqD;AACnD,WAAO,KAAP;AACD;;AAED,OAAK,MAAMC,GAAX,IAAkBL,CAAlB,EAAqB;AACnB,QAAI,EAAEK,GAAG,IAAIJ,CAAT,KAAeD,CAAC,CAACK,GAAD,CAAD,KAAWJ,CAAC,CAACI,GAAD,CAA/B,EAAsC;AACpC,aAAO,KAAP;AACD;AACF;;AACD,OAAK,MAAMA,GAAX,IAAkBJ,CAAlB,EAAqB;AACnB,QAAI,EAAEI,GAAG,IAAIL,CAAT,CAAJ,EAAiB;AACf,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["// TODO - can we reuse the core util? Assuming we don't want to export it\n\n/* eslint-disable complexity */\n\n// Compares two objects to see if their keys are shallowly equal\nexport function shallowEqualObjects(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || a === null || typeof b !== 'object' || b === null) {\n    return false;\n  }\n\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (!(key in b) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n  for (const key in b) {\n    if (!(key in a)) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"file":"shallow-equal-objects.js"}