{"version":3,"sources":["../../../src/utils/json-loader.ts"],"names":["isJSON","text","firstChar","lastChar","length","id","name","module","version","options","extensions","mimeTypes","testText","parseTextSync","JSON","parse"],"mappings":";;;;;;;AAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAuC;AACrC,MAAMC,SAAS,GAAGD,IAAI,CAAC,CAAD,CAAtB;AACA,MAAME,QAAQ,GAAGF,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAArB;AACA,SAAQF,SAAS,KAAK,GAAd,IAAqBC,QAAQ,KAAK,GAAnC,IAA4CD,SAAS,KAAK,GAAd,IAAqBC,QAAQ,KAAK,GAArF;AACD;;eAGc;AACbE,EAAAA,EAAE,EAAE,MADS;AAEbC,EAAAA,IAAI,EAAE,MAFO;AAGbC,EAAAA,MAAM,EAAE,EAHK;AAIbC,EAAAA,OAAO,EAAE,EAJI;AAKbC,EAAAA,OAAO,EAAE,EALI;AAMbC,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,SAAT,CANC;AAObC,EAAAA,SAAS,EAAE,CAAC,kBAAD,EAAqB,sBAArB,CAPE;AAQbC,EAAAA,QAAQ,EAAEZ,MARG;AASba,EAAAA,aAAa,EAAEC,IAAI,CAACC;AATP,C","sourcesContent":["import type {Loader} from '@loaders.gl/loader-utils';\n\nfunction isJSON(text: string): boolean {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// A light weight version instead of @loaders.gl/json (stream processing etc.)\nexport default {\n  id: 'JSON',\n  name: 'JSON',\n  module: '',\n  version: '',\n  options: {},\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n} as Loader;\n"],"file":"json-loader.js"}