{"version":3,"sources":["../../../src/utils/texture.ts"],"names":["DEFAULT_TEXTURE_PARAMETERS","internalTextures","createTexture","layer","image","gl","context","Texture2D","constructor","name","data","specialTextureParameters","compressed","length","texture","parameters","props","textureParameters","id","destroyTexture","delete"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;AAKA,IAAMA,0BAAkD,oUAAxD;AAQA,IAAMC,gBAA2C,GAAG,EAApD;;AAEO,SAASC,aAAT,CAAuBC,KAAvB,EAAqCC,KAArC,EAAmE;AACxE,MAAMC,EAAE,GAAGF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACG,OAAN,CAAcD,EAA1C;;AACA,MAAI,CAACA,EAAD,IAAO,CAACD,KAAZ,EAAmB;AACjB,WAAO,IAAP;AACD;;AAMD,MAAIA,KAAK,YAAYG,eAArB,EAAgC;AAC9B,WAAOH,KAAP;AACD,GAFD,MAEO,IAAIA,KAAK,CAACI,WAAN,IAAqBJ,KAAK,CAACI,WAAN,CAAkBC,IAAlB,KAA2B,QAApD,EAA8D;AAEnEL,IAAAA,KAAK,GAAG;AAACM,MAAAA,IAAI,EAAEN;AAAP,KAAR;AACD;;AAED,MAAIO,wBAAoD,GAAG,IAA3D;;AACA,MAAIP,KAAK,CAACQ,UAAV,EAAsB;AACpBD,IAAAA,wBAAwB,4CACGP,KAAK,CAACM,IAAN,CAAWG,MAAX,GAAoB,CAApB,cADH,CAAxB;AAGD;;AAED,MAAMC,OAAO,GAAG,IAAIP,eAAJ,CAAcF,EAAd,kCACXD,KADW;AAEdW,IAAAA,UAAU,gDACLf,0BADK,GAELW,wBAFK,GAILR,KAAK,CAACa,KAAN,CAAYC,iBAJP;AAFI,KAAhB;AAUAhB,EAAAA,gBAAgB,CAACa,OAAO,CAACI,EAAT,CAAhB,GAA+B,IAA/B;AACA,SAAOJ,OAAP;AACD;;AAEM,SAASK,cAAT,CAAwBL,OAAxB,EAA4C;AACjD,MAAI,CAACA,OAAD,IAAY,EAAEA,OAAO,YAAYP,eAArB,CAAhB,EAAiD;AAC/C;AACD;;AACD,MAAIN,gBAAgB,CAACa,OAAO,CAACI,EAAT,CAApB,EAAkC;AAChCJ,IAAAA,OAAO,CAACM,MAAR;AACA,WAAOnB,gBAAgB,CAACa,OAAO,CAACI,EAAT,CAAvB;AACD;AACF","sourcesContent":["import {Texture2D} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nimport type Layer from '../lib/layer';\n\nconst DEFAULT_TEXTURE_PARAMETERS: Record<number, number> = {\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n};\n\n// Track the textures that are created by us. They need to be released when they are no longer used.\nconst internalTextures: Record<string, Texture2D> = {};\n\nexport function createTexture(layer: Layer, image: any): Texture2D | null {\n  const gl = layer.context && layer.context.gl;\n  if (!gl || !image) {\n    return null;\n  }\n\n  // image could be one of:\n  //  - Texture2D\n  //  - Browser object: Image, ImageData, ImageData, HTMLCanvasElement, HTMLVideoElement, ImageBitmap\n  //  - Plain object: {width: <number>, height: <number>, data: <Uint8Array>}\n  if (image instanceof Texture2D) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    // Browser object\n    image = {data: image};\n  }\n\n  let specialTextureParameters: Record<string, any> | null = null;\n  if (image.compressed) {\n    specialTextureParameters = {\n      [GL.TEXTURE_MIN_FILTER]: image.data.length > 1 ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR\n    };\n  }\n\n  const texture = new Texture2D(gl, {\n    ...image,\n    parameters: {\n      ...DEFAULT_TEXTURE_PARAMETERS,\n      ...specialTextureParameters,\n      // @ts-expect-error textureParameter may not be defined\n      ...layer.props.textureParameters\n    }\n  });\n  // Track this texture\n  internalTextures[texture.id] = true;\n  return texture;\n}\n\nexport function destroyTexture(texture: Texture2D) {\n  if (!texture || !(texture instanceof Texture2D)) {\n    return;\n  }\n  if (internalTextures[texture.id]) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}\n"],"file":"texture.js"}