"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@luma.gl/core");

var _pass = _interopRequireDefault(require("./pass"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ScreenPass = function (_Pass) {
  (0, _inherits2.default)(ScreenPass, _Pass);

  var _super = _createSuper(ScreenPass);

  function ScreenPass(gl, props) {
    var _this;

    (0, _classCallCheck2.default)(this, ScreenPass);
    _this = _super.call(this, gl, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "model", void 0);
    var module = props.module,
        fs = props.fs,
        id = props.id;
    _this.model = new _core.ClipSpace(gl, {
      id: id,
      fs: fs,
      modules: [module]
    });
    return _this;
  }

  (0, _createClass2.default)(ScreenPass, [{
    key: "render",
    value: function render(params) {
      var _this2 = this;

      var gl = this.gl;
      (0, _core.setParameters)(gl, {
        viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]
      });
      (0, _core.withParameters)(gl, {
        framebuffer: params.outputBuffer,
        clearColor: [0, 0, 0, 0]
      }, function () {
        return _this2._renderPass(gl, params);
      });
    }
  }, {
    key: "delete",
    value: function _delete() {
      this.model.delete();
      this.model = null;
    }
  }, {
    key: "_renderPass",
    value: function _renderPass(gl, options) {
      var inputBuffer = options.inputBuffer;
      (0, _core.clear)(gl, {
        color: true
      });
      this.model.draw({
        moduleSettings: this.props.moduleSettings,
        uniforms: {
          texture: inputBuffer,
          texSize: [inputBuffer.width, inputBuffer.height]
        },
        parameters: {
          depthWrite: false,
          depthTest: false
        }
      });
    }
  }]);
  return ScreenPass;
}(_pass.default);

exports.default = ScreenPass;
//# sourceMappingURL=screen-pass.js.map