{"version":3,"sources":["../../../../src/effects/lighting/lighting-effect.ts"],"names":["Texture2D","ProgramManager","AmbientLight","DirectionalLight","Matrix4","Vector3","ShadowPass","shadow","DEFAULT_AMBIENT_LIGHT_PROPS","color","intensity","DEFAULT_DIRECTIONAL_LIGHT_PROPS","direction","DEFAULT_SHADOW_COLOR","LightingEffect","constructor","props","key","lightSource","type","ambientLight","directionalLights","push","pointLights","_applyDefaultLights","some","light","preRender","gl","layers","layerFilter","viewports","onViewportActive","views","shadowMatrices","_calculateMatrices","shadowPasses","length","_createShadowPasses","programManager","getDefaultProgramManager","addDefaultModule","dummyShadowMap","width","height","i","shadowPass","render","moduleParameters","shadowLightId","getModuleParameters","layer","parameters","shadowMaps","shadowColor","lightSources","map","directionalLight","getProjectedLight","pointLight","cleanup","delete","removeDefaultModule","lightMatrices","viewMatrix","lookAt","eye","negate","shadowMap"],"mappings":"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","sourcesContent":["import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport {PointLight} from './point-light';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport ShadowPass from '../../passes/shadow-pass';\nimport shadow from '../../shaderlib/shadow/shadow';\n\nimport type Layer from '../../lib/layer';\nimport type {Effect, PreRenderOptions} from '../../lib/effect';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, 3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, -8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect implements Effect {\n  id = 'lighting-effect';\n  props = null;\n  shadowColor: number[] = DEFAULT_SHADOW_COLOR;\n\n  private shadow: boolean;\n  private ambientLight: AmbientLight | null = null;\n  private directionalLights: DirectionalLight[] = [];\n  private pointLights: PointLight[] = [];\n  private shadowPasses: ShadowPass[] = [];\n  private shadowMaps: Texture2D[] = [];\n  private dummyShadowMap: Texture2D | null = null;\n  private programManager?: ProgramManager;\n  private shadowMatrices?: Matrix4[];\n\n  constructor(props: Record<string, PointLight | DirectionalLight | AmbientLight> = {}) {\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource as DirectionalLight);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource as PointLight);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n  }\n\n  preRender(\n    gl: WebGLRenderingContext,\n    {layers, layerFilter, viewports, onViewportActive, views}: PreRenderOptions\n  ) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._calculateMatrices();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      // TODO - support multiple contexts\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (shadow) {\n        this.programManager.addDefaultModule(shadow);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer: Layer) {\n    const parameters: {\n      lightSources?: {\n        ambientLight: AmbientLight | null;\n        directionalLights: DirectionalLight[];\n        pointLights: PointLight[];\n      };\n      shadowMaps?: Texture2D[];\n      dummyShadowMap?: Texture2D;\n      shadowColor?: number[];\n      shadowMatrices?: Matrix4[];\n    } = this.shadow\n      ? {\n          shadowMaps: this.shadowMaps,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        }\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    parameters.lightSources = {\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n\n    return parameters;\n  }\n\n  cleanup(): void {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(shadow);\n      this.programManager = null;\n    }\n  }\n\n  private _calculateMatrices(): Matrix4[] {\n    const lightMatrices: Matrix4[] = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  private _createShadowPasses(gl: WebGLRenderingContext): void {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(gl);\n      this.shadowPasses[i] = shadowPass;\n      this.shadowMaps[i] = shadowPass.shadowMap;\n    }\n  }\n\n  private _applyDefaultLights(): void {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n"],"file":"lighting-effect.js"}