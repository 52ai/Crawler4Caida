{"version":3,"sources":["../../../src/lib/tooltip.ts"],"names":["defaultStyle","zIndex","position","pointerEvents","color","backgroundColor","padding","top","left","display","Tooltip","constructor","canvas","canvasParent","parentElement","el","document","createElement","className","Object","assign","style","appendChild","setTooltip","displayInfo","x","y","innerText","isVisible","text","html","innerHTML","transform","remove"],"mappings":";AAqBA,MAAMA,YAA0C,GAAG;AACjDC,EAAAA,MAAM,EAAE,GADyC;AAEjDC,EAAAA,QAAQ,EAAE,UAFuC;AAGjDC,EAAAA,aAAa,EAAE,MAHkC;AAIjDC,EAAAA,KAAK,EAAE,SAJ0C;AAKjDC,EAAAA,eAAe,EAAE,SALgC;AAMjDC,EAAAA,OAAO,EAAE,MANwC;AAOjDC,EAAAA,GAAG,EAAE,GAP4C;AAQjDC,EAAAA,IAAI,EAAE,GAR2C;AASjDC,EAAAA,OAAO,EAAE;AATwC,CAAnD;AAsBA,eAAe,MAAMC,OAAN,CAAc;AAK3BC,EAAAA,WAAW,CAACC,MAAD,EAA4B;AAAA,gCAJH,IAIG;;AAAA,uCAFlB,KAEkB;;AACrC,UAAMC,YAAY,GAAGD,MAAM,CAACE,aAA5B;;AACA,QAAID,YAAJ,EAAkB;AAChB,WAAKE,EAAL,GAAUC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACA,WAAKF,EAAL,CAAQG,SAAR,GAAoB,cAApB;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKL,EAAL,CAAQM,KAAtB,EAA6BrB,YAA7B;AACAa,MAAAA,YAAY,CAACS,WAAb,CAAyB,KAAKP,EAA9B;AACD;AACF;;AAEDQ,EAAAA,UAAU,CAACC,WAAD,EAA8BC,CAA9B,EAA0CC,CAA1C,EAA4D;AACpE,UAAMX,EAAE,GAAG,KAAKA,EAAhB;;AACA,QAAI,CAACA,EAAL,EAAS;AACP;AACD;;AAED,QAAI,OAAOS,WAAP,KAAuB,QAA3B,EAAqC;AACnCT,MAAAA,EAAE,CAACY,SAAH,GAAeH,WAAf;AACD,KAFD,MAEO,IAAI,CAACA,WAAL,EAAkB;AACvB,WAAKI,SAAL,GAAiB,KAAjB;AACAb,MAAAA,EAAE,CAACM,KAAH,CAASZ,OAAT,GAAmB,MAAnB;AACA;AACD,KAJM,MAIA;AACL,UAAIe,WAAW,CAACK,IAAhB,EAAsB;AACpBd,QAAAA,EAAE,CAACY,SAAH,GAAeH,WAAW,CAACK,IAA3B;AACD;;AACD,UAAIL,WAAW,CAACM,IAAhB,EAAsB;AACpBf,QAAAA,EAAE,CAACgB,SAAH,GAAeP,WAAW,CAACM,IAA3B;AACD;;AACD,UAAIN,WAAW,CAACN,SAAhB,EAA2B;AACzBH,QAAAA,EAAE,CAACG,SAAH,GAAeM,WAAW,CAACN,SAA3B;AACD;;AACDC,MAAAA,MAAM,CAACC,MAAP,CAAcL,EAAE,CAACM,KAAjB,EAAwBG,WAAW,CAACH,KAApC;AACD;;AACD,SAAKO,SAAL,GAAiB,IAAjB;AACAb,IAAAA,EAAE,CAACM,KAAH,CAASZ,OAAT,GAAmB,OAAnB;AACAM,IAAAA,EAAE,CAACM,KAAH,CAASW,SAAT,uBAAkCP,CAAlC,iBAA0CC,CAA1C;AACD;;AAEDO,EAAAA,MAAM,GAAS;AACb,QAAI,KAAKlB,EAAT,EAAa;AACX,WAAKA,EAAL,CAAQkB,MAAR;AACA,WAAKlB,EAAL,GAAU,IAAV;AACD;AACF;;AAjD0B","sourcesContent":["// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global document */\nconst defaultStyle: Partial<CSSStyleDeclaration> = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\n\nexport type TooltipContent =\n  | null\n  | string\n  | {\n      text?: string;\n      html?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    };\n\nexport default class Tooltip {\n  private el: HTMLDivElement | null = null;\n\n  isVisible: boolean = false;\n\n  constructor(canvas: HTMLCanvasElement) {\n    const canvasParent = canvas.parentElement;\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n  }\n\n  setTooltip(displayInfo: TooltipContent, x?: number, y?: number): void {\n    const el = this.el;\n    if (!el) {\n      return;\n    }\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n      Object.assign(el.style, displayInfo.style);\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n  }\n\n  remove(): void {\n    if (this.el) {\n      this.el.remove();\n      this.el = null;\n    }\n  }\n}\n"],"file":"tooltip.js"}