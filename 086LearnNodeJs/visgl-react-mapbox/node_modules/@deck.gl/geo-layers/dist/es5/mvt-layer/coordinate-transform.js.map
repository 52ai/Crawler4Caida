{"version":3,"sources":["../../../src/mvt-layer/coordinate-transform.ts"],"names":["availableTransformations","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","viewport","pointX","pointY","nw","se","x","y","unprojectFlat","getPoints","geometry","bbox","map","g","multiPoint","line","multiLineString","lineString","polygon","polygonRing","multiPolygon","transform","projectFlat","west","north","east","south","projectedBbox","coordinates","type"],"mappings":"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","sourcesContent":["import {Viewport} from '@deck.gl/core';\nimport {lerp} from '@math.gl/core';\nimport {GeoBoundingBox} from '../tile-layer/types';\n\nconst availableTransformations = {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n};\n\nfunction Point([pointX, pointY]: [number, number], [nw, se]: number[][], viewport: Viewport) {\n  const x = lerp(nw[0], se[0], pointX);\n  const y = lerp(nw[1], se[1], pointY);\n\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox: number[][], viewport: Viewport) {\n  return geometry.map(g => Point(g, bbox, viewport));\n}\n\nfunction MultiPoint(multiPoint, bbox: number[][], viewport: Viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox: number[][], viewport: Viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox: number[][], viewport: Viewport) {\n  return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\n\nfunction Polygon(polygon, bbox: number[][], viewport: Viewport) {\n  return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\n\nfunction MultiPolygon(multiPolygon, bbox: number[][], viewport: Viewport) {\n  return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\n\nexport function transform(geometry, bbox: GeoBoundingBox, viewport: Viewport) {\n  const nw = viewport.projectFlat([bbox.west, bbox.north]);\n  const se = viewport.projectFlat([bbox.east, bbox.south]);\n  const projectedBbox = [nw, se];\n\n  return {\n    ...geometry,\n    coordinates: availableTransformations[geometry.type](\n      geometry.coordinates,\n      projectedBbox,\n      viewport\n    )\n  };\n}\n"],"file":"coordinate-transform.js"}