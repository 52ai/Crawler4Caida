{"version":3,"sources":["../../../src/geo-cell-layer/GeoCellLayer.ts"],"names":["CompositeLayer","PolygonLayer","defaultProps","GeoCellLayer","indexToBounds","renderLayers","elevationScale","extruded","wireframe","filled","stroked","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","lineJointRounded","lineMiterLimit","lineDashJustified","getElevation","getFillColor","getLineColor","getLineWidth","props","updateTriggers","material","transitions","CellLayer","getSubLayerClass","getSubLayerProps","id"],"mappings":";AAAA,SAAQA,cAAR,QAAmF,eAAnF;AACA,SAAQC,YAAR,QAA8C,iBAA9C;AAEA,MAAMC,YAA6C,GAAG,EACpD,GAAGD,YAAY,CAACC;AADoC,CAAtD;AAOA,eAAe,MAAMC,YAAN,SAAyDH,cAAzD,CAEb;AAKAI,EAAAA,aAAa,GAA0C;AACrD,WAAO,IAAP;AACD;;AAEDC,EAAAA,YAAY,GAA8B;AAExC,UAAM;AACJC,MAAAA,cADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,SAHI;AAIJC,MAAAA,MAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,cANI;AAOJC,MAAAA,cAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,kBATI;AAUJC,MAAAA,gBAVI;AAWJC,MAAAA,cAXI;AAYJC,MAAAA,iBAZI;AAaJC,MAAAA,YAbI;AAcJC,MAAAA,YAdI;AAeJC,MAAAA,YAfI;AAgBJC,MAAAA;AAhBI,QAiBF,KAAKC,KAjBT;AAoBA,UAAM;AAACC,MAAAA,cAAD;AAAiBC,MAAAA,QAAjB;AAA2BC,MAAAA;AAA3B,QAA0C,KAAKH,KAArD;AAGA,UAAMI,SAAS,GAAG,KAAKC,gBAAL,CAAsB,MAAtB,EAA8B1B,YAA9B,CAAlB;AACA,WAAO,IAAIyB,SAAJ,CACL;AACEjB,MAAAA,MADF;AAEED,MAAAA,SAFF;AAIED,MAAAA,QAJF;AAKED,MAAAA,cALF;AAOEI,MAAAA,OAPF;AAQEC,MAAAA,cARF;AASEC,MAAAA,cATF;AAUEC,MAAAA,kBAVF;AAWEC,MAAAA,kBAXF;AAYEC,MAAAA,gBAZF;AAaEC,MAAAA,cAbF;AAcEC,MAAAA,iBAdF;AAgBEO,MAAAA,QAhBF;AAiBEC,MAAAA,WAjBF;AAmBEP,MAAAA,YAnBF;AAoBEC,MAAAA,YApBF;AAqBEC,MAAAA,YArBF;AAsBEC,MAAAA;AAtBF,KADK,EAyBL,KAAKO,gBAAL,CAAsB;AACpBC,MAAAA,EAAE,EAAE,MADgB;AAEpBN,MAAAA,cAAc,EAAEA,cAAc,IAAI;AAChCL,QAAAA,YAAY,EAAEK,cAAc,CAACL,YADG;AAEhCC,QAAAA,YAAY,EAAEI,cAAc,CAACJ,YAFG;AAGhCC,QAAAA,YAAY,EAAEG,cAAc,CAACH,YAHG;AAIhCC,QAAAA,YAAY,EAAEE,cAAc,CAACF;AAJG;AAFd,KAAtB,CAzBK,EAkCL,KAAKjB,aAAL,EAlCK,CAAP;AAoCD;;AAvED;;gBAFmBD,Y,eAGA,c;;gBAHAA,Y,kBAIGD,Y","sourcesContent":["import {CompositeLayer, CompositeLayerProps, Layer, LayersList, DefaultProps} from '@deck.gl/core';\nimport {PolygonLayer, PolygonLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<GeoCellLayerProps> = {\n  ...PolygonLayer.defaultProps\n};\n\n/** All properties supported by GeoCellLayer. */\nexport type GeoCellLayerProps<DataT = any> = PolygonLayerProps<DataT> & CompositeLayerProps<DataT>;\n\nexport default class GeoCellLayer<DataT = any, ExtraProps = {}> extends CompositeLayer<\n  Required<GeoCellLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'GeoCellLayer';\n  static defaultProps = defaultProps;\n\n  /** Implement to generate props to create geometry. */\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    return null;\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    // Rendering props underlying layer\n    const {\n      elevationScale,\n      extruded,\n      wireframe,\n      filled,\n      stroked,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified,\n      getElevation,\n      getFillColor,\n      getLineColor,\n      getLineWidth\n    } = this.props;\n\n    // Accessor props for underlying layers\n    const {updateTriggers, material, transitions} = this.props;\n\n    // Filled Polygon Layer\n    const CellLayer = this.getSubLayerClass('cell', PolygonLayer);\n    return new CellLayer(\n      {\n        filled,\n        wireframe,\n\n        extruded,\n        elevationScale,\n\n        stroked,\n        lineWidthUnits,\n        lineWidthScale,\n        lineWidthMinPixels,\n        lineWidthMaxPixels,\n        lineJointRounded,\n        lineMiterLimit,\n        lineDashJustified,\n\n        material,\n        transitions,\n\n        getElevation,\n        getFillColor,\n        getLineColor,\n        getLineWidth\n      },\n      this.getSubLayerProps({\n        id: 'cell',\n        updateTriggers: updateTriggers && {\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth\n        }\n      }),\n      this.indexToBounds()\n    );\n  }\n}\n"],"file":"GeoCellLayer.js"}