{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer.ts"],"names":["DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","getScene","gltf","scenes","scene","getAnimator","animator","_animations","sizeScale","min","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","getPosition","x","position","getColor","_lighting","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","loaders","GLTFLoader","ScenegraphLayer","modules","project32","picking","props","push","pbr","vs","fs","attributeManager","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","accessor","transition","instanceColors","colorFormat","length","normalized","defaultValue","instanceModelMatrix","MATRIX_ATTRIBUTES","params","oldProps","_updateScenegraph","_applyAnimationsProp","state","context","_deleteScenegraph","gl","scenegraphData","ScenegraphNode","gltfObjects","_getModelOptions","then","setNeedsRedraw","log","deprecated","options","layer","_applyAllAttributes","setState","warn","attributesAvailable","allAttributes","getAttributes","traverse","model","_setModelAttributes","animationsProp","animations","getAnimations","Object","keys","sort","forEach","key","animation","assign","isFinite","number","findResult","find","name","delete","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","isInstanced","transpileToGLSL100","getShaders","useTangents","changedAttributes","moduleParameters","parameters","animate","timeline","getTime","viewport","opacity","coordinateSystem","numInstances","getNumInstances","worldMatrix","setInstanceCount","updateModuleSettings","draw","uniforms","composeModelMatrix","sceneModelMatrix","u_Camera","getUniforms","project_uCameraPosition","Layer"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport {isWebGL2} from '@luma.gl/core';\nimport {pbr} from '@luma.gl/shadertools';\nimport {\n  ScenegraphNode,\n  GroupNode,\n  GLTFAnimator,\n  GLTFEnvironment,\n  createGLTFObjects\n} from '@luma.gl/experimental';\nimport GL from '@luma.gl/constants';\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nimport type {\n  UpdateParameters,\n  LayerContext,\n  LayerProps,\n  Position,\n  Color,\n  Accessor,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [255, 255, 255, 255];\n\nexport type ScenegraphLayerProps<DataT = any> = _ScenegraphLayerProps<DataT> & LayerProps<DataT>;\n\ntype _ScenegraphLayerProps<DataT> = {\n  // TODO - define in luma.gl\n  /**\n   * A url for a glTF model or scenegraph loaded via a [scenegraph loader](https://loaders.gl/docs/specifications/category-scenegraph)\n   */\n  scenegraph: any;\n  /**\n   * Create a luma.gl GroupNode from the resolved scenegraph prop\n   */\n  getScene?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GroupNode;\n  /**\n   * Create a luma.gl GLTFAnimator from the resolved scenegraph prop\n   */\n  getAnimator?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GLTFAnimator;\n  /**\n   * (Experimental) animation configurations. Requires `_animate` on deck object.\n   */\n  _animations?: {\n    [name: number | string | '*']: {\n      /** If the animation is playing */\n      playing?: boolean;\n      /** Start time of the animation, default `0` */\n      startTime?: number;\n      /** Speed multiplier of the animation, default `1` */\n      speed?: number;\n    };\n  } | null;\n  /**\n   * (Experimental) lighting mode\n   * @default 'flat'\n   */\n  _lighting?: 'flat' | 'pbr';\n  /**\n   * (Experimental) lighting environment. Requires `_lighting` to be `'pbr'`.\n   */\n  _imageBasedLightingEnvironment?:\n    | null\n    | GLTFEnvironment\n    | ((context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}) => GLTFEnvironment);\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * @default [255, 255, 255, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The minimum size in pixels for one unit of the scene.\n   * @default 0\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels for one unit of the scene.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  sizeMaxPixels?: number;\n};\n\nconst defaultProps: DefaultProps<ScenegraphLayerProps> = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  sizeMinPixels: {type: 'number', min: 0, value: 0},\n  sizeMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  loaders: [GLTFLoader]\n};\n\n/** Render a number of instances of a complete glTF scenegraph. */\nexport default class ScenegraphLayer<DataT = any, ExtraPropsT = {}> extends Layer<\n  ExtraPropsT & Required<_ScenegraphLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'ScenegraphLayer';\n\n  state!: {\n    scenegraph: GroupNode;\n    animator: GLTFAnimator;\n    attributesAvailable?: boolean;\n  };\n\n  getShaders() {\n    const modules = [project32, picking];\n\n    if (this.props._lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    return {vs, fs, modules};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined for primitive layers\n    attributeManager!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph();\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this._deleteScenegraph();\n  }\n\n  private _updateScenegraph(): void {\n    const props = this.props;\n    const {gl} = this.context;\n    let scenegraphData: any = null;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/experimental function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n      scenegraphData = {gltf, ...gltfObjects};\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw()); // eslint-disable-line @typescript-eslint/no-floating-promises\n    } else if (props.scenegraph) {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      )();\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  private _applyAllAttributes(scenegraph: GroupNode): void {\n    if (this.state.attributesAvailable) {\n      // attributeManager is always defined for primitive layers\n      const allAttributes = this.getAttributeManager()!.getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  private _applyAnimationsProp(\n    scenegraph: GroupNode,\n    animator: GLTFAnimator,\n    animationsProp: any\n  ): void {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  private _deleteScenegraph(): void {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  private _getModelOptions(): any {\n    const {_imageBasedLightingEnvironment} = this.props;\n\n    let env: GLTFEnvironment | null = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        isInstanced: true,\n        transpileToGLSL100: !isWebGL2(this.context.gl),\n        ...this.getShaders()\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.timeline.getTime());\n      this.setNeedsRedraw();\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, sizeMinPixels, sizeMaxPixels, opacity, coordinateSystem} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          sizeMinPixels,\n          sizeMaxPixels,\n          composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          // eslint-disable-next-line camelcase\n          u_Camera: model.model.getUniforms().project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n"],"file":"scenegraph-layer.js"}