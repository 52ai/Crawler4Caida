{"version":3,"sources":["../../src/google-maps-overlay.ts"],"names":["HIDE_ALL_LAYERS","GL_STATE","depthMask","depthTest","blend","blendFunc","blendEquation","noop","defaultProps","interleaved","GoogleMapsOverlay","props","setProps","map","_map","_overlay","setMap","UNINITIALIZED","google","maps","RenderingType","renderingType","getRenderingType","_createOverlay","addListener","Object","assign","_deck","style","parentStyle","canvas","parentElement","params","pickObject","pickMultipleObjects","pickObjects","VECTOR","isVectorMap","WebGLOverlayView","OverlayView","overlay","onAdd","onContextRestored","_onContextRestored","bind","onDraw","_onDrawVectorInterleaved","_onAdd","_onDrawVectorOverlay","onContextLost","_onContextLost","draw","_onDrawRaster","onRemove","_onRemove","gl","_customRender","requestRedraw","deck","animationLoop","_renderFrame","ab","getParameter","onRender","bindBuffer","layerFilter","width","height","left","top","rest","altitude","viewState","repeat","redraw","transformer","isInitialized","_framebuffer","needsRedraw","clearRedrawFlags","viewport","scissor","stencilFunc","_drawLayers","clearCanvas"],"mappings":"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","sourcesContent":["/* global google */\nimport {getParameters, setParameters, withParameters} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport {\n  createDeckInstance,\n  destroyDeckInstance,\n  getViewPropsFromOverlay,\n  getViewPropsFromCoordinateTransformer\n} from './utils';\nimport {Deck} from '@deck.gl/core';\n\nimport type {DeckProps} from '@deck.gl/core';\n\nconst HIDE_ALL_LAYERS = () => false;\nconst GL_STATE = {\n  depthMask: true,\n  depthTest: true,\n  blend: true,\n  blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n  blendEquation: GL.FUNC_ADD\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nconst defaultProps = {\n  interleaved: true\n};\n\nexport type GoogleMapsOverlayProps = DeckProps & {\n  interleaved?: boolean;\n};\n\nexport default class GoogleMapsOverlay {\n  private props: GoogleMapsOverlayProps = {};\n  private _map: google.maps.Map | null = null;\n  private _deck: Deck | null = null;\n  private _overlay: google.maps.WebGLOverlayView | google.maps.OverlayView | null = null;\n\n  constructor(props: GoogleMapsOverlayProps) {\n    this.setProps({...defaultProps, ...props});\n  }\n\n  /* Public API */\n\n  /** Add/remove the overlay from a map. */\n  setMap(map: google.maps.Map | null): void {\n    if (map === this._map) {\n      return;\n    }\n    if (this._map) {\n      this._overlay?.setMap(null);\n      this._map = null;\n    }\n    if (map) {\n      this._map = map;\n      const {UNINITIALIZED} = google.maps.RenderingType;\n      const renderingType = map.getRenderingType();\n      if (renderingType !== UNINITIALIZED) {\n        this._createOverlay(map);\n      } else {\n        map.addListener('renderingtype_changed', () => {\n          this._createOverlay(map);\n        });\n      }\n    }\n  }\n\n  /**\n   * Update (partial) props.\n   */\n  setProps(props: Partial<GoogleMapsOverlayProps>): void {\n    Object.assign(this.props, props);\n    if (this._deck) {\n      if (props.style) {\n        // @ts-ignore accessing protected member\n        const parentStyle = this._deck.canvas.parentElement.style;\n        Object.assign(parentStyle, props.style);\n        props.style = null;\n      }\n      this._deck.setProps(props);\n    }\n  }\n\n  /** Equivalent of `deck.pickObject`. */\n  pickObject(params) {\n    return this._deck && this._deck.pickObject(params);\n  }\n\n  /** Equivalent of `deck.pickObjects`.  */\n  pickMultipleObjects(params) {\n    return this._deck && this._deck.pickMultipleObjects(params);\n  }\n\n  /** Equivalent of `deck.pickMultipleObjects`. */\n  pickObjects(params) {\n    return this._deck && this._deck.pickObjects(params);\n  }\n\n  /** Remove the overlay and release all underlying resources. */\n  finalize() {\n    this.setMap(null);\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  /* Private API */\n  _createOverlay(map: google.maps.Map) {\n    const {interleaved} = this.props;\n    const {VECTOR, UNINITIALIZED} = google.maps.RenderingType;\n    const renderingType = map.getRenderingType();\n    if (renderingType === UNINITIALIZED) {\n      return;\n    }\n\n    const isVectorMap = renderingType === VECTOR && google.maps.WebGLOverlayView;\n    const OverlayView = isVectorMap ? google.maps.WebGLOverlayView : google.maps.OverlayView;\n    const overlay = new OverlayView();\n\n    if (overlay instanceof google.maps.WebGLOverlayView) {\n      if (interleaved) {\n        overlay.onAdd = noop;\n        overlay.onContextRestored = this._onContextRestored.bind(this);\n        overlay.onDraw = this._onDrawVectorInterleaved.bind(this);\n      } else {\n        overlay.onAdd = this._onAdd.bind(this);\n        overlay.onContextRestored = noop;\n        overlay.onDraw = this._onDrawVectorOverlay.bind(this);\n      }\n      overlay.onContextLost = this._onContextLost.bind(this);\n    } else {\n      overlay.onAdd = this._onAdd.bind(this);\n      overlay.draw = this._onDrawRaster.bind(this);\n    }\n    overlay.onRemove = this._onRemove.bind(this);\n\n    this._overlay = overlay;\n    this._overlay.setMap(map);\n  }\n\n  _onAdd() {\n    // @ts-ignore (TS2345) map is defined at this stage\n    this._deck = createDeckInstance(this._map, this._overlay, this._deck, this.props);\n  }\n\n  _onContextRestored({gl}) {\n    if (!this._map || !this._overlay) {\n      return;\n    }\n    const _customRender = () => {\n      if (this._overlay) {\n        (this._overlay as google.maps.WebGLOverlayView).requestRedraw();\n      }\n    };\n    const deck = createDeckInstance(this._map, this._overlay, this._deck, {\n      gl,\n      _customRender,\n      ...this.props\n    });\n    this._deck = deck;\n\n    // By default, animationLoop._renderFrame invokes\n    // animationLoop.onRender. We override this to wrap\n    // in withParameters so we don't modify the GL state\n    // @ts-ignore accessing protected member\n    const {animationLoop} = deck;\n    animationLoop._renderFrame = () => {\n      const ab = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n      withParameters(gl, {}, () => {\n        animationLoop.onRender();\n      });\n      gl.bindBuffer(gl.ARRAY_BUFFER, ab);\n    };\n  }\n\n  _onContextLost() {\n    // TODO this isn't working\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  _onRemove() {\n    this._deck?.setProps({layerFilter: HIDE_ALL_LAYERS});\n  }\n\n  _onDrawRaster() {\n    if (!this._deck || !this._map) {\n      return;\n    }\n    const deck = this._deck;\n\n    const {width, height, left, top, ...rest} = getViewPropsFromOverlay(\n      this._map,\n      this._overlay as google.maps.OverlayView\n    );\n\n    // @ts-ignore accessing protected member\n    const parentStyle = deck.canvas.parentElement.style;\n    parentStyle.left = `${left}px`;\n    parentStyle.top = `${top}px`;\n\n    const altitude = 10000;\n    deck.setProps({\n      width,\n      height,\n      viewState: {altitude, repeat: true, ...rest}\n    });\n    // Deck is initialized\n    deck.redraw();\n  }\n\n  // Vector code path\n  _onDrawVectorInterleaved({gl, transformer}) {\n    if (!this._deck || !this._map) {\n      return;\n    }\n\n    const deck = this._deck;\n\n    deck.setProps({\n      ...getViewPropsFromCoordinateTransformer(this._map, transformer),\n\n      // Using external gl context - do not set css size\n      width: null,\n      height: null\n    });\n\n    if (deck.isInitialized) {\n      // As an optimization, some renders are to an separate framebuffer\n      // which we need to pass onto deck\n      const _framebuffer = getParameters(gl, GL.FRAMEBUFFER_BINDING);\n      deck.setProps({_framebuffer});\n\n      // Camera changed, will trigger a map repaint right after this\n      // Clear any change flag triggered by setting viewState so that deck does not request\n      // a second repaint\n      deck.needsRedraw({clearRedrawFlags: true});\n\n      // Workaround for bug in Google maps where viewport state is wrong\n      // TODO remove once fixed\n      setParameters(gl, {\n        viewport: [0, 0, gl.canvas.width, gl.canvas.height],\n        scissor: [0, 0, gl.canvas.width, gl.canvas.height],\n        stencilFunc: [gl.ALWAYS, 0, 255, gl.ALWAYS, 0, 255]\n      });\n\n      withParameters(gl, GL_STATE, () => {\n        deck._drawLayers('google-vector', {\n          clearCanvas: false\n        });\n      });\n    }\n  }\n\n  _onDrawVectorOverlay({transformer}) {\n    if (!this._deck || !this._map) {\n      return;\n    }\n\n    const deck = this._deck;\n\n    deck.setProps({\n      ...getViewPropsFromCoordinateTransformer(this._map, transformer)\n    });\n    deck.redraw();\n  }\n}\n"],"file":"google-maps-overlay.js"}