{"version":3,"sources":["../../../src/column-layer/grid-cell-layer.ts"],"names":["CubeGeometry","UNIT","ColumnLayer","defaultProps","cellSize","type","min","value","offset","GridCellLayer","getGeometry","diskResolution","draw","uniforms","elevationScale","extruded","coverage","angle","radiusUnits","props","state","model","setUniforms","radius","edgeDistance","isWireframe"],"mappings":";AAoBA,SAAQA,YAAR,QAA2B,eAA3B;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,OAAOC,WAAP,MAA4C,gBAA5C;AAIA,MAAMC,YAA8C,GAAG;AACrDC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAtB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAD2C;AAErDC,EAAAA,MAAM,EAAE;AAACH,IAAAA,IAAI,EAAE,OAAP;AAAgBE,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAvB;AAF6C,CAAvD;AAgBA,eAAe,MAAME,aAAN,SAA2DP,WAA3D,CAGb;AAIAQ,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC1B,WAAO,IAAIX,YAAJ,EAAP;AACD;;AAEDY,EAAAA,IAAI,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAa;AACf,UAAM;AAACC,MAAAA,cAAD;AAAiBC,MAAAA,QAAjB;AAA2BP,MAAAA,MAA3B;AAAmCQ,MAAAA,QAAnC;AAA6CZ,MAAAA,QAA7C;AAAuDa,MAAAA,KAAvD;AAA8DC,MAAAA;AAA9D,QAA6E,KAAKC,KAAxF;AACA,SAAKC,KAAL,CAAWC,KAAX,CACGC,WADH,CACeT,QADf,EAEGS,WAFH,CAEe;AACXC,MAAAA,MAAM,EAAEnB,QAAQ,GAAG,CADR;AAEXc,MAAAA,WAAW,EAAEjB,IAAI,CAACiB,WAAD,CAFN;AAGXD,MAAAA,KAHW;AAIXT,MAAAA,MAJW;AAKXO,MAAAA,QALW;AAMXC,MAAAA,QANW;AAOXF,MAAAA,cAPW;AAQXU,MAAAA,YAAY,EAAE,CARH;AASXC,MAAAA,WAAW,EAAE;AATF,KAFf,EAaGb,IAbH;AAcD;;AAxBD;;gBAHmBH,a,eAIA,e;;gBAJAA,a,kBAKGN,Y","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CubeGeometry} from '@luma.gl/core';\nimport {UNIT} from '@deck.gl/core';\nimport ColumnLayer, {ColumnLayerProps} from './column-layer';\n\nimport type {DefaultProps} from '@deck.gl/core';\n\nconst defaultProps: DefaultProps<GridCellLayerProps> = {\n  cellSize: {type: 'number', min: 0, value: 1000},\n  offset: {type: 'array', value: [1, 1]}\n};\n\n/** All properties supported by GridCellLayer. */\nexport type GridCellLayerProps<DataT = any> = _GridCellLayerProps & ColumnLayerProps<DataT>;\n\n/** Properties added by GridCellLayer. */\ntype _GridCellLayerProps = {\n  /**\n   * @default 1000\n   */\n  cellSize?: number;\n};\n\nexport default class GridCellLayer<DataT = any, ExtraPropsT = {}> extends ColumnLayer<\n  DataT,\n  ExtraPropsT & Required<_GridCellLayerProps>\n> {\n  static layerName = 'GridCellLayer';\n  static defaultProps = defaultProps;\n\n  getGeometry(diskResolution) {\n    return new CubeGeometry();\n  }\n\n  draw({uniforms}) {\n    const {elevationScale, extruded, offset, coverage, cellSize, angle, radiusUnits} = this.props;\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        radius: cellSize / 2,\n        radiusUnits: UNIT[radiusUnits],\n        angle,\n        offset,\n        extruded,\n        coverage,\n        elevationScale,\n        edgeDistance: 1,\n        isWireframe: false\n      })\n      .draw();\n  }\n}\n"],"file":"grid-cell-layer.js"}