{"version":3,"sources":["../../../src/layers/quadbin-tileset-2d.ts"],"names":["QuadbinTileset2D","opts","map","tileToQuadbin","i","Number","Tileset2D"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;IAIqBA,gB;;;;;;;;;;;;WAEnB,wBAAeC,IAAf,EAAyC;AACvC,aAAO,iHACWA,IADX,EAEJC,GAFI,CAEAC,2BAFA,EAGJD,GAHI,CAGA,UAAAE,CAAC;AAAA,eAAK;AAACA,UAAAA,CAAC,EAADA;AAAD,SAAL;AAAA,OAHD,CAAP;AAID;;;WAGD,yBAAyC;AAAA,UAA9BA,CAA8B,QAA9BA,CAA8B;AACvC,aAAOA,CAAP;AACD;;;WAGD,gCAAuC;AAAA,UAAtBA,CAAsB,SAAtBA,CAAsB;AACrC,+HAA6B,iCAAcA,CAAd,CAA7B;AACD;;;WAGD,4BAA2C;AAAA,UAA9BA,CAA8B,SAA9BA,CAA8B;AACzC,aAAOC,MAAM,CAAC,+BAAYD,CAAZ,CAAD,CAAb;AACD;;;WAGD,+BAAwD;AAAA,UAAxCA,CAAwC,SAAxCA,CAAwC;AACtD,aAAO;AAACA,QAAAA,CAAC,EAAE,iCAAcA,CAAd;AAAJ,OAAP;AACD;;;EA3B2CE,qB","sourcesContent":["import {_Tileset2D as Tileset2D} from '@deck.gl/geo-layers';\nimport {tileToQuadbin, quadbinToTile, quadbinParent, quadbinZoom} from './quadbin-utils';\n\ntype QuadbinTileIndex = {i: string};\n\nexport default class QuadbinTileset2D extends Tileset2D {\n  // @ts-expect-error for spatial indices, TileSet2d should be parametrized by TileIndexT\n  getTileIndices(opts): QuadbinTileIndex[] {\n    return super\n      .getTileIndices(opts)\n      .map(tileToQuadbin)\n      .map(i => ({i}));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileId({i}: QuadbinTileIndex): string {\n    return i;\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileMetadata({i}: QuadbinTileIndex) {\n    return super.getTileMetadata(quadbinToTile(i));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileZoom({i}: QuadbinTileIndex): number {\n    return Number(quadbinZoom(i));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getParentIndex({i}: QuadbinTileIndex): QuadbinTileIndex {\n    return {i: quadbinParent(i)};\n  }\n}\n"],"file":"quadbin-tileset-2d.js"}