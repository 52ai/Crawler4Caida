"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexToBigInt = indexToBigInt;
exports.bigIntToIndex = bigIntToIndex;
exports.tileToQuadbin = tileToQuadbin;
exports.quadbinToTile = quadbinToTile;
exports.quadbinZoom = quadbinZoom;
exports.quadbinParent = quadbinParent;
exports.quadbinToWorldBounds = quadbinToWorldBounds;
exports.getQuadbinPolygon = getQuadbinPolygon;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _webMercator = require("@math.gl/web-mercator");

var TILE_SIZE = 512;
var B = [0x5555555555555555n, 0x3333333333333333n, 0x0f0f0f0f0f0f0f0fn, 0x00ff00ff00ff00ffn, 0x0000ffff0000ffffn, 0x00000000ffffffffn];
var S = [0n, 1n, 2n, 4n, 8n, 16n];

function indexToBigInt(index) {
  return BigInt("0x".concat(index));
}

function bigIntToIndex(quadbin) {
  return quadbin.toString(16);
}

function tileToQuadbin(tile) {
  if (tile.z < 0 || tile.z > 26) {
    throw new Error('Wrong zoom');
  }

  var z = BigInt(tile.z);
  var x = BigInt(tile.x) << 32n - z;
  var y = BigInt(tile.y) << 32n - z;

  for (var i = 0; i < 5; i++) {
    var s = S[5 - i];
    var b = B[4 - i];
    x = (x | x << s) & b;
    y = (y | y << s) & b;
  }

  var quadbin = 0x4000000000000000n | 1n << 59n | z << 52n | (x | y << 1n) >> 12n | 0xfffffffffffffn >> z * 2n;
  return bigIntToIndex(quadbin);
}

function quadbinToTile(index) {
  var quadbin = indexToBigInt(index);
  var mode = quadbin >> 59n & 7n;
  var modeDep = quadbin >> 57n & 3n;
  var z = quadbin >> 52n & 0x1fn;
  var q = (quadbin & 0xfffffffffffffn) << 12n;

  if (mode !== 1n && modeDep !== 0n) {
    throw new Error('Wrong mode');
  }

  var x = q;
  var y = q >> 1n;

  for (var i = 0; i < 6; i++) {
    var s = S[i];
    var b = B[i];
    x = (x | x >> s) & b;
    y = (y | y >> s) & b;
  }

  x = x >> 32n - z;
  y = y >> 32n - z;
  return {
    z: Number(z),
    x: Number(x),
    y: Number(y)
  };
}

function quadbinZoom(index) {
  var quadbin = indexToBigInt(index);
  return quadbin >> 52n & 0x1fn;
}

function quadbinParent(index) {
  var quadbin = indexToBigInt(index);
  var zparent = quadbinZoom(index) - 1n;
  var parent = quadbin & ~(0x1fn << 52n) | zparent << 52n | 0xfffffffffffffn >> zparent * 2n;
  return bigIntToIndex(parent);
}

function quadbinToWorldBounds(quadbin) {
  var _quadbinToTile = quadbinToTile(quadbin),
      x = _quadbinToTile.x,
      y = _quadbinToTile.y,
      z = _quadbinToTile.z;

  var mask = 1 << z;
  var scale = mask / TILE_SIZE;
  return [[x / scale, TILE_SIZE - y / scale], [(x + 0.99) / scale, TILE_SIZE - (y + 0.99) / scale]];
}

function getQuadbinPolygon(quadbin) {
  var _quadbinToWorldBounds = quadbinToWorldBounds(quadbin),
      _quadbinToWorldBounds2 = (0, _slicedToArray2.default)(_quadbinToWorldBounds, 2),
      topLeft = _quadbinToWorldBounds2[0],
      bottomRight = _quadbinToWorldBounds2[1];

  var _worldToLngLat = (0, _webMercator.worldToLngLat)(topLeft),
      _worldToLngLat2 = (0, _slicedToArray2.default)(_worldToLngLat, 2),
      w = _worldToLngLat2[0],
      n = _worldToLngLat2[1];

  var _worldToLngLat3 = (0, _webMercator.worldToLngLat)(bottomRight),
      _worldToLngLat4 = (0, _slicedToArray2.default)(_worldToLngLat3, 2),
      e = _worldToLngLat4[0],
      s = _worldToLngLat4[1];

  return [e, n, e, s, w, s, w, n, e, n];
}
//# sourceMappingURL=quadbin-utils.js.map