{"version":3,"sources":["../../../src/api/layer-map.ts"],"names":["SCALE_FUNCS","linear","scaleLinear","ordinal","scaleOrdinal","log","scaleLog","point","scalePoint","quantile","scaleQuantile","quantize","scaleQuantize","sqrt","scaleSqrt","custom","scaleThreshold","identity","v","UNKNOWN_COLOR","AGGREGATION","average","maximum","minimum","sum","OPACITY_MAP","getFillColor","getLineColor","getTextColor","AGGREGATION_FUNC","values","accessor","length","median","mode","pop","stddev","deviation","variance","hexToRGBA","c","r","g","b","opacity","sharedPropMap","color","isVisible","label","textLabel","alignment","anchor","size","visConfig","enable3d","elevationScale","filled","strokeColor","stroked","thickness","radius","wireframe","customMarkersPropsMap","aggregationVisConfig","colorAggregation","x","colorRange","colors","map","coverage","elevationPercentile","percentile","defaultProps","lineMiterLimit","lineWidthUnits","pointRadiusUnits","rounded","wrapLongitude","mergePropMaps","a","getLayer","type","config","dataset","basePropMap","customMarkers","getTileLayer","geoColumn","getPosition","d","coordinates","hexagonId","columns","hex_id","layerTypeDefs","Layer","GeoJsonLayer","propMap","outline","geojson","grid","CPUGridLayer","worldUnitSize","cellSize","heatmap","HeatmapLayer","hexagon","HexagonLayer","H3HexagonLayer","getHexagon","layer","layerFromTileDataset","formatTiles","TILE_FORMATS","MVT","scheme","H3TileLayer","QuadbinTileLayer","MVTLayer","CartoTileLayer","aggregationExp","aggregationResLevel","data","tiles","tileUrl","URL","searchParams","get","uniqueIdProperty","domainFromAttribute","attribute","scaleType","scaleLength","categories","category","filter","undefined","quantiles","min","max","domainFromValues","sort","d0","d1","calculateDomain","name","tilestats","attributes","layers","find","features","properties","Array","isArray","normalizeAccessor","opacityToAlpha","Math","round","pow","getAccessorKeys","aggregation","keys","concat","toUpperCase","findAccessorKey","key","Error","getColorValueAccessor","aggregator","p","getColorAccessor","range","colorMap","scale","domain","scaleColor","forEach","value","push","slice","unknown","alpha","accessorKeys","propertyValue","FALLBACK_ICON","getIconUrlAccessor","field","fallbackUrl","maxIconSize","urlToUnpackedIcon","url","id","width","height","mask","unknownValue","othersMarker","unknownIcon","mapping","markerMap","markerUrl","getMaxMarkerSize","visualChannels","radiusRange","radiusField","sizeField","ceil","negateAccessor","i","getSizeAccessor","FORMATS","date","s","moment","utc","format","integer","float","timestamp","default","String","getTextAccessor","getTextPixelOffsetAccessor","padding","signX","signY","sizeOffset","calculateOffset"],"mappings":"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","sourcesContent":["import {deviation, extent, groupSort, median, variance} from 'd3-array';\nimport {rgb} from 'd3-color';\nimport {\n  scaleLinear,\n  scaleOrdinal,\n  scaleLog,\n  scalePoint,\n  scaleQuantile,\n  scaleQuantize,\n  scaleSqrt,\n  scaleThreshold\n} from 'd3-scale';\nimport {format as d3Format} from 'd3-format';\nimport moment from 'moment-timezone';\n\nimport {Accessor, Layer, _ConstructorOf as ConstructorOf} from '@deck.gl/core';\nimport {CPUGridLayer, HeatmapLayer, HexagonLayer} from '@deck.gl/aggregation-layers';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {H3HexagonLayer, MVTLayer} from '@deck.gl/geo-layers';\n\nimport CartoTileLayer from '../layers/carto-tile-layer';\nimport H3TileLayer from '../layers/h3-tile-layer';\nimport QuadbinTileLayer from '../layers/quadbin-tile-layer';\nimport {TILE_FORMATS} from './maps-api-common';\nimport {assert} from '../utils';\nimport {\n  CustomMarkersRange,\n  MapDataset,\n  MapTextSubLayerConfig,\n  TextLabel,\n  VisConfig,\n  VisualChannelField,\n  VisualChannels\n} from './types';\n\nconst SCALE_FUNCS = {\n  linear: scaleLinear,\n  ordinal: scaleOrdinal,\n  log: scaleLog,\n  point: scalePoint,\n  quantile: scaleQuantile,\n  quantize: scaleQuantize,\n  sqrt: scaleSqrt,\n  custom: scaleThreshold\n};\nexport type SCALE_TYPE = keyof typeof SCALE_FUNCS;\n\nfunction identity<T>(v: T): T {\n  return v;\n}\n\nconst UNKNOWN_COLOR = '#868d91';\n\nexport const AGGREGATION = {\n  average: 'MEAN',\n  maximum: 'MAX',\n  minimum: 'MIN',\n  sum: 'SUM'\n};\n\nexport const OPACITY_MAP = {\n  getFillColor: 'opacity',\n  getLineColor: 'strokeOpacity',\n  getTextColor: 'opacity'\n};\n\nconst AGGREGATION_FUNC = {\n  'count unique': (values, accessor) => groupSort(values, v => v.length, accessor).length,\n  median,\n  // Unfortunately mode() is only available in d3-array@3+ which is ESM only\n  mode: (values, accessor) => groupSort(values, v => v.length, accessor).pop(),\n  stddev: deviation,\n  variance\n};\n\nconst hexToRGBA = c => {\n  const {r, g, b, opacity} = rgb(c);\n  return [r, g, b, 255 * opacity];\n};\n\n// Kepler -> Deck.gl\nconst sharedPropMap = {\n  color: 'getFillColor',\n  isVisible: 'visible',\n  label: 'cartoLabel',\n  textLabel: {\n    alignment: 'getTextAlignmentBaseline',\n    anchor: 'getTextAnchor',\n    color: 'getTextColor',\n    size: 'getTextSize'\n  },\n  visConfig: {\n    enable3d: 'extruded',\n    elevationScale: 'elevationScale',\n    filled: 'filled',\n    strokeColor: 'getLineColor',\n    stroked: 'stroked',\n    thickness: 'getLineWidth',\n    radius: 'getPointRadius',\n    wireframe: 'wireframe'\n  }\n};\n\nconst customMarkersPropsMap = {\n  color: 'getIconColor',\n  visConfig: {\n    radius: 'getIconSize'\n  }\n};\n\nconst aggregationVisConfig = {\n  colorAggregation: x => ({colorAggregation: AGGREGATION[x] || AGGREGATION.sum}),\n  colorRange: x => ({colorRange: x.colors.map(hexToRGBA)}),\n  coverage: 'coverage',\n  elevationPercentile: ['elevationLowerPercentile', 'elevationUpperPercentile'],\n  percentile: ['lowerPercentile', 'upperPercentile']\n};\n\nconst defaultProps = {\n  lineMiterLimit: 2,\n  lineWidthUnits: 'pixels',\n  pointRadiusUnits: 'pixels',\n  rounded: true,\n  wrapLongitude: false\n};\n\nfunction mergePropMaps(a: Record<string, any> = {}, b: Record<string, any> = {}) {\n  return {...a, ...b, visConfig: {...a.visConfig, ...b.visConfig}};\n}\n\nexport function getLayer(\n  type: string,\n  config: MapTextSubLayerConfig,\n  dataset: MapDataset\n): {Layer: ConstructorOf<Layer>; propMap: any; defaultProps: any} {\n  let basePropMap: any = sharedPropMap;\n\n  if (config.visConfig?.customMarkers && !config.textLabel) {\n    basePropMap = mergePropMaps(sharedPropMap, customMarkersPropsMap);\n  }\n  if (type === 'mvt' || type === 'tileset' || type === 'h3' || type === 'quadbin') {\n    return getTileLayer(dataset, basePropMap);\n  }\n\n  const geoColumn = dataset?.geoColumn;\n  const getPosition = d => d[geoColumn].coordinates;\n\n  const hexagonId = config.columns?.hex_id;\n\n  const layerTypeDefs: Record<\n    string,\n    {Layer: ConstructorOf<Layer>; propMap?: any; defaultProps?: any}\n  > = {\n    point: {\n      Layer: GeoJsonLayer,\n      propMap: {visConfig: {outline: 'stroked'}}\n    },\n    geojson: {\n      Layer: GeoJsonLayer\n    },\n    grid: {\n      Layer: CPUGridLayer,\n      propMap: {visConfig: {...aggregationVisConfig, worldUnitSize: x => ({cellSize: 1000 * x})}},\n      defaultProps: {getPosition}\n    },\n    heatmap: {\n      Layer: HeatmapLayer,\n      propMap: {visConfig: {...aggregationVisConfig, radius: 'radiusPixels'}},\n      defaultProps: {getPosition}\n    },\n    hexagon: {\n      Layer: HexagonLayer,\n      propMap: {visConfig: {...aggregationVisConfig, worldUnitSize: x => ({radius: 1000 * x})}},\n      defaultProps: {getPosition}\n    },\n    hexagonId: {\n      Layer: H3HexagonLayer,\n      propMap: {visConfig: {coverage: 'coverage'}},\n      defaultProps: {getHexagon: d => d[hexagonId], stroked: false}\n    }\n  };\n\n  const layer = layerTypeDefs[type];\n\n  assert(layer, `Unsupported layer type: ${type}`);\n  return {\n    ...layer,\n    propMap: mergePropMaps(basePropMap, layer.propMap),\n    defaultProps: {...defaultProps, ...layer.defaultProps}\n  };\n}\n\nexport function layerFromTileDataset(\n  formatTiles: string | null = TILE_FORMATS.MVT,\n  scheme: string\n): typeof CartoTileLayer | typeof H3TileLayer | typeof MVTLayer | typeof QuadbinTileLayer {\n  if (scheme === 'h3') {\n    return H3TileLayer;\n  }\n  if (scheme === 'quadbin') {\n    return QuadbinTileLayer;\n  }\n  if (formatTiles === TILE_FORMATS.MVT) {\n    return MVTLayer;\n  }\n\n  // formatTiles === BINARY|JSON|GEOJSON\n  return CartoTileLayer;\n}\n\nfunction getTileLayer(dataset: MapDataset, basePropMap) {\n  const {\n    aggregationExp,\n    aggregationResLevel,\n    data: {\n      scheme,\n      tiles: [tileUrl]\n    }\n  } = dataset;\n  /* global URL */\n  const formatTiles = new URL(tileUrl).searchParams.get('formatTiles');\n\n  return {\n    Layer: layerFromTileDataset(formatTiles, scheme),\n    propMap: basePropMap,\n    defaultProps: {\n      ...defaultProps,\n      ...(aggregationExp && {aggregationExp}),\n      ...(aggregationResLevel && {aggregationResLevel}),\n      formatTiles,\n      uniqueIdProperty: 'geoid'\n    }\n  };\n}\n\nfunction domainFromAttribute(attribute, scaleType: SCALE_TYPE, scaleLength: number) {\n  if (scaleType === 'ordinal' || scaleType === 'point') {\n    return attribute.categories.map(c => c.category).filter(c => c !== undefined && c !== null);\n  }\n\n  if (scaleType === 'quantile' && attribute.quantiles) {\n    return attribute.quantiles[scaleLength];\n  }\n\n  let {min} = attribute;\n  if (scaleType === 'log' && min === 0) {\n    min = 1e-5;\n  }\n  return [min, attribute.max];\n}\n\nfunction domainFromValues(values, scaleType: SCALE_TYPE) {\n  if (scaleType === 'ordinal' || scaleType === 'point') {\n    return groupSort(\n      values,\n      g => -g.length,\n      d => d\n    );\n  } else if (scaleType === 'quantile') {\n    return values.sort((a, b) => a - b);\n  } else if (scaleType === 'log') {\n    const [d0, d1] = extent(values as number[]);\n    return [d0 === 0 ? 1e-5 : d0, d1];\n  }\n  return extent(values);\n}\n\nfunction calculateDomain(data, name, scaleType, scaleLength?) {\n  if (data.tilestats) {\n    // Tileset data type\n    const {attributes} = data.tilestats.layers[0];\n    const attribute = attributes.find(a => a.attribute === name);\n    return domainFromAttribute(attribute, scaleType, scaleLength);\n  } else if (data.features) {\n    // GeoJSON data type\n    const values = data.features.map(({properties}) => properties[name]);\n    return domainFromValues(values, scaleType);\n  } else if (Array.isArray(data) && data[0][name] !== undefined) {\n    // JSON data type\n    const values = data.map(properties => properties[name]);\n    return domainFromValues(values, scaleType);\n  }\n\n  return [0, 1];\n}\n\nfunction normalizeAccessor(accessor, data) {\n  if (data.features || data.tilestats) {\n    return ({properties}) => {\n      return accessor(properties);\n    };\n  }\n  return accessor;\n}\n\nexport function opacityToAlpha(opacity?: number) {\n  return opacity !== undefined ? Math.round(255 * Math.pow(opacity, 1 / 2.2)) : 255;\n}\n\nfunction getAccessorKeys(name: string, aggregation: string | undefined): string[] {\n  let keys = [name];\n  if (aggregation) {\n    // Snowflake will capitalized the keys, need to check lower and upper case version\n    keys = keys.concat([aggregation, aggregation.toUpperCase()].map(a => `${name}_${a}`));\n  }\n  return keys;\n}\n\nfunction findAccessorKey(keys: string[], properties): string[] {\n  for (const key of keys) {\n    if (key in properties) {\n      return [key];\n    }\n  }\n\n  throw new Error(`Could not find property for any accessor key: ${keys}`);\n}\n\nexport function getColorValueAccessor({name}, colorAggregation, data: any) {\n  const aggregator = AGGREGATION_FUNC[colorAggregation];\n  const accessor = values => aggregator(values, p => p[name]);\n  return normalizeAccessor(accessor, data);\n}\n\nexport function getColorAccessor(\n  {name},\n  scaleType: SCALE_TYPE,\n  {aggregation, range: {colors, colorMap}},\n  opacity: number | undefined,\n  data: any\n) {\n  const scale = SCALE_FUNCS[scaleType as any]();\n  let domain: (string | number)[] = [];\n  let scaleColor: string[] = [];\n\n  if (Array.isArray(colorMap)) {\n    colorMap.forEach(([value, color]) => {\n      domain.push(value);\n      scaleColor.push(color);\n    });\n  } else {\n    domain = calculateDomain(data, name, scaleType, colors.length);\n    scaleColor = colors;\n  }\n\n  if (scaleType === 'ordinal') {\n    domain = domain.slice(0, scaleColor.length);\n  }\n\n  scale.domain(domain);\n  scale.range(scaleColor);\n  scale.unknown(UNKNOWN_COLOR);\n  const alpha = opacityToAlpha(opacity);\n\n  let accessorKeys = getAccessorKeys(name, aggregation);\n  const accessor = properties => {\n    if (!(accessorKeys[0] in properties)) {\n      accessorKeys = findAccessorKey(accessorKeys, properties);\n    }\n    const propertyValue = properties[accessorKeys[0]];\n    const {r, g, b} = rgb(scale(propertyValue));\n    return [r, g, b, propertyValue === null ? 0 : alpha];\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nconst FALLBACK_ICON =\n  'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB2aWV3Qm94PSIwIDAgMTAwIDEwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4NCiAgPGNpcmNsZSBjeD0iNTAiIGN5PSI1MCIgcj0iNTAiLz4NCjwvc3ZnPg==';\n\nexport function getIconUrlAccessor(\n  field: VisualChannelField | null | undefined,\n  fallbackUrl: string | null | undefined,\n  range: CustomMarkersRange | null | undefined,\n  maxIconSize: number,\n  data: any\n) {\n  const urlToUnpackedIcon = (url: string) => ({\n    id: `${url}@@${maxIconSize}`,\n    url,\n    width: maxIconSize,\n    height: maxIconSize,\n    mask: true\n  });\n  let unknownValue = fallbackUrl || FALLBACK_ICON;\n\n  if (range?.othersMarker) {\n    unknownValue = range.othersMarker;\n  }\n\n  const unknownIcon = urlToUnpackedIcon(unknownValue);\n  if (!range || !field) {\n    return () => unknownIcon;\n  }\n\n  const mapping: Record<string, any> = {};\n  for (const {value, markerUrl} of range.markerMap) {\n    if (markerUrl) {\n      mapping[value] = urlToUnpackedIcon(markerUrl);\n    }\n  }\n\n  const accessor = properties => {\n    const propertyValue = properties[field.name];\n    return mapping[propertyValue] || unknownIcon;\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nexport function getMaxMarkerSize(visConfig: VisConfig, visualChannels: VisualChannels): number {\n  const {radiusRange, radius} = visConfig;\n  const {radiusField, sizeField} = visualChannels;\n  const field = radiusField || sizeField;\n  return Math.ceil(radiusRange && field ? radiusRange[1] : radius);\n}\n\nexport function negateAccessor<T>(accessor: Accessor<T, number>): Accessor<T, number> {\n  return typeof accessor === 'function' ? (d, i) => -accessor(d, i) : -accessor;\n}\n\nexport function getSizeAccessor(\n  {name},\n  scaleType: SCALE_TYPE | undefined,\n  aggregation,\n  range: Iterable<Range> | undefined,\n  data: any\n) {\n  const scale = scaleType ? SCALE_FUNCS[scaleType as any]() : identity;\n  if (scaleType) {\n    scale.domain(calculateDomain(data, name, scaleType));\n    scale.range(range);\n  }\n\n  let accessorKeys = getAccessorKeys(name, aggregation);\n  const accessor = properties => {\n    if (!(accessorKeys[0] in properties)) {\n      accessorKeys = findAccessorKey(accessorKeys, properties);\n    }\n    const propertyValue = properties[accessorKeys[0]];\n    return scale(propertyValue);\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nconst FORMATS: Record<string, (value: any) => string> = {\n  date: s => moment.utc(s).format('MM/DD/YY HH:mm:ssa'),\n  integer: d3Format('i'),\n  float: d3Format('.5f'),\n  timestamp: s => moment.utc(s).format('X'),\n  default: String\n};\n\nexport function getTextAccessor({name, type}: VisualChannelField, data) {\n  const format = FORMATS[type] || FORMATS.default;\n  const accessor = properties => {\n    return format(properties[name]);\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nexport function getTextPixelOffsetAccessor(\n  {alignment, anchor, size}: TextLabel,\n  radius\n): Accessor<unknown, [number, number]> {\n  const padding = 20;\n  const signX = anchor === 'middle' ? 0 : anchor === 'start' ? 1 : -1;\n  const signY = alignment === 'center' ? 0 : alignment === 'bottom' ? 1 : -1;\n  const sizeOffset = alignment === 'center' ? 0 : size;\n\n  const calculateOffset = (r: number): [number, number] => [\n    signX * (r + padding),\n    signY * (r + padding + sizeOffset)\n  ];\n\n  return typeof radius === 'function'\n    ? d => {\n        return calculateOffset(radius(d));\n      }\n    : calculateOffset(radius);\n}\n\nexport {domainFromValues as _domainFromValues};\n"],"file":"layer-map.js"}