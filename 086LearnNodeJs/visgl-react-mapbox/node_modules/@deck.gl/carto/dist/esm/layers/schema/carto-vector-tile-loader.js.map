{"version":3,"sources":["../../../../src/layers/schema/carto-vector-tile-loader.ts"],"names":["TileReader","parsePbf","unpackProperties","CartoVectorTileLoader","name","version","id","module","extensions","mimeTypes","category","worker","parse","arrayBuffer","options","parseCartoVectorTile","parseSync","tile","points","lines","polygons","data","properties"],"mappings":"AAGA,SAAQA,UAAR,QAAyB,cAAzB;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,QAAyC,qBAAzC;AAEA,MAAMC,qBAAuC,GAAG;AAC9CC,EAAAA,IAAI,EAAE,mBADwC;AAE9CC,EAAAA,OAAO,EAAE,GAFqC;AAG9CC,EAAAA,EAAE,EAAE,iBAH0C;AAI9CC,EAAAA,MAAM,EAAE,OAJsC;AAK9CC,EAAAA,UAAU,EAAE,CAAC,KAAD,CALkC;AAM9CC,EAAAA,SAAS,EAAE,CAAC,mCAAD,CANmC;AAO9CC,EAAAA,QAAQ,EAAE,UAPoC;AAQ9CC,EAAAA,MAAM,EAAE,KARsC;AAS9CC,EAAAA,KAAK,EAAE,OAAOC,WAAP,EAAoBC,OAApB,KAAgCC,oBAAoB,CAACF,WAAD,EAAcC,OAAd,CATb;AAU9CE,EAAAA,SAAS,EAAED,oBAVmC;AAW9CD,EAAAA,OAAO,EAAE;AAXqC,CAAhD;;AAcA,SAASC,oBAAT,CACEF,WADF,EAEEC,OAFF,EAGyB;AACvB,MAAI,CAACD,WAAL,EAAkB,OAAO,IAAP;AAClB,QAAMI,IAAI,GAAGhB,QAAQ,CAACY,WAAD,EAAcb,UAAd,CAArB;AAEA,QAAM;AAACkB,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA4BH,IAAlC;AACA,QAAMI,IAAI,GAAG;AACXH,IAAAA,MAAM,EAAE,EAAC,GAAGA,MAAJ;AAAYI,MAAAA,UAAU,EAAEpB,gBAAgB,CAACgB,MAAM,CAACI,UAAR;AAAxC,KADG;AAEXH,IAAAA,KAAK,EAAE,EAAC,GAAGA,KAAJ;AAAWG,MAAAA,UAAU,EAAEpB,gBAAgB,CAACiB,KAAK,CAACG,UAAP;AAAvC,KAFI;AAGXF,IAAAA,QAAQ,EAAE,EAAC,GAAGA,QAAJ;AAAcE,MAAAA,UAAU,EAAEpB,gBAAgB,CAACkB,QAAQ,CAACE,UAAV;AAA1C;AAHC,GAAb;AAOA,SAAOD,IAAP;AACD;;AAED,eAAelB,qBAAf","sourcesContent":["import {LoaderOptions, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {BinaryFeatures} from '@loaders.gl/schema';\n\nimport {TileReader} from './carto-tile';\nimport {parsePbf, unpackProperties} from './tile-loader-utils';\n\nconst CartoVectorTileLoader: LoaderWithParser = {\n  name: 'CARTO Vector Tile',\n  version: '1',\n  id: 'cartoVectorTile',\n  module: 'carto',\n  extensions: ['pbf'],\n  mimeTypes: ['application/vnd.carto-vector-tile'],\n  category: 'geometry',\n  worker: false,\n  parse: async (arrayBuffer, options) => parseCartoVectorTile(arrayBuffer, options),\n  parseSync: parseCartoVectorTile,\n  options: {}\n};\n\nfunction parseCartoVectorTile(\n  arrayBuffer: ArrayBuffer,\n  options?: LoaderOptions\n): BinaryFeatures | null {\n  if (!arrayBuffer) return null;\n  const tile = parsePbf(arrayBuffer, TileReader);\n\n  const {points, lines, polygons} = tile;\n  const data = {\n    points: {...points, properties: unpackProperties(points.properties)},\n    lines: {...lines, properties: unpackProperties(lines.properties)},\n    polygons: {...polygons, properties: unpackProperties(polygons.properties)}\n  };\n\n  // Note: there is slight, difference in `numericProps` type, however geojson/mvtlayer can cope with this\n  return data as unknown as BinaryFeatures;\n}\n\nexport default CartoVectorTileLoader;\n"],"file":"carto-vector-tile-loader.js"}