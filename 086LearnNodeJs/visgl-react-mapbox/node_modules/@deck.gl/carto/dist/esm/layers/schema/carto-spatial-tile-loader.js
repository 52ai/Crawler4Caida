import { TileReader } from './carto-spatial-tile';
import { parsePbf, unpackProperties } from './tile-loader-utils';
import { binaryToSpatialjson } from './spatialjson-utils';
const CartoSpatialTileLoader = {
  name: 'CARTO Spatial Tile',
  version: '1',
  id: 'cartoSpatialTile',
  module: 'carto',
  extensions: ['pbf'],
  mimeTypes: ['application/vnd.carto-spatial-tile'],
  category: 'geometry',
  worker: false,
  parse: async (arrayBuffer, options) => parseCartoSpatialTile(arrayBuffer, options),
  parseSync: parseCartoSpatialTile,
  options: {}
};

function parseCartoSpatialTile(arrayBuffer, options) {
  if (!arrayBuffer) return null;
  const tile = parsePbf(arrayBuffer, TileReader);
  const {
    cells
  } = tile;
  const data = {
    cells: { ...cells,
      properties: unpackProperties(cells.properties)
    }
  };
  return binaryToSpatialjson(data);
}

export default CartoSpatialTileLoader;
//# sourceMappingURL=carto-spatial-tile-loader.js.map