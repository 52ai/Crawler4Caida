{"version":3,"sources":["../../../src/components/use-map-control.js"],"names":["mapControlDefaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","capturePointerMove","mapControlPropTypes","PropTypes","bool","onMount","thisRef","ref","containerRef","current","eventManager","context","undefined","events","wheel","evt","props","stopPropagation","onScroll","panstart","onDragStart","anyclick","onNativeClick","click","onClick","dblclick","onDoubleClick","pointermove","onPointerMove","watch","off","useMapControl","MapContext","_thisRef","state"],"mappings":"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","sourcesContent":["import {useContext, useRef, useEffect} from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\n\nexport const mapControlDefaultProps = {\n  captureScroll: false,\n  captureDrag: true,\n  captureClick: true,\n  captureDoubleClick: true,\n  capturePointerMove: false\n};\n\nexport const mapControlPropTypes = {\n  /** Event handling */\n  captureScroll: PropTypes.bool,\n  // Stop map pan & rotate\n  captureDrag: PropTypes.bool,\n  // Stop map click\n  captureClick: PropTypes.bool,\n  // Stop map double click\n  captureDoubleClick: PropTypes.bool,\n  // Stop map pointer move\n  capturePointerMove: PropTypes.bool\n};\n\nfunction onMount(thisRef) {\n  const ref = thisRef.containerRef.current;\n  const {eventManager} = thisRef.context;\n  if (!ref || !eventManager) {\n    return undefined;\n  }\n\n  const events = {\n    wheel: evt => {\n      const {props} = thisRef;\n      if (props.captureScroll) {\n        evt.stopPropagation();\n      }\n      if (props.onScroll) {\n        props.onScroll(evt, thisRef);\n      }\n    },\n    panstart: evt => {\n      const {props} = thisRef;\n      if (props.captureDrag) {\n        evt.stopPropagation();\n      }\n      if (props.onDragStart) {\n        props.onDragStart(evt, thisRef);\n      }\n    },\n    anyclick: evt => {\n      const {props} = thisRef;\n      if (props.captureClick) {\n        evt.stopPropagation();\n      }\n      if (props.onNativeClick) {\n        props.onNativeClick(evt, thisRef);\n      }\n    },\n    click: evt => {\n      const {props} = thisRef;\n      if (props.captureClick) {\n        evt.stopPropagation();\n      }\n      if (props.onClick) {\n        props.onClick(evt, thisRef);\n      }\n    },\n    dblclick: evt => {\n      const {props} = thisRef;\n      if (props.captureDoubleClick) {\n        evt.stopPropagation();\n      }\n      if (props.onDoubleClick) {\n        props.onDoubleClick(evt, thisRef);\n      }\n    },\n    pointermove: evt => {\n      const {props} = thisRef;\n      if (props.capturePointerMove) {\n        evt.stopPropagation();\n      }\n      if (props.onPointerMove) {\n        props.onPointerMove(evt, thisRef);\n      }\n    }\n  };\n  eventManager.watch(events, ref);\n\n  // Clean up\n  return () => {\n    eventManager.off(events);\n  };\n}\n\nexport default function useMapControl(props = {}) {\n  const context = useContext(MapContext);\n  const containerRef = useRef(null);\n  const _thisRef = useRef({props, state: {}, context, containerRef});\n  const thisRef = _thisRef.current;\n\n  thisRef.props = props;\n  thisRef.context = context;\n\n  useEffect(() => onMount(thisRef), [context.eventManager]);\n\n  return thisRef;\n}\n"],"file":"use-map-control.js"}