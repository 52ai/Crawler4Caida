{"version":3,"sources":["../../../src/components/scale-control.js"],"names":["propTypes","Object","assign","mapControlPropTypes","className","PropTypes","string","style","object","maxWidth","number","unit","oneOf","defaultProps","mapControlDefaultProps","ScaleControl","props","context","containerRef","mapboxScaleControl","createMapboxScaleControl","map","control","mapboxgl","_map","_container","current","options","_onMove","position","React","memo"],"mappings":";;;;;;;;;;;;;;;AAmBA;;AAEA;;AACA;;AACA;;;;;;AAEA,IAAMA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,mCAAlB,EAAuC;AACvDC,EAAAA,SAAS,EAAEC,SAAS,CAACC,MADkC;AAEvDC,EAAAA,KAAK,EAAEF,SAAS,CAACG,MAFsC;AAGvDC,EAAAA,QAAQ,EAAEJ,SAAS,CAACK,MAHmC;AAIvDC,EAAAA,IAAI,EAAEN,SAAS,CAACO,KAAV,CAAgB,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CAAhB;AAJiD,CAAvC,CAAlB;AAOA,IAAMC,YAAY,GAAGZ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBY,sCAAlB,EAA0C;AAC7DV,EAAAA,SAAS,EAAE,EADkD;AAE7DK,EAAAA,QAAQ,EAAE,GAFmD;AAG7DE,EAAAA,IAAI,EAAE;AAHuD,CAA1C,CAArB;;AAMA,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,uBACK,gCAAcA,KAAd,CADL;AAAA,MACpBC,OADoB,kBACpBA,OADoB;AAAA,MACXC,YADW,kBACXA,YADW;;AAAA,kBAE4B,oBAAS,IAAT,CAF5B;AAAA;AAAA,MAEpBC,kBAFoB;AAAA,MAEAC,wBAFA;;AAI3B,uBAAU,YAAM;AACd,QAAIH,OAAO,CAACI,GAAZ,EAAiB;AACf,UAAMC,OAAO,GAAG,IAAIC,qBAASR,YAAb,EAAhB;AACAO,MAAAA,OAAO,CAACE,IAAR,GAAeP,OAAO,CAACI,GAAvB;AACAC,MAAAA,OAAO,CAACG,UAAR,GAAqBP,YAAY,CAACQ,OAAlC;AACAN,MAAAA,wBAAwB,CAACE,OAAD,CAAxB;AACD;AACF,GAPD,EAOG,CAACL,OAAO,CAACI,GAAT,CAPH;;AASA,MAAIF,kBAAJ,EAAwB;AACtBA,IAAAA,kBAAkB,CAACQ,OAAnB,GAA6BX,KAA7B;;AACAG,IAAAA,kBAAkB,CAACS,OAAnB;AACD;;AAED,MAAMrB,KAAK,GAAG,mBAAQ;AAAA;AAAQsB,MAAAA,QAAQ,EAAE;AAAlB,OAAiCb,KAAK,CAACT,KAAvC;AAAA,GAAR,EAAwD,CAACS,KAAK,CAACT,KAAP,CAAxD,CAAd;AAEA,SACE;AAAK,IAAA,KAAK,EAAEA,KAAZ;AAAmB,IAAA,SAAS,EAAES,KAAK,CAACZ;AAApC,KACE;AAAK,IAAA,GAAG,EAAEc,YAAV;AAAwB,IAAA,SAAS,EAAC;AAAlC,IADF,CADF;AAKD;;AAEDH,YAAY,CAACf,SAAb,GAAyBA,SAAzB;AACAe,YAAY,CAACF,YAAb,GAA4BA,YAA5B;;eAEeiB,KAAK,CAACC,IAAN,CAAWhB,YAAX,C","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useEffect, useState, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\nimport mapboxgl from '../utils/mapboxgl';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  maxWidth: PropTypes.number,\n  unit: PropTypes.oneOf(['imperial', 'metric', 'nautical'])\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  maxWidth: 100,\n  unit: 'metric'\n});\n\nfunction ScaleControl(props) {\n  const {context, containerRef} = useMapControl(props);\n  const [mapboxScaleControl, createMapboxScaleControl] = useState(null);\n\n  useEffect(() => {\n    if (context.map) {\n      const control = new mapboxgl.ScaleControl();\n      control._map = context.map;\n      control._container = containerRef.current;\n      createMapboxScaleControl(control);\n    }\n  }, [context.map]);\n\n  if (mapboxScaleControl) {\n    mapboxScaleControl.options = props;\n    mapboxScaleControl._onMove();\n  }\n\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={props.className}>\n      <div ref={containerRef} className=\"mapboxgl-ctrl mapboxgl-ctrl-scale\" />\n    </div>\n  );\n}\n\nScaleControl.propTypes = propTypes;\nScaleControl.defaultProps = defaultProps;\n\nexport default React.memo(ScaleControl);\n"],"file":"scale-control.js"}