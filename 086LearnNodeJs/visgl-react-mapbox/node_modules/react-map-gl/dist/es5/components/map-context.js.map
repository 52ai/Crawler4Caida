{"version":3,"sources":["../../../src/components/map-context.js"],"names":["MapContext","viewport","map","container","onViewportChange","onViewStateChange","eventManager","MapContextProvider","Provider","WrappedProvider","value","children","setMap","context"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAGA,IAAMA,UAAU,GAAG,yBAAc;AAI/BC,EAAAA,QAAQ,EAAE,IAJqB;AAM/BC,EAAAA,GAAG,EAAE,IAN0B;AAQ/BC,EAAAA,SAAS,EAAE,IARoB;AAW/BC,EAAAA,gBAAgB,EAAE,IAXa;AAY/BC,EAAAA,iBAAiB,EAAE,IAZY;AAe/BC,EAAAA,YAAY,EAAE;AAfiB,CAAd,CAAnB;AAmBO,IAAMC,kBAAkB,GAAGP,UAAU,CAACQ,QAAtC;;;AAGP,SAASC,eAAT,OAA4C;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,kBACpB,oBAAS,IAAT,CADoB;AAAA;AAAA,MACnCT,GADmC;AAAA,MAC9BU,MAD8B;;AAE1C,MAAMC,OAAO,GAAG,sBAAWb,UAAX,CAAhB;AAEAU,EAAAA,KAAK;AACHE,IAAAA,MAAM,EAANA;AADG,KAEAC,OAFA;AAGHX,IAAAA,GAAG,EAAGW,OAAO,IAAIA,OAAO,CAACX,GAApB,IAA4BA;AAH9B,KAIAQ,KAJA,CAAL;AAOA,SAAO,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAEA;AAA3B,KAAmCC,QAAnC,CAAP;AACD;;AAEDX,UAAU,CAACQ,QAAX,GAAsBC,eAAtB;eAEeT,U","sourcesContent":["import * as React from 'react';\nimport {createContext, useState, useContext} from 'react';\n\nconst MapContext = createContext({\n  /* Map context */\n\n  // Viewport\n  viewport: null,\n  // mapboxgl.Map instance\n  map: null,\n  // DOM element that contains the map\n  container: null,\n\n  /* Interaction callbacks */\n  onViewportChange: null,\n  onViewStateChange: null,\n\n  // EventManager instance\n  eventManager: null\n});\n\n// Save the original Provider component\nexport const MapContextProvider = MapContext.Provider;\n\n// And replace Provider with our own\nfunction WrappedProvider({value, children}) {\n  const [map, setMap] = useState(null);\n  const context = useContext(MapContext);\n\n  value = {\n    setMap,\n    ...context,\n    map: (context && context.map) || map,\n    ...value\n  };\n\n  return <MapContextProvider value={value}>{children}</MapContextProvider>;\n}\n\nMapContext.Provider = WrappedProvider;\n\nexport default MapContext;\n"],"file":"map-context.js"}