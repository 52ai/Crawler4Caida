{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["noop","propTypes","Object","assign","mapControlPropTypes","className","PropTypes","string","style","object","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","zoomInLabel","zoomOutLabel","compassLabel","defaultProps","mapControlDefaultProps","VERSION_LEGACY","VERSION_1_6","getUIVersion","mapboxVersion","updateViewport","context","props","opts","viewport","mapState","MapState","viewState","getViewportProps","LINEAR_TRANSITION_PROPS","renderButton","type","label","callback","children","renderCompass","uiVersion","map","version","bearing","transform","NavigationControl","containerRef","onZoomIn","zoom","onZoomOut","onResetNorth","pitch","position","React","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport {compareVersions} from '../utils/version';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool,\n  // Custom labels assigned to the controls\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\n\n// Mapbox version flags. CSS classes were changed in certain versions.\nconst VERSION_LEGACY = 1;\nconst VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nfunction updateViewport(context, props, opts) {\n  const {viewport} = context;\n  const mapState = new MapState(Object.assign({}, viewport, opts));\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction renderButton(type, label, callback, children) {\n  return (\n    <button\n      key={type}\n      className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n      type=\"button\"\n      title={label}\n      onClick={callback}\n    >\n      {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\n    </button>\n  );\n}\n\nfunction renderCompass(context) {\n  const uiVersion = useMemo(() => (context.map ? getUIVersion(context.map.version) : VERSION_1_6), [\n    context.map\n  ]);\n\n  const {bearing} = context.viewport;\n  const style = {transform: `rotate(${-bearing}deg)`};\n\n  return uiVersion === VERSION_1_6 ? (\n    <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\n  ) : (\n    <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\n  );\n}\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nfunction NavigationControl(props) {\n  const {context, containerRef} = useMapControl(props);\n\n  const onZoomIn = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom + 1});\n  };\n\n  const onZoomOut = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom - 1});\n  };\n\n  const onResetNorth = () => {\n    updateViewport(context, props, {bearing: 0, pitch: 0});\n  };\n\n  const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = props;\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        {showZoom && renderButton('zoom-in', zoomInLabel, onZoomIn)}\n        {showZoom && renderButton('zoom-out', zoomOutLabel, onZoomOut)}\n        {showCompass && renderButton('compass', compassLabel, onResetNorth, renderCompass(context))}\n      </div>\n    </div>\n  );\n}\n\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\n\nexport default React.memo(NavigationControl);\n"],"file":"navigation-control.js"}