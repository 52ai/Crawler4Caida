{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["noop","propTypes","Object","assign","mapControlPropTypes","className","PropTypes","string","style","object","label","disabledLabel","auto","bool","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","showAccuracyCircle","showUserHeading","onViewStateChange","func","onViewportChange","onGeolocate","defaultProps","mapControlDefaultProps","enableHighAccuracy","timeout","maxZoom","getBounds","position","center","mapboxgl","LngLat","coords","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","setupMapboxGeolocateControl","context","props","geolocateButton","control","GeolocateControl","_container","document","createElement","_map","on","_getUIString","_setupUI","map","_geolocateButton","eventManager","options","_watchState","classList","add","remove","updateCamera","viewport","fitBounds","zoom","newViewState","mapState","MapState","viewState","getViewportProps","LINEAR_TRANSITION_PROPS","thisRef","containerRef","geolocateButtonRef","mapboxGeolocateControl","createMapboxGeolocateControl","supportsGeolocation","setSupportsGeolocation","then","result","current","_updateCamera","_clearWatch","triggerGeolocate","trigger","_onZoom","React","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useRef, useEffect, useState, useCallback, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {document} from '../utils/globals';\nimport mapboxgl from '../utils/mapboxgl';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Custom label assigned to the control\n  label: PropTypes.string,\n  disabledLabel: PropTypes.string,\n  // Auto trigger instead of waiting for click\n  auto: PropTypes.bool,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n  showAccuracyCircle: PropTypes.bool,\n  showUserHeading: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  onGeolocate: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  label: 'Find My Location',\n  disabledLabel: 'Location Not Available',\n  auto: false,\n\n  // mapbox geolocate options\n  positionOptions: {enableHighAccuracy: false, timeout: 6000},\n  fitBoundsOptions: {maxZoom: 15},\n  trackUserLocation: false,\n  showUserLocation: true,\n  showUserHeading: false,\n  showAccuracyCircle: true,\n\n  onGeolocate: () => {}\n});\n\nfunction getBounds(position) {\n  const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n  const radius = position.coords.accuracy;\n  const bounds = center.toBounds(radius);\n\n  return [\n    [bounds._ne.lng, bounds._ne.lat],\n    [bounds._sw.lng, bounds._sw.lat]\n  ];\n}\n\nfunction setupMapboxGeolocateControl(context, props, geolocateButton) {\n  const control = new mapboxgl.GeolocateControl(props);\n\n  // Dummy placeholders so that _setupUI does not crash\n  control._container = document.createElement('div');\n  control._map = {\n    on: () => {},\n    _getUIString: () => ''\n  };\n  control._setupUI(true);\n  control._map = context.map;\n\n  // replace mapbox internal UI elements with ours\n  control._geolocateButton = geolocateButton;\n\n  // From _setupUI\n  // when the camera is changed (and it's not as a result of the Geolocation Control) change\n  // the watch mode to background watch, so that the marker is updated but not the camera.\n  const {eventManager} = context;\n  if (control.options.trackUserLocation && eventManager) {\n    eventManager.on('panstart', () => {\n      if (control._watchState === 'ACTIVE_LOCK') {\n        control._watchState = 'BACKGROUND';\n        geolocateButton.classList.add('mapboxgl-ctrl-geolocate-background');\n        geolocateButton.classList.remove('mapboxgl-ctrl-geolocate-active');\n      }\n    });\n  }\n\n  control.on('geolocate', props.onGeolocate);\n  return control;\n}\n\nfunction updateCamera(position, {context, props}) {\n  const bounds = getBounds(position);\n  const {longitude, latitude, zoom} = context.viewport.fitBounds(bounds, props.fitBoundsOptions);\n\n  const newViewState = Object.assign({}, context.viewport, {\n    longitude,\n    latitude,\n    zoom\n  });\n  const mapState = new MapState(newViewState);\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction GeolocateControl(props) {\n  const thisRef = useMapControl(props);\n  const {context, containerRef} = thisRef;\n  const geolocateButtonRef = useRef(null);\n  const [mapboxGeolocateControl, createMapboxGeolocateControl] = useState(null);\n  const [supportsGeolocation, setSupportsGeolocation] = useState(false);\n\n  useEffect(() => {\n    let control;\n\n    if (context.map) {\n      isGeolocationSupported().then(result => {\n        setSupportsGeolocation(result);\n\n        if (geolocateButtonRef.current) {\n          control = setupMapboxGeolocateControl(context, props, geolocateButtonRef.current);\n          // Overwrite Mapbox's GeolocateControl internal method\n          control._updateCamera = position => updateCamera(position, thisRef);\n          createMapboxGeolocateControl(control);\n        }\n      });\n    }\n\n    return () => {\n      if (control) {\n        control._clearWatch();\n      }\n    };\n  }, [context.map]);\n\n  const triggerGeolocate = useCallback(() => {\n    if (mapboxGeolocateControl) {\n      mapboxGeolocateControl.options = thisRef.props;\n      mapboxGeolocateControl.trigger();\n    }\n  }, [mapboxGeolocateControl]);\n\n  useEffect(() => {\n    if (props.auto) {\n      triggerGeolocate();\n    }\n  }, [mapboxGeolocateControl, props.auto]);\n\n  useEffect(() => {\n    if (mapboxGeolocateControl) {\n      mapboxGeolocateControl._onZoom();\n    }\n  }, [context.viewport.zoom]);\n\n  const {className, label, disabledLabel, trackUserLocation} = props;\n\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div key=\"geolocate-control\" className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        <button\n          key=\"geolocate\"\n          className={`mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate`}\n          ref={geolocateButtonRef}\n          disabled={!supportsGeolocation}\n          aria-pressed={!trackUserLocation}\n          type=\"button\"\n          title={supportsGeolocation ? label : disabledLabel}\n          aria-label={supportsGeolocation ? label : disabledLabel}\n          onClick={triggerGeolocate}\n        >\n          <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nGeolocateControl.propTypes = propTypes;\nGeolocateControl.defaultProps = defaultProps;\n\nexport default React.memo(GeolocateControl);\n"],"file":"geolocate-control.js"}