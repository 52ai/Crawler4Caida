{"version":3,"sources":["../../../src/components/attribution-control.js"],"names":["propTypes","Object","assign","mapControlPropTypes","toggleLabel","PropTypes","string","className","style","object","compact","bool","customAttribution","oneOfType","arrayOf","defaultProps","mapControlDefaultProps","setupAttributioncontrol","opts","map","container","attributionContainer","control","mapboxgl","AttributionControl","_map","_container","_innerContainer","_updateAttributions","_updateEditLink","on","_updateData","removeAttributionControl","off","props","context","containerRef","innerContainerRef","showCompact","setShowCompact","current","undefined","viewport","width","toggleAttribution","value","position","React","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useEffect, useCallback, useState, useRef, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\nimport mapboxgl from '../utils/mapboxgl';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  toggleLabel: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  compact: PropTypes.bool,\n  customAttribution: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  toggleLabel: 'Toggle Attribution'\n});\n\nfunction setupAttributioncontrol(opts, map, container, attributionContainer) {\n  const control = new mapboxgl.AttributionControl(opts);\n  control._map = map;\n  control._container = container;\n  control._innerContainer = attributionContainer;\n\n  // from AttributionControl.onAdd()\n  control._updateAttributions();\n  control._updateEditLink();\n  map.on('styledata', control._updateData);\n  map.on('sourcedata', control._updateData);\n\n  return control;\n}\n\nfunction removeAttributionControl(control) {\n  control._map.off('styledata', control._updateData);\n  control._map.off('sourcedata', control._updateData);\n}\n\nfunction AttributionControl(props) {\n  const {context, containerRef} = useMapControl(props);\n  const innerContainerRef = useRef(null);\n  const [showCompact, setShowCompact] = useState(false);\n\n  useEffect(() => {\n    let control;\n    if (context.map) {\n      control = setupAttributioncontrol(\n        {\n          customAttribution: props.customAttribution\n        },\n        context.map,\n        containerRef.current,\n        innerContainerRef.current\n      );\n    }\n\n    return () => control && removeAttributionControl(control);\n  }, [context.map]);\n\n  const compact = props.compact === undefined ? context.viewport.width <= 640 : props.compact;\n\n  useEffect(() => {\n    if (!compact && showCompact) {\n      setShowCompact(false);\n    }\n  }, [compact]);\n\n  const toggleAttribution = useCallback(() => setShowCompact(value => !value), []);\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={props.className}>\n      <div\n        ref={containerRef}\n        aria-pressed={showCompact}\n        className={`mapboxgl-ctrl mapboxgl-ctrl-attrib ${compact ? 'mapboxgl-compact' : ''} ${\n          showCompact ? 'mapboxgl-compact-show' : ''\n        }`}\n      >\n        <button\n          type=\"button\"\n          className=\"mapboxgl-ctrl-attrib-button\"\n          title={props.toggleLabel}\n          onClick={toggleAttribution}\n        />\n        <div ref={innerContainerRef} className=\"mapboxgl-ctrl-attrib-inner\" role=\"list\" />\n      </div>\n    </div>\n  );\n}\n\nAttributionControl.propTypes = propTypes;\nAttributionControl.defaultProps = defaultProps;\n\nexport default React.memo(AttributionControl);\n"],"file":"attribution-control.js"}