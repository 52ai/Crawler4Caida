{"version":3,"sources":["../../../src/components/scale-control.js"],"names":["React","useEffect","useState","useMemo","PropTypes","mapboxgl","useMapControl","mapControlDefaultProps","mapControlPropTypes","propTypes","Object","assign","className","string","style","object","maxWidth","number","unit","oneOf","defaultProps","ScaleControl","props","context","containerRef","mapboxScaleControl","createMapboxScaleControl","map","control","_map","_container","current","options","_onMove","position","memo"],"mappings":"AAmBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,OAA7B,QAA2C,OAA3C;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,aAAP,IAAuBC,sBAAvB,EAA+CC,mBAA/C,QAAyE,mBAAzE;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,mBAAlB,EAAuC;AACvDI,EAAAA,SAAS,EAAER,SAAS,CAACS,MADkC;AAEvDC,EAAAA,KAAK,EAAEV,SAAS,CAACW,MAFsC;AAGvDC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,MAHmC;AAIvDC,EAAAA,IAAI,EAAEd,SAAS,CAACe,KAAV,CAAgB,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CAAhB;AAJiD,CAAvC,CAAlB;AAOA,MAAMC,YAAY,GAAGV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,sBAAlB,EAA0C;AAC7DK,EAAAA,SAAS,EAAE,EADkD;AAE7DI,EAAAA,QAAQ,EAAE,GAFmD;AAG7DE,EAAAA,IAAI,EAAE;AAHuD,CAA1C,CAArB;;AAMA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA0BlB,aAAa,CAACgB,KAAD,CAA7C;AACA,QAAM,CAACG,kBAAD,EAAqBC,wBAArB,IAAiDxB,QAAQ,CAAC,IAAD,CAA/D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,OAAO,CAACI,GAAZ,EAAiB;AACf,YAAMC,OAAO,GAAG,IAAIvB,QAAQ,CAACgB,YAAb,EAAhB;AACAO,MAAAA,OAAO,CAACC,IAAR,GAAeN,OAAO,CAACI,GAAvB;AACAC,MAAAA,OAAO,CAACE,UAAR,GAAqBN,YAAY,CAACO,OAAlC;AACAL,MAAAA,wBAAwB,CAACE,OAAD,CAAxB;AACD;AACF,GAPQ,EAON,CAACL,OAAO,CAACI,GAAT,CAPM,CAAT;;AASA,MAAIF,kBAAJ,EAAwB;AACtBA,IAAAA,kBAAkB,CAACO,OAAnB,GAA6BV,KAA7B;;AACAG,IAAAA,kBAAkB,CAACQ,OAAnB;AACD;;AAED,QAAMnB,KAAK,GAAGX,OAAO,CAAC,OAAO;AAAC+B,IAAAA,QAAQ,EAAE,UAAX;AAAuB,OAAGZ,KAAK,CAACR;AAAhC,GAAP,CAAD,EAAiD,CAACQ,KAAK,CAACR,KAAP,CAAjD,CAArB;AAEA,SACE;AAAK,IAAA,KAAK,EAAEA,KAAZ;AAAmB,IAAA,SAAS,EAAEQ,KAAK,CAACV;AAApC,KACE;AAAK,IAAA,GAAG,EAAEY,YAAV;AAAwB,IAAA,SAAS,EAAC;AAAlC,IADF,CADF;AAKD;;AAEDH,YAAY,CAACZ,SAAb,GAAyBA,SAAzB;AACAY,YAAY,CAACD,YAAb,GAA4BA,YAA5B;AAEA,eAAepB,KAAK,CAACmC,IAAN,CAAWd,YAAX,CAAf","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useEffect, useState, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\nimport mapboxgl from '../utils/mapboxgl';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  maxWidth: PropTypes.number,\n  unit: PropTypes.oneOf(['imperial', 'metric', 'nautical'])\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  maxWidth: 100,\n  unit: 'metric'\n});\n\nfunction ScaleControl(props) {\n  const {context, containerRef} = useMapControl(props);\n  const [mapboxScaleControl, createMapboxScaleControl] = useState(null);\n\n  useEffect(() => {\n    if (context.map) {\n      const control = new mapboxgl.ScaleControl();\n      control._map = context.map;\n      control._container = containerRef.current;\n      createMapboxScaleControl(control);\n    }\n  }, [context.map]);\n\n  if (mapboxScaleControl) {\n    mapboxScaleControl.options = props;\n    mapboxScaleControl._onMove();\n  }\n\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={props.className}>\n      <div ref={containerRef} className=\"mapboxgl-ctrl mapboxgl-ctrl-scale\" />\n    </div>\n  );\n}\n\nScaleControl.propTypes = propTypes;\nScaleControl.defaultProps = defaultProps;\n\nexport default React.memo(ScaleControl);\n"],"file":"scale-control.js"}