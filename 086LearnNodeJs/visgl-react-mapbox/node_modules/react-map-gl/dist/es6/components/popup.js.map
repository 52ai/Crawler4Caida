{"version":3,"sources":["../../../src/components/popup.js"],"names":["React","useRef","useState","useEffect","useCallback","PropTypes","useMapControl","mapControlDefaultProps","mapControlPropTypes","getDynamicPosition","ANCHOR_POSITION","crispPercentage","crispPixel","propTypes","Object","assign","className","string","longitude","number","isRequired","latitude","altitude","offsetLeft","offsetTop","tipSize","closeButton","bool","closeOnClick","anchor","oneOf","keys","dynamicPosition","sortByDepth","onClose","func","defaultProps","getPosition","props","viewport","el","x","y","padding","width","height","selfWidth","clientWidth","selfHeight","clientHeight","getContainerStyle","z","positionType","anchorPosition","left","top","xPercentage","yPercentage","style","position","transform","display","undefined","zIndex","Math","floor","Popup","contentRef","thisRef","context","containerRef","setLoaded","current","eventManager","clickCallback","on","off","children","project","containerStyle","onClickCloseButton","evt","once","e","stopPropagation","target","borderWidth","memo"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useRef, useState, useEffect, useCallback} from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\n\nimport {crispPercentage, crispPixel} from '../utils/crisp-pixel';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Altitude of the anchor point\n  altitude: PropTypes.number,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Size of the tip\n  tipSize: PropTypes.number,\n  // Whether to show close button\n  closeButton: PropTypes.bool,\n  // Whether to close on click\n  closeOnClick: PropTypes.bool,\n  // The popup's location relative to the coordinate\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  // Whether the popup anchor should be auto-adjusted to fit within the container\n  dynamicPosition: PropTypes.bool,\n  // Whether popups should be sorted by depth. Useful when using multiple popups with tilted map.\n  sortByDepth: PropTypes.bool,\n  // Callback when component is closed\n  onClose: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: () => {}\n});\n\nfunction getPosition(props, viewport, el, [x, y]) {\n  const {anchor, dynamicPosition, tipSize} = props;\n\n  if (el) {\n    return dynamicPosition\n      ? getDynamicPosition({\n          x,\n          y,\n          anchor,\n          padding: tipSize,\n          width: viewport.width,\n          height: viewport.height,\n          selfWidth: el.clientWidth,\n          selfHeight: el.clientHeight\n        })\n      : anchor;\n  }\n\n  return anchor;\n}\n\nfunction getContainerStyle(props, viewport, el, [x, y, z], positionType) {\n  const {offsetLeft, offsetTop, sortByDepth} = props;\n  const anchorPosition = ANCHOR_POSITION[positionType];\n  const left = x + offsetLeft;\n  const top = y + offsetTop;\n\n  const xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n  const yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n  const style = {\n    position: 'absolute',\n    transform: `\n      translate(${xPercentage}%, ${yPercentage}%)\n      translate(${crispPixel(left)}px, ${crispPixel(top)}px)\n    `,\n    display: undefined,\n    zIndex: undefined\n  };\n\n  if (!sortByDepth) {\n    return style;\n  }\n  if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n    // clipped\n    style.display = 'none';\n  } else {\n    // use z-index to rearrange components\n    style.zIndex = Math.floor(((1 - z) / 2) * 100000);\n  }\n\n  return style;\n}\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the popup's position when the parent re-renders.\n */\nfunction Popup(props) {\n  const contentRef = useRef(null);\n  const thisRef = useMapControl(props);\n  const {context, containerRef} = thisRef;\n  const [, setLoaded] = useState(false);\n\n  useEffect(() => {\n    // Container just got a size, re-calculate position\n    setLoaded(true);\n  }, [contentRef.current]);\n\n  useEffect(() => {\n    if (context.eventManager && props.closeOnClick) {\n      const clickCallback = () => thisRef.props.onClose();\n      context.eventManager.on('anyclick', clickCallback);\n\n      return () => {\n        context.eventManager.off('anyclick', clickCallback);\n      };\n    }\n    return undefined;\n  }, [context.eventManager, props.closeOnClick]);\n\n  const {viewport} = context;\n  const {className, longitude, latitude, altitude, tipSize, closeButton, children} = props;\n\n  const position = viewport.project([longitude, latitude, altitude]);\n\n  const positionType = getPosition(props, viewport, contentRef.current, position);\n  const containerStyle = getContainerStyle(\n    props,\n    viewport,\n    containerRef.current,\n    position,\n    positionType\n  );\n\n  const onClickCloseButton = useCallback(evt => {\n    thisRef.props.onClose();\n\n    const {eventManager} = thisRef.context;\n    if (eventManager) {\n      // Using with InteractiveMap\n      // After we call `onClose` on `anyclick`, this component will be unmounted\n      // at which point we unregister the event listeners and stop blocking propagation.\n      // Then after a short delay a `click` event will fire\n      // Attach a one-time event listener here to prevent it from triggering `onClick` of the base map\n      eventManager.once('click', e => e.stopPropagation(), evt.target);\n    }\n  }, []);\n\n  return (\n    <div\n      className={`mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`}\n      // @ts-ignore\n      style={containerStyle}\n      ref={containerRef}\n    >\n      <div key=\"tip\" className=\"mapboxgl-popup-tip\" style={{borderWidth: tipSize}} />\n      <div key=\"content\" ref={contentRef} className=\"mapboxgl-popup-content\">\n        {closeButton && (\n          <button\n            key=\"close-button\"\n            className=\"mapboxgl-popup-close-button\"\n            type=\"button\"\n            onClick={onClickCloseButton}\n          >\n            ×\n          </button>\n        )}\n        {children}\n      </div>\n    </div>\n  );\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\n\nexport default React.memo(Popup);\n"],"file":"popup.js"}