{"version":3,"sources":["../../../src/components/map-context.js"],"names":["React","createContext","useState","useContext","MapContext","viewport","map","container","onViewportChange","onViewStateChange","eventManager","MapContextProvider","Provider","WrappedProvider","value","children","setMap","context"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;AAEA,MAAMC,UAAU,GAAGH,aAAa,CAAC;AAI/BI,EAAAA,QAAQ,EAAE,IAJqB;AAM/BC,EAAAA,GAAG,EAAE,IAN0B;AAQ/BC,EAAAA,SAAS,EAAE,IARoB;AAW/BC,EAAAA,gBAAgB,EAAE,IAXa;AAY/BC,EAAAA,iBAAiB,EAAE,IAZY;AAe/BC,EAAAA,YAAY,EAAE;AAfiB,CAAD,CAAhC;AAmBA,OAAO,MAAMC,kBAAkB,GAAGP,UAAU,CAACQ,QAAtC;;AAGP,SAASC,eAAT,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAzB,EAA4C;AAC1C,QAAM,CAACT,GAAD,EAAMU,MAAN,IAAgBd,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMe,OAAO,GAAGd,UAAU,CAACC,UAAD,CAA1B;AAEAU,EAAAA,KAAK,GAAG;AACNE,IAAAA,MADM;AAEN,OAAGC,OAFG;AAGNX,IAAAA,GAAG,EAAGW,OAAO,IAAIA,OAAO,CAACX,GAApB,IAA4BA,GAH3B;AAIN,OAAGQ;AAJG,GAAR;AAOA,SAAO,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAEA;AAA3B,KAAmCC,QAAnC,CAAP;AACD;;AAEDX,UAAU,CAACQ,QAAX,GAAsBC,eAAtB;AAEA,eAAeT,UAAf","sourcesContent":["import * as React from 'react';\nimport {createContext, useState, useContext} from 'react';\n\nconst MapContext = createContext({\n  /* Map context */\n\n  // Viewport\n  viewport: null,\n  // mapboxgl.Map instance\n  map: null,\n  // DOM element that contains the map\n  container: null,\n\n  /* Interaction callbacks */\n  onViewportChange: null,\n  onViewStateChange: null,\n\n  // EventManager instance\n  eventManager: null\n});\n\n// Save the original Provider component\nexport const MapContextProvider = MapContext.Provider;\n\n// And replace Provider with our own\nfunction WrappedProvider({value, children}) {\n  const [map, setMap] = useState(null);\n  const context = useContext(MapContext);\n\n  value = {\n    setMap,\n    ...context,\n    map: (context && context.map) || map,\n    ...value\n  };\n\n  return <MapContextProvider value={value}>{children}</MapContextProvider>;\n}\n\nMapContext.Provider = WrappedProvider;\n\nexport default MapContext;\n"],"file":"map-context.js"}