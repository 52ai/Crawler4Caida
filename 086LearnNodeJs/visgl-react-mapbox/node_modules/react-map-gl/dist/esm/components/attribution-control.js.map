{"version":3,"sources":["../../../src/components/attribution-control.js"],"names":["React","useEffect","useCallback","useState","useRef","useMemo","PropTypes","mapboxgl","useMapControl","mapControlDefaultProps","mapControlPropTypes","propTypes","Object","assign","toggleLabel","string","className","style","object","compact","bool","customAttribution","oneOfType","arrayOf","defaultProps","setupAttributioncontrol","opts","map","container","attributionContainer","control","AttributionControl","_map","_container","_innerContainer","_updateAttributions","_updateEditLink","on","_updateData","removeAttributionControl","off","props","context","containerRef","innerContainerRef","showCompact","setShowCompact","current","undefined","viewport","width","toggleAttribution","value","position","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useEffect, useCallback, useState, useRef, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\nimport mapboxgl from '../utils/mapboxgl';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  toggleLabel: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  compact: PropTypes.bool,\n  customAttribution: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  toggleLabel: 'Toggle Attribution'\n});\n\nfunction setupAttributioncontrol(opts, map, container, attributionContainer) {\n  const control = new mapboxgl.AttributionControl(opts);\n  control._map = map;\n  control._container = container;\n  control._innerContainer = attributionContainer;\n\n  // from AttributionControl.onAdd()\n  control._updateAttributions();\n  control._updateEditLink();\n  map.on('styledata', control._updateData);\n  map.on('sourcedata', control._updateData);\n\n  return control;\n}\n\nfunction removeAttributionControl(control) {\n  control._map.off('styledata', control._updateData);\n  control._map.off('sourcedata', control._updateData);\n}\n\nfunction AttributionControl(props) {\n  const {context, containerRef} = useMapControl(props);\n  const innerContainerRef = useRef(null);\n  const [showCompact, setShowCompact] = useState(false);\n\n  useEffect(() => {\n    let control;\n    if (context.map) {\n      control = setupAttributioncontrol(\n        {\n          customAttribution: props.customAttribution\n        },\n        context.map,\n        containerRef.current,\n        innerContainerRef.current\n      );\n    }\n\n    return () => control && removeAttributionControl(control);\n  }, [context.map]);\n\n  const compact = props.compact === undefined ? context.viewport.width <= 640 : props.compact;\n\n  useEffect(() => {\n    if (!compact && showCompact) {\n      setShowCompact(false);\n    }\n  }, [compact]);\n\n  const toggleAttribution = useCallback(() => setShowCompact(value => !value), []);\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={props.className}>\n      <div\n        ref={containerRef}\n        aria-pressed={showCompact}\n        className={`mapboxgl-ctrl mapboxgl-ctrl-attrib ${compact ? 'mapboxgl-compact' : ''} ${\n          showCompact ? 'mapboxgl-compact-show' : ''\n        }`}\n      >\n        <button\n          type=\"button\"\n          className=\"mapboxgl-ctrl-attrib-button\"\n          title={props.toggleLabel}\n          onClick={toggleAttribution}\n        />\n        <div ref={innerContainerRef} className=\"mapboxgl-ctrl-attrib-inner\" role=\"list\" />\n      </div>\n    </div>\n  );\n}\n\nAttributionControl.propTypes = propTypes;\nAttributionControl.defaultProps = defaultProps;\n\nexport default React.memo(AttributionControl);\n"],"file":"attribution-control.js"}