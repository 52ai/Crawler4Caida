{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["React","useMemo","PropTypes","MapState","LINEAR_TRANSITION_PROPS","compareVersions","useMapControl","mapControlDefaultProps","mapControlPropTypes","noop","propTypes","Object","assign","className","string","style","object","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","zoomInLabel","zoomOutLabel","compassLabel","defaultProps","VERSION_LEGACY","VERSION_1_6","getUIVersion","mapboxVersion","updateViewport","context","props","opts","viewport","mapState","viewState","getViewportProps","renderButton","type","label","callback","children","renderCompass","uiVersion","map","version","bearing","transform","NavigationControl","containerRef","onZoomIn","zoom","onZoomOut","onResetNorth","pitch","position","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport {compareVersions} from '../utils/version';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool,\n  // Custom labels assigned to the controls\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\n\n// Mapbox version flags. CSS classes were changed in certain versions.\nconst VERSION_LEGACY = 1;\nconst VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nfunction updateViewport(context, props, opts) {\n  const {viewport} = context;\n  const mapState = new MapState(Object.assign({}, viewport, opts));\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction renderButton(type, label, callback, children) {\n  return (\n    <button\n      key={type}\n      className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n      type=\"button\"\n      title={label}\n      onClick={callback}\n    >\n      {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\n    </button>\n  );\n}\n\nfunction renderCompass(context) {\n  const uiVersion = useMemo(() => (context.map ? getUIVersion(context.map.version) : VERSION_1_6), [\n    context.map\n  ]);\n\n  const {bearing} = context.viewport;\n  const style = {transform: `rotate(${-bearing}deg)`};\n\n  return uiVersion === VERSION_1_6 ? (\n    <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\n  ) : (\n    <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\n  );\n}\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nfunction NavigationControl(props) {\n  const {context, containerRef} = useMapControl(props);\n\n  const onZoomIn = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom + 1});\n  };\n\n  const onZoomOut = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom - 1});\n  };\n\n  const onResetNorth = () => {\n    updateViewport(context, props, {bearing: 0, pitch: 0});\n  };\n\n  const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = props;\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        {showZoom && renderButton('zoom-in', zoomInLabel, onZoomIn)}\n        {showZoom && renderButton('zoom-out', zoomOutLabel, onZoomOut)}\n        {showCompass && renderButton('compass', compassLabel, onResetNorth, renderCompass(context))}\n      </div>\n    </div>\n  );\n}\n\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\n\nexport default React.memo(NavigationControl);\n"],"file":"navigation-control.js"}