{"version":3,"sources":["../../../../src/utils/transition/transition-interpolator.js"],"names":["equals","assert","TransitionInterpolator","currentProps","nextProps","propNames","key","startProps","endProps","start","end","t","transitionDuration"],"mappings":";;;;;;;;;;AAAA,SAAQA,MAAR,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IAEqBC,sB;;;;uCACP,E;;;;;kCAQEC,Y,EAAcC,S,EAAW;AAAA,iDACnB,KAAKC,SAAL,IAAkB,EADC;AAAA;;AAAA;AACrC,4DAAwC;AAAA,cAA7BC,GAA6B;;AACtC,cAAI,CAACN,MAAM,CAACG,YAAY,CAACG,GAAD,CAAb,EAAoBF,SAAS,CAACE,GAAD,CAA7B,CAAX,EAAgD;AAC9C,mBAAO,KAAP;AACD;AACF;AALoC;AAAA;AAAA;AAAA;AAAA;;AAMrC,aAAO,IAAP;AACD;;;oCASeC,U,EAAYC,Q,EAAU;AACpC,aAAO;AAACC,QAAAA,KAAK,EAAEF,UAAR;AAAoBG,QAAAA,GAAG,EAAEF;AAAzB,OAAP;AACD;;;qCASgBD,U,EAAYC,Q,EAAUG,C,EAAG;AACxCV,MAAAA,MAAM,CAAC,KAAD,EAAQ,qCAAR,CAAN;AACD;;;gCAQWM,U,EAAYC,Q,EAAU;AAChC,aAAOA,QAAQ,CAACI,kBAAhB;AACD;;;;;;SAhDkBV,sB","sourcesContent":["import {equals} from '../math-utils';\nimport assert from '../assert';\n\nexport default class TransitionInterpolator {\n  propNames = [];\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {boolean} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps, nextProps) {\n    for (const key of this.propNames || []) {\n      if (!equals(currentProps[key], nextProps[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(startProps, endProps) {\n    return {start: startProps, end: endProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  interpolateProps(startProps, endProps, t) {\n    assert(false, 'interpolateProps is not implemented');\n  }\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps, endProps) {\n    return endProps.transitionDuration;\n  }\n}\n"],"file":"transition-interpolator.js"}